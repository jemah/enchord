{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getAu",
				"getAuthorName"
			],
			[
				"folder",
				"folderSchema"
			],
			[
				"isAuth",
				"isAuthenticated"
			],
			[
				"index",
				"indexOfUser"
			],
			[
				"send",
				"sendARPres"
			],
			[
				"se",
				"sendARPreq"
			],
			[
				"sr_icmp",
				"sr_icmp_hdr_t"
			],
			[
				"sr_arp_hd",
				"sr_arp_hdr_t"
			],
			[
				"sr_arp_h",
				"sr_arp_hdr_t"
			],
			[
				"sr_arp_",
				"sr_arp_hdr_t"
			],
			[
				"sr_ethernet",
				"sr_ethernet_hdr_t"
			],
			[
				"ETH",
				"ETHER_ADDR_LEN"
			],
			[
				"print_add_",
				"print_addr_ip"
			],
			[
				"print_add",
				"print_addr_ip_int"
			],
			[
				"content",
				"contentList"
			],
			[
				"new",
				"newcontentTuples"
			],
			[
				"validate",
				"validatePrescenseOf"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 1770 files for \"editsong\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/app.js:\n   10      // .when('/editband/:_id', {templateUrl: 'partials/band_edit'})\n   11      // .when('/viewband/:_id', {templateUrl: 'partials/band_view'})\n   12:     // .when('/createsong', {templateUrl: 'partials/editsong'})\n   13:     // .when('/editsong/:_id', {templateUrl: 'partials/editsong'})\n   14      // .when('/viewsong/:_id', {templateUrl: 'partials/viewsong'})\n   15      // // .when('/about', { templateUrl: 'partials/about'})\n   ..\n   86  // 	.when('/edit/:songId',\n   87  // 	{\n   88: // 		controller: 'EditSongController',\n   89  // 		templateUrl: 'partials/edit_song.html',\n   90  // 		resolve: {\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  216  				\n  217  				// go to edit page\n  218: 				var url = '/editsong/' + data.song._id;\n  219  				$window.location.href = url;\n  220  			}).error(function(data, status) {\n  ...\n  353  			// 	Side.setPagetype(\"createsong\");\n  354  			// else\n  355: 			// 	Side.setPagetype(\"editsong\");\n  356  			if(_id != undefined && _id.length != 0) {\n  357  				var getUrl = '/findsong/' + _id;\n  ...\n  409  				// go to edit page\n  410  				$scope.isNew = false;\n  411: 				$window.location.href='/members/editsong/' + data.song._id;\n  412  				// $location.url(url);\n  413  \n  ...\n  427  			});\n  428  		}\n  429: 		$scope.editsong = function(redirect) {\n  430  			console.log(\"edit \" + $scope.song.title);\n  431  			$scope.song.data = $('#data').val();\n  ...\n  433  			$http({\n  434  				method  : 'POST',\n  435: 				url     : '/editsong',\n  436  				data    : $.param($scope.song),\n  437  				headers : { 'Content-Type': 'application/x-www-form-urlencoded' }\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/folderutils.js:\n  156  }\n  157  \n  158: //maybe make it similar to how editSong works? also later just make an editFolder page to have option to share\n  159  //folder sharing is ONLY FOR BANDS. What it means to share a folder: others can view, edit songs, add songs to the folder\n  160  /*exports.shareFolder = function(req, res) {\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n  109  \n  110  		app.get('/members/createsong', isLoggedIn, function(req, res){\n  111: 			res.render('editsong.ejs', {\n  112  				isLoggedIn: req.isAuthenticated,\n  113  				username: utils.getUsername(req),\n  ...\n  117  		});\n  118  \n  119: 		app.get('/members/editsong/:_id', utils.isAuthor, function(req, res){\n  120: 			res.render('editsong.ejs', {\n  121  				isLoggedIn: req.isAuthenticated,\n  122  				username: utils.getUsername(req),\n  ...\n  169  		app.get('/findsong/:_id', utils.getSong)\n  170  		app.get('/createsong', isLoggedIn, function(req, res) {\n  171: 			res.render('editsong.ejs', {title: 'enchord', isNew: true, song: songEmpty, message: ''});\n  172  		});\n  173  \n  174  		app.post('/createsong', isLoggedIn, utils.createSong);\n  175  		\n  176: 		// app.get('/editsong', isLoggedIn, function(req, res) {\n  177: 		// 	res.render('editsong.ejs', {title: 'enchord', isNew: true, song: songEmpty, message: ''});\n  178  		// });\n  179  		\n  180: 		app.post('/editsong', isLoggedIn, utils.editSong);\n  181  		\n  182: 		app.get('/editsong/:_id', utils.isAuthor, utils.loadSongEdit);\n  183  \n  184  		// app.get('/viewsong/:_id', utils.loadSongView);\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/utils.js:\n   45  		res.send({song: song, message: 'Successfully created', hasError: false, isNew: false});\n   46  		return;\n   47: 		// res.render('editsong.ejs', {title: 'enchord', isNew: false, song: product, message: 'Successfully created'});\n   48  	});\n   49  };\n   50  \n   51: exports.editSong = function(req, res) {\n   52  	var id = req.body._id;\n   53  	var song = new songSchema({\n   ..\n   86  	\n   87  	var findsong = findSong(id, res, function(docs) {\n   88: 		res.render('editsong.ejs', {title: 'enchord', isNew: false, song: docs, message: 'Song loaded'});\n   89  	});\n   90  }\n   ..\n  601  \n  602  \n  603: /*exports.editSong = function(req, res) {\n  604  	var id = req.body._id;\n  605  	var song = new songSchema({\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editsong.ejs:\n   47          </header>\n   48          <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-controller=\"SongEditController\" ng-init=\"init('<%= _id %>')\">\n   49:             <% include side_editsong.ejs %>\n   50:             <% include partial_editsong.ejs %>\n   51          </div>\n   52          <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js\"></script>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_editsong.ejs:\n   42                      <button ng-click=\"createsong()\" class=\"button\" ng-show=\"isNew\" style=\"background-color: rgb(77, 144, 254) !important; background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important;border-color: rgb(48, 121, 237) !important;\" ><i class=\"fa fa-dropbox\"></i> Save</button>\n   43  \n   44:                     <button ng-click=\"editsong(false)\" class=\"button\" ng-show=\"!isNew\" style=\"background-color: rgb(77, 144, 254) !important; background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important;border-color: rgb(48, 121, 237) !important;\" ><i class=\"fa fa-dropbox\"></i> Save</button>\n   45  \n   46:                     <button ng-click=\"editsong(true)\" class=\"button\" ng-show=\"!isNew\" style=\"background:-webkit-linear-gradient(bottom,#4d4d4d, #2f2f2f);background:-moz-linear-gradient(bottom,#4d4d4d, #2f2f2f); border:1px solid #222;\"><i class=\"fa fa-check\"></i> Done Editing</button>\n   47  \n   48                      <button class=\"button\" ng-disabled=\"songEditForm.$invalid\" ng-show=\"!isNew\" ng-click=\"deletesong()\" type=\"submit\" class=\"btn btn-default\" style=\"background:-webkit-linear-gradient(bottom,#4d4d4d, #2f2f2f);background:-moz-linear-gradient(bottom,#4d4d4d, #2f2f2f); border:1px solid #222;\"><i class=\"fa fa-times\"></i> Delete Song</button>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/index.ejs:\n   52                  <div ng-switch-when=\"band\"><% include side_band.ejs %></div>\n   53                  <div ng-switch-when=\"viewband\"><% include side_viewband.ejs %></div>\n   54:                 <div ng-switch-when=\"createsong\"><% include side_editsong.ejs %></div>\n   55:                 <div ng-switch-when=\"editsong\"><% include side_editsong.ejs %></div>\n   56              </div>\n   57              <div ng-view/>\n\n30 matches across 8 files\n\n\nSearching 1770 files for \"createband\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/app.js:\n    7      // .when('/', { templateUrl: 'partials/library'})\n    8      // .when('/search/:query', {templateUrl: 'partials/search'})\n    9:     // .when('/createband', {templateUrl: 'partials/band_create'})\n   10      // .when('/editband/:_id', {templateUrl: 'partials/band_edit'})\n   11      // .when('/viewband/:_id', {templateUrl: 'partials/band_view'})\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  560  			}\n  561  		}\n  562: 		$scope.createband = function() {\n  563  			$http({\n  564  				method : 'POST',\n  565: 				url    : '/createband',\n  566  				params : {bandname : $scope.band.name}\n  567  			}).success(function(data){\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/bandutils.js:\n   14  \n   15  \n   16: exports.createBand = function(req, res) {\n   17  	var id = utils.getId(req);\n   18  	var username = utils.getUsername(req);\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n  252  		});*/\n  253  \n  254: 		app.get('/members/createband',  isLoggedIn, function(req, res) {\n  255  			res.render('editband.ejs', {\n  256  				isLoggedIn: req.isAuthenticated,\n  ...\n  260  			});\n  261  		});\n  262: 		app.post('/createband', isLoggedIn, bandutils.createBand);\n  263  \n  264  		app.get('/members/editband/:_id', isLoggedIn, function(req, res) {\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile.ejs:\n   63                          </li>\n   64                          <li>\n   65:                             <a href=\"/createband\">\n   66                                  <i class=\"fa fa-plus\"></i> <span>Create a Band</span>\n   67                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile_orig.ejs.html:\n   63                          </li>\n   64                          <li>\n   65:                             <a href=\"/createband\">\n   66                                  <i class=\"fa fa-plus\"></i> <span>Create a Band</span>\n   67                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs:\n   27              </li>\n   28              <li>\n   29:                 <a href=\"/createband\">\n   30                      <i class=\"fa fa-plus\"></i> <span>Create a Band</span>\n   31                  </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile.ejs:\n   63                          </li>\n   64                          <li>\n   65:                             <a href=\"/createband\">\n   66                                  <i class=\"fa fa-plus\"></i> <span>Create a Band</span>\n   67                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile_orig.ejs.html:\n   63                          </li>\n   64                          <li>\n   65:                             <a href=\"/createband\">\n   66                                  <i class=\"fa fa-plus\"></i> <span>Create a Band</span>\n   67                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partials/band_create.ejs:\n    5          <input type=\"text\" name=\"bandname\" class=\"form-control\" ng-model=\"band.name\" placeholder=\"Band Name\"/><br>\n    6          <input type=\"text\" name=\"frontman\" class=\"form-control\" placeholder=\"{{user.username}}\" readonly/><br>\n    7:         <button ng-click=\"createband()\" class=\"button\" style=\"background-color: rgb(77, 144, 254) !important;\n    8  background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important;border-color: rgb(48, 121, 237) !important; margin-top: 20px;\"><i class=\"fa fa-check\"></i> Create Band</button>\n    9      </form>\n\n13 matches across 10 files\n\n\nSearching 1770 files for \"createsong\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/app.js:\n   10      // .when('/editband/:_id', {templateUrl: 'partials/band_edit'})\n   11      // .when('/viewband/:_id', {templateUrl: 'partials/band_view'})\n   12:     // .when('/createsong', {templateUrl: 'partials/editsong'})\n   13      // .when('/editsong/:_id', {templateUrl: 'partials/editsong'})\n   14      // .when('/viewsong/:_id', {templateUrl: 'partials/viewsong'})\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  209  			$http({\n  210  				method  : 'POST',\n  211: 				url     : '/createsong',\n  212  				data    : $.param($scope.song),\n  213  				headers : { 'Content-Type': 'application/x-www-form-urlencoded' }\n  ...\n  351  		$scope.init = function(_id) {\n  352  			// if(_id == undefined)\n  353: 			// 	Side.setPagetype(\"createsong\");\n  354  			// else\n  355  			// 	Side.setPagetype(\"editsong\");\n  ...\n  363  					if (data.song == undefined) { // if song does not exist\n  364  						console.log(\"Song not found\");\n  365: 						$window.location.href='/members/createsong';\n  366  						return;\n  367  					}\n  ...\n  392  		}\n  393  \n  394: 		$scope.createsong = function() {\n  395  			console.log(\"create \" + $scope.song.title);\n  396  			console.log($('#data').val());\n  ...\n  401  			$http({\n  402  				method  : 'POST',\n  403: 				url     : '/createsong',\n  404  				data    : $.param($scope.song),\n  405  				headers : { 'Content-Type': 'application/x-www-form-urlencoded' }\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n  108  		});\n  109  \n  110: 		app.get('/members/createsong', isLoggedIn, function(req, res){\n  111  			res.render('editsong.ejs', {\n  112  				isLoggedIn: req.isAuthenticated,\n  ...\n  168  		\n  169  		app.get('/findsong/:_id', utils.getSong)\n  170: 		app.get('/createsong', isLoggedIn, function(req, res) {\n  171  			res.render('editsong.ejs', {title: 'enchord', isNew: true, song: songEmpty, message: ''});\n  172  		});\n  173  \n  174: 		app.post('/createsong', isLoggedIn, utils.createSong);\n  175  		\n  176  		// app.get('/editsong', isLoggedIn, function(req, res) {\n  ...\n  234  		//bands\n  235  \n  236: 		/*app.get('/members/createsong', isLoggedIn, function(req, res){\n  237  			res.render('editsong.ejs', {\n  238  				isLoggedIn: req.isAuthenticated,\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/utils.js:\n   11  						\"KQA/Pz8DKQ4/Pz8/fT9MIT8/Pz8/GV4ePz8/Pz9jPz8=\"); // pdf\n   12  \n   13: exports.createSong = function(req, res) {\n   14  	var song = new songSchema({\n   15  		title: req.body.title,\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile.ejs:\n   58                      <ul class=\"sidebar-menu\">\n   59                          <li class=\"active\">\n   60:                             <a href=\"/createsong\">\n   61                                  <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   62                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile_orig.ejs.html:\n   58                      <ul class=\"sidebar-menu\">\n   59                          <li class=\"active\">\n   60:                             <a href=\"/createsong\">\n   61                                  <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   62                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs:\n   22          <ul class=\"sidebar-menu\">\n   23              <li class=\"active\">\n   24:                 <a href=\"members/createsong\">\n   25                      <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   26                  </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_editsong.ejs:\n   23          <ul class=\"sidebar-menu\">\n   24              <li class=\"active\">\n   25:                 <a href=\"/members/createsong\">\n   26                      <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   27                  </a>\n   ..\n   40  \n   41  \n   42:                     <button ng-click=\"createsong()\" class=\"button\" ng-show=\"isNew\" style=\"background-color: rgb(77, 144, 254) !important; background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important;border-color: rgb(48, 121, 237) !important;\" ><i class=\"fa fa-dropbox\"></i> Save</button>\n   43  \n   44                      <button ng-click=\"editsong(false)\" class=\"button\" ng-show=\"!isNew\" style=\"background-color: rgb(77, 144, 254) !important; background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important;border-color: rgb(48, 121, 237) !important;\" ><i class=\"fa fa-dropbox\"></i> Save</button>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/viewband.ejs:\n   78                          </li>\n   79                          <li>\n   80:                             <a href=\"createsong.html\">\n   81                                  <i class=\"fa fa-plus\"></i> <span> Create a Song</span>\n   82                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/editsong.ejs:\n   59                      <ul class=\"sidebar-menu\">\n   60                          <li class=\"active\">\n   61:                             <a href=\"createsong.html\">\n   62                                  <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   63                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/index.ejs:\n   52                  <div ng-switch-when=\"band\"><% include side_band.ejs %></div>\n   53                  <div ng-switch-when=\"viewband\"><% include side_viewband.ejs %></div>\n   54:                 <div ng-switch-when=\"createsong\"><% include side_editsong.ejs %></div>\n   55                  <div ng-switch-when=\"editsong\"><% include side_editsong.ejs %></div>\n   56              </div>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile.ejs:\n   58                      <ul class=\"sidebar-menu\">\n   59                          <li class=\"active\">\n   60:                             <a href=\"/createsong\">\n   61                                  <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   62                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile_orig.ejs.html:\n   58                      <ul class=\"sidebar-menu\">\n   59                          <li class=\"active\">\n   60:                             <a href=\"/createsong\">\n   61                                  <i class=\"fa fa-plus\"></i> <span>Create a Song</span>\n   62                              </a>\n\n22 matches across 13 files\n\n\nSearching 1775 files for \"createFolder\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  733  		}\n  734  \n  735: 		$scope.createfolder = function() {\n  736  			console.log(\"create \" + $scope.folder.name);\n  737  			$http({\n  738  				method : 'GET',\n  739: 				url    : '/createfolder/' + $scope.folder.name\n  740  			}).success(function(data){\n  741  				console.log(data);\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n  224  		app.get('/deletesongfromfolder/:songid', isLoggedIn, folderutils.deleteSongFromFolder);\n  225  		\n  226: 		app.get('/createfolder/:name', isLoggedIn, folderutils.makeFolder);\n  227  		\n  228  		//app.get('/sharefolder/:folderid&:userid', isLoggedIn, folderutils.shareFolder);\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs:\n   36                              <!-- added button back because need to handle submission with ng-click -->\n   37                              <span class=\"input-group-btn\">\n   38:                                 <button ng-click=\"createfolder()\" type='submit' name='create' id='search-btn' class=\"btn btn-flat\"><i class=\"fa fa-plus\"></i></button>\n   39                              </span>\n   40                          </div>\n   ..\n   77                              <!-- added button back because need to handle submission with ng-click -->\n   78                              <span class=\"input-group-btn\">\n   79:                                 <button ng-click=\"createfolder()\" type='submit' name='create' id='search-btn' class=\"btn btn-flat\"><i class=\"fa fa-plus\"></i></button>\n   80                              </span>\n   81                          </div>\n\n5 matches across 3 files\n\n\nSearching 1778 files for \"/addsongtofolder\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  110  			console.log('i am going to go add the folder');\n  111  			console.log(songid);\n  112: 			$window.location.href='/addsongtofolder/' + songid;\n  113  			console.log(songid);\n  114  		}\n  ...\n  769  			$http({\n  770  				method: 'POST',\n  771: 				url : '/addsongtofolder',\n  772  				data    : $.param({songid: songid, folderid: folderid}),\n  773  				headers : { 'Content-Type': 'application/x-www-form-urlencoded' }\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n  223  		app.get('/viewfoldersongs/:_id', isLoggedIn, folderutils.getFolderSongs);\n  224  		\n  225: 		//app.get('/addsongtofolder/:folderid&:songid', isLoggedIn, folderutils.addSongToFolder);\n  226: 		app.get('/addsongtofolder/:songid', isLoggedIn, function(req, res) {\n  227  			res.render('addtofolder.ejs', {\n  228  				songid: req.params.songid,\n  ...\n  231  			});\n  232  		});\n  233: 		app.post('/addsongtofolder', isLoggedIn, folderutils.addSongToFolder);\n  234  		\n  235  		//check this, maybe need folderid to check????\n\n5 matches across 2 files\n\n\nSearching 1785 files for \"folder\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/enchord.sublime-project:\n    1  {\n    2: 	\"folders\":\n    3  	[\n    4  		{\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/todo:\n    4  \n    5  back end\n    6: -implement folder system\n    7  -ratings\n    8  -allow user to choose different display methods\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/folder.js:\n    1  var mongoose = require('mongoose');\n    2  \n    3: module.exports = mongoose.model('folder', {\n    4  	name: String,\n    5: 	author_name: String, //original creator of the folder(can be changed to array)\n    6  	//shared: [String],\n    7  	author_id: String, //array of strings\n    8: 	band_id: String, //to get band folders, search for this in folderSchema. Set to '' if no band\n    9  	isBand: Boolean\n   10: 	//parent_folder: String //if applicable, set to ,, if no parent folder(save as id)\n   11  });\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/song.js:\n   19  	//rates: [{user_id: String, rating: Number}]\n   20  	rates: [String],\n   21: 	folder_id: String,\n   22  	band_id: String,\n   23  	isBand: Boolean\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/async/README.md:\n 1267          callback(null, 'data', 'converted to array');\n 1268      },\n 1269:     make_folder: function(callback){\n 1270:         console.log('in make_folder');\n 1271          // async code to create a directory to store a file in\n 1272          // this is run at the same time as getting the data\n 1273:         callback(null, 'folder');\n 1274      },\n 1275:     write_file: ['get_data', 'make_folder', function(callback, results){\n 1276          console.log('in write_file', JSON.stringify(results));\n 1277          // once there is some data and the directory exists,\n ....\n 1302      },\n 1303      function(callback){\n 1304:         console.log('in make_folder');\n 1305          // async code to create a directory to store a file in\n 1306          // this is run at the same time as getting the data\n 1307:         callback(null, 'folder');\n 1308      }\n 1309  ],\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/async/package.json:\n   36      \"test\": \"nodeunit test/test-async.js\"\n   37    },\n   38:   \"readme\": \"# Async.js\\n\\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.png?branch=master)](https://travis-ci.org/caolan/async)\\n\\n\\nAsync is a utility module which provides straight-forward, powerful functions\\nfor working with asynchronous JavaScript. Although originally designed for\\nuse with [Node.js](http://nodejs.org), it can also be used directly in the\\nbrowser. Also supports [component](https://github.com/component/component).\\n\\nAsync provides around 20 functions that include the usual 'functional'\\nsuspects (`map`, `reduce`, `filter`, `each`…) as well as some common patterns\\nfor asynchronous control flow (`parallel`, `series`, `waterfall`…). All these\\nfunctions assume you follow the Node.js convention of providing a single\\ncallback as the last argument of your `async` function.\\n\\n\\n## Quick Examples\\n\\n```javascript\\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n\\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\\n    // results now equals an array of the existing files\\n});\\n\\nasync.parallel([\\n    function(){ ... },\\n    function(){ ... }\\n], callback);\\n\\nasync.series([\\n    function(){ ... },\\n    function(){ ... }\\n]);\\n```\\n\\nThere are many more functions available so take a look at the docs below for a\\nfull list. This module aims to be comprehensive, so if you feel anything is\\nmissing please create a GitHub issue for it.\\n\\n## Common Pitfalls\\n\\n### Binding a context to an iterator\\n\\nThis section is really about `bind`, not about `async`. If you are wondering how to\\nmake `async` execute your iterators in a given context, or are confused as to why\\na method of another library isn't working as an iterator, study this example:\\n\\n```js\\n// Here is a simple object with an (unnecessarily roundabout) squaring method\\nvar AsyncSquaringLibrary = {\\n  squareExponent: 2,\\n  square: function(number, callback){ \\n    var result = Math.pow(number, this.squareExponent);\\n    setTimeout(function(){\\n      callback(null, result);\\n    }, 200);\\n  }\\n};\\n\\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\\n  // result is [NaN, NaN, NaN]\\n  // This fails because the `this.squareExponent` expression in the square\\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\\n  // therefore undefined.\\n});\\n\\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\\n  // result is [1, 4, 9]\\n  // With the help of bind we can attach a context to the iterator before\\n  // passing it to async. Now the square function will be executed in its \\n  // 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`\\n  // will be as expected.\\n});\\n```\\n\\n## Download\\n\\nThe source is available for download from\\n[GitHub](http://github.com/caolan/async).\\nAlternatively, you can install using Node Package Manager (`npm`):\\n\\n    npm install async\\n\\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\\n\\n## In the Browser\\n\\nSo far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. \\n\\nUsage:\\n\\n```html\\n<script type=\\\"text/javascript\\\" src=\\\"async.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n\\n    async.map(data, asyncProcess, function(err, results){\\n        alert(results);\\n    });\\n\\n</script>\\n```\\n\\n## Documentation\\n\\n### Collections\\n\\n* [`each`](#each)\\n* [`eachSeries`](#eachSeries)\\n* [`eachLimit`](#eachLimit)\\n* [`map`](#map)\\n* [`mapSeries`](#mapSeries)\\n* [`mapLimit`](#mapLimit)\\n* [`filter`](#filter)\\n* [`filterSeries`](#filterSeries)\\n* [`reject`](#reject)\\n* [`rejectSeries`](#rejectSeries)\\n* [`reduce`](#reduce)\\n* [`reduceRight`](#reduceRight)\\n* [`detect`](#detect)\\n* [`detectSeries`](#detectSeries)\\n* [`sortBy`](#sortBy)\\n* [`some`](#some)\\n* [`every`](#every)\\n* [`concat`](#concat)\\n* [`concatSeries`](#concatSeries)\\n\\n### Control Flow\\n\\n* [`series`](#series)\\n* [`parallel`](#parallel)\\n* [`parallelLimit`](#parallellimittasks-limit-callback)\\n* [`whilst`](#whilst)\\n* [`doWhilst`](#doWhilst)\\n* [`until`](#until)\\n* [`doUntil`](#doUntil)\\n* [`forever`](#forever)\\n* [`waterfall`](#waterfall)\\n* [`compose`](#compose)\\n* [`seq`](#seq)\\n* [`applyEach`](#applyEach)\\n* [`applyEachSeries`](#applyEachSeries)\\n* [`queue`](#queue)\\n* [`cargo`](#cargo)\\n* [`auto`](#auto)\\n* [`retry`](#retry)\\n* [`iterator`](#iterator)\\n* [`apply`](#apply)\\n* [`nextTick`](#nextTick)\\n* [`times`](#times)\\n* [`timesSeries`](#timesSeries)\\n\\n### Utils\\n\\n* [`memoize`](#memoize)\\n* [`unmemoize`](#unmemoize)\\n* [`log`](#log)\\n* [`dir`](#dir)\\n* [`noConflict`](#noConflict)\\n\\n\\n## Collections\\n\\n<a name=\\\"forEach\\\" />\\n<a name=\\\"each\\\" />\\n### each(arr, iterator, callback)\\n\\nApplies the function `iterator` to each item in `arr`, in parallel.\\nThe `iterator` is called with an item from the list, and a callback for when it\\nhas finished. If the `iterator` passes an error to its `callback`, the main\\n`callback` (for the `each` function) is immediately called with the error.\\n\\nNote, that since this function applies `iterator` to each item in parallel,\\nthere is no guarantee that the iterator functions will complete in order.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err)` which must be called once it has \\n  completed. If no error has occured, the `callback` should be run without \\n  arguments or with an explicit `null` argument.\\n* `callback(err)` - A callback which is called when all `iterator` functions\\n  have finished, or an error occurs.\\n\\n__Examples__\\n\\n\\n```js\\n// assuming openFiles is an array of file names and saveFile is a function\\n// to save the modified contents of that file:\\n\\nasync.each(openFiles, saveFile, function(err){\\n    // if any of the saves produced an error, err would equal that error\\n});\\n```\\n\\n```js\\n// assuming openFiles is an array of file names and saveFile is a function\\n// to save the modified contents of that file:\\n\\nasync.each(openFiles, function( file, callback) {\\n  \\n  // Perform operation on file here.\\n  console.log('Processing file ' + file);\\n  callback();\\n\\n  if( file.length > 32 ) {\\n    console.log('This file name is too long');\\n    callback('File name too long');\\n\\n    return;\\n  } else {\\n    console.log('File saved');\\n    callback();\\n  }\\n}, function(err){\\n    // if any of the saves produced an error, err would equal that error\\n    if( err ) {\\n      // One of the iterations produced an error.\\n      // All processing will now stop.\\n      console.log('A file failed to process');\\n    } else {\\n      console.log('All files have been processed successfully');\\n    }\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachSeries\\\" />\\n<a name=\\\"eachSeries\\\" />\\n### eachSeries(arr, iterator, callback)\\n\\nThe same as [`each`](#each), only `iterator` is applied to each item in `arr` in\\nseries. The next `iterator` is only called once the current one has completed. \\nThis means the `iterator` functions will complete in order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"forEachLimit\\\" />\\n<a name=\\\"eachLimit\\\" />\\n### eachLimit(arr, limit, iterator, callback)\\n\\nThe same as [`each`](#each), only no more than `limit` `iterator`s will be simultaneously \\nrunning at any time.\\n\\nNote that the items in `arr` are not processed in batches, so there is no guarantee that \\nthe first `limit` `iterator` functions will complete before any others are started.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `limit` - The maximum number of `iterator`s to run at any time.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err)` which must be called once it has \\n  completed. If no error has occured, the callback should be run without \\n  arguments or with an explicit `null` argument.\\n* `callback(err)` - A callback which is called when all `iterator` functions\\n  have finished, or an error occurs.\\n\\n__Example__\\n\\n```js\\n// Assume documents is an array of JSON objects and requestApi is a\\n// function that interacts with a rate-limited REST api.\\n\\nasync.eachLimit(documents, 20, requestApi, function(err){\\n    // if any of the saves produced an error, err would equal that error\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"map\\\" />\\n### map(arr, iterator, callback)\\n\\nProduces a new array of values by mapping each value in `arr` through\\nthe `iterator` function. The `iterator` is called with an item from `arr` and a\\ncallback for when it has finished processing. Each of these callback takes 2 arguments: \\nan `error`, and the transformed item from `arr`. If `iterator` passes an error to this \\ncallback, the main `callback` (for the `map` function) is immediately called with the error.\\n\\nNote, that since this function applies the `iterator` to each item in parallel,\\nthere is no guarantee that the `iterator` functions will complete in order. \\nHowever, the results array will be in the same order as the original `arr`.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err, transformed)` which must be called once \\n  it has completed with an error (which can be `null`) and a transformed item.\\n* `callback(err, results)` - A callback which is called when all `iterator`\\n  functions have finished, or an error occurs. Results is an array of the\\n  transformed items from the `arr`.\\n\\n__Example__\\n\\n```js\\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"mapSeries\\\" />\\n### mapSeries(arr, iterator, callback)\\n\\nThe same as [`map`](#map), only the `iterator` is applied to each item in `arr` in\\nseries. The next `iterator` is only called once the current one has completed. \\nThe results array will be in the same order as the original.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"mapLimit\\\" />\\n### mapLimit(arr, limit, iterator, callback)\\n\\nThe same as [`map`](#map), only no more than `limit` `iterator`s will be simultaneously \\nrunning at any time.\\n\\nNote that the items are not processed in batches, so there is no guarantee that \\nthe first `limit` `iterator` functions will complete before any others are started.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `limit` - The maximum number of `iterator`s to run at any time.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err, transformed)` which must be called once \\n  it has completed with an error (which can be `null`) and a transformed item.\\n* `callback(err, results)` - A callback which is called when all `iterator`\\n  calls have finished, or an error occurs. The result is an array of the\\n  transformed items from the original `arr`.\\n\\n__Example__\\n\\n```js\\nasync.mapLimit(['file1','file2','file3'], 1, fs.stat, function(err, results){\\n    // results is now an array of stats for each file\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"select\\\" />\\n<a name=\\\"filter\\\" />\\n### filter(arr, iterator, callback)\\n\\n__Alias:__ `select`\\n\\nReturns a new array of all the values in `arr` which pass an async truth test.\\n_The callback for each `iterator` call only accepts a single argument of `true` or\\n`false`; it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like `fs.exists`. This operation is\\nperformed in parallel, but the results array will be in the same order as the\\noriginal.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\\n  The `iterator` is passed a `callback(truthValue)`, which must be called with a \\n  boolean argument once it has completed.\\n* `callback(results)` - A callback which is called after all the `iterator`\\n  functions have finished.\\n\\n__Example__\\n\\n```js\\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\\n    // results now equals an array of the existing files\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"selectSeries\\\" />\\n<a name=\\\"filterSeries\\\" />\\n### filterSeries(arr, iterator, callback)\\n\\n__Alias:__ `selectSeries`\\n\\nThe same as [`filter`](#filter) only the `iterator` is applied to each item in `arr` in\\nseries. The next `iterator` is only called once the current one has completed. \\nThe results array will be in the same order as the original.\\n\\n---------------------------------------\\n\\n<a name=\\\"reject\\\" />\\n### reject(arr, iterator, callback)\\n\\nThe opposite of [`filter`](#filter). Removes values that pass an `async` truth test.\\n\\n---------------------------------------\\n\\n<a name=\\\"rejectSeries\\\" />\\n### rejectSeries(arr, iterator, callback)\\n\\nThe same as [`reject`](#reject), only the `iterator` is applied to each item in `arr`\\nin series.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"reduce\\\" />\\n### reduce(arr, memo, iterator, callback)\\n\\n__Aliases:__ `inject`, `foldl`\\n\\nReduces `arr` into a single value using an async `iterator` to return\\neach successive step. `memo` is the initial state of the reduction. \\nThis function only operates in series. \\n\\nFor performance reasons, it may make sense to split a call to this function into \\na parallel map, and then use the normal `Array.prototype.reduce` on the results. \\nThis function is for situations where each step in the reduction needs to be async; \\nif you can get the data before reducing it, then it's probably a good idea to do so.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `memo` - The initial state of the reduction.\\n* `iterator(memo, item, callback)` - A function applied to each item in the\\n  array to produce the next step in the reduction. The `iterator` is passed a\\n  `callback(err, reduction)` which accepts an optional error as its first \\n  argument, and the state of the reduction as the second. If an error is \\n  passed to the callback, the reduction is stopped and the main `callback` is \\n  immediately called with the error.\\n* `callback(err, result)` - A callback which is called after all the `iterator`\\n  functions have finished. Result is the reduced value.\\n\\n__Example__\\n\\n```js\\nasync.reduce([1,2,3], 0, function(memo, item, callback){\\n    // pointless async:\\n    process.nextTick(function(){\\n        callback(null, memo + item)\\n    });\\n}, function(err, result){\\n    // result is now equal to the last value of memo, which is 6\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"reduceRight\\\" />\\n### reduceRight(arr, memo, iterator, callback)\\n\\n__Alias:__ `foldr`\\n\\nSame as [`reduce`](#reduce), only operates on `arr` in reverse order.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"detect\\\" />\\n### detect(arr, iterator, callback)\\n\\nReturns the first value in `arr` that passes an async truth test. The\\n`iterator` is applied in parallel, meaning the first iterator to return `true` will\\nfire the detect `callback` with that result. That means the result might not be\\nthe first item in the original `arr` (in terms of order) that passes the test.\\n\\nIf order within the original `arr` is important, then look at [`detectSeries`](#detectSeries).\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\\n  The iterator is passed a `callback(truthValue)` which must be called with a \\n  boolean argument once it has completed.\\n* `callback(result)` - A callback which is called as soon as any iterator returns\\n  `true`, or after all the `iterator` functions have finished. Result will be\\n  the first item in the array that passes the truth test (iterator) or the\\n  value `undefined` if none passed.\\n\\n__Example__\\n\\n```js\\nasync.detect(['file1','file2','file3'], fs.exists, function(result){\\n    // result now equals the first file in the list that exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"detectSeries\\\" />\\n### detectSeries(arr, iterator, callback)\\n\\nThe same as [`detect`](#detect), only the `iterator` is applied to each item in `arr`\\nin series. This means the result is always the first in the original `arr` (in\\nterms of array order) that passes the truth test.\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"sortBy\\\" />\\n### sortBy(arr, iterator, callback)\\n\\nSorts a list by the results of running each `arr` value through an async `iterator`.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err, sortValue)` which must be called once it\\n  has completed with an error (which can be `null`) and a value to use as the sort\\n  criteria.\\n* `callback(err, results)` - A callback which is called after all the `iterator`\\n  functions have finished, or an error occurs. Results is the items from\\n  the original `arr` sorted by the values returned by the `iterator` calls.\\n\\n__Example__\\n\\n```js\\nasync.sortBy(['file1','file2','file3'], function(file, callback){\\n    fs.stat(file, function(err, stats){\\n        callback(err, stats.mtime);\\n    });\\n}, function(err, results){\\n    // results is now the original array of files sorted by\\n    // modified date\\n});\\n```\\n\\n__Sort Order__\\n\\nBy modifying the callback parameter the sorting order can be influenced:\\n\\n    //ascending order\\n    async.sortBy([1,9,3,5], function(x, callback){\\n        callback(err, x);\\n    }, function(err,result){\\n        //result callback\\n    } );\\n\\n    //descending order\\n    async.sortBy([1,9,3,5], function(x, callback){\\n        callback(err, x*-1);    //<- x*-1 instead of x, turns the order around\\n    }, function(err,result){\\n        //result callback\\n    } );\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"some\\\" />\\n### some(arr, iterator, callback)\\n\\n__Alias:__ `any`\\n\\nReturns `true` if at least one element in the `arr` satisfies an async test.\\n_The callback for each iterator call only accepts a single argument of `true` or\\n`false`; it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like `fs.exists`. Once any iterator\\ncall returns `true`, the main `callback` is immediately called.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A truth test to apply to each item in the array\\n  in parallel. The iterator is passed a callback(truthValue) which must be \\n  called with a boolean argument once it has completed.\\n* `callback(result)` - A callback which is called as soon as any iterator returns\\n  `true`, or after all the iterator functions have finished. Result will be\\n  either `true` or `false` depending on the values of the async tests.\\n\\n__Example__\\n\\n```js\\nasync.some(['file1','file2','file3'], fs.exists, function(result){\\n    // if result is true then at least one of the files exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"every\\\" />\\n### every(arr, iterator, callback)\\n\\n__Alias:__ `all`\\n\\nReturns `true` if every element in `arr` satisfies an async test.\\n_The callback for each `iterator` call only accepts a single argument of `true` or\\n`false`; it does not accept an error argument first!_ This is in-line with the\\nway node libraries work with truth tests like `fs.exists`.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A truth test to apply to each item in the array\\n  in parallel. The iterator is passed a callback(truthValue) which must be \\n  called with a  boolean argument once it has completed.\\n* `callback(result)` - A callback which is called after all the `iterator`\\n  functions have finished. Result will be either `true` or `false` depending on\\n  the values of the async tests.\\n\\n__Example__\\n\\n```js\\nasync.every(['file1','file2','file3'], fs.exists, function(result){\\n    // if result is true then every file exists\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"concat\\\" />\\n### concat(arr, iterator, callback)\\n\\nApplies `iterator` to each item in `arr`, concatenating the results. Returns the\\nconcatenated list. The `iterator`s are called in parallel, and the results are\\nconcatenated as they return. There is no guarantee that the results array will\\nbe returned in the original order of `arr` passed to the `iterator` function.\\n\\n__Arguments__\\n\\n* `arr` - An array to iterate over.\\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\\n  The iterator is passed a `callback(err, results)` which must be called once it \\n  has completed with an error (which can be `null`) and an array of results.\\n* `callback(err, results)` - A callback which is called after all the `iterator`\\n  functions have finished, or an error occurs. Results is an array containing\\n  the concatenated results of the `iterator` function.\\n\\n__Example__\\n\\n```js\\nasync.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\\n    // files is now a list of filenames that exist in the 3 directories\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"concatSeries\\\" />\\n### concatSeries(arr, iterator, callback)\\n\\nSame as [`concat`](#concat), but executes in series instead of parallel.\\n\\n\\n## Control Flow\\n\\n<a name=\\\"series\\\" />\\n### series(tasks, [callback])\\n\\nRun the functions in the `tasks` array in series, each one running once the previous\\nfunction has completed. If any functions in the series pass an error to its\\ncallback, no more functions are run, and `callback` is immediately called with the value of the error. \\nOtherwise, `callback` receives an array of results when `tasks` have completed.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function, and the results will be passed to the final `callback` as an object\\ninstead of an array. This can be a more readable way of handling results from\\n[`series`](#series).\\n\\n**Note** that while many implementations preserve the order of object properties, the\\n[ECMAScript Language Specifcation](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6) \\nexplicitly states that\\n\\n> The mechanics and order of enumerating the properties is not specified.\\n\\nSo if you rely on the order in which your series of functions are executed, and want\\nthis to work on all platforms, consider using an array. \\n\\n__Arguments__\\n\\n* `tasks` - An array or object containing functions to run, each function is passed\\n  a `callback(err, result)` it must call on completion with an error `err` (which can\\n  be `null`) and an optional `result` value.\\n* `callback(err, results)` - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the `task` callbacks.\\n\\n__Example__\\n\\n```js\\nasync.series([\\n    function(callback){\\n        // do some stuff ...\\n        callback(null, 'one');\\n    },\\n    function(callback){\\n        // do some more stuff ...\\n        callback(null, 'two');\\n    }\\n],\\n// optional callback\\nfunction(err, results){\\n    // results is now equal to ['one', 'two']\\n});\\n\\n\\n// an example using an object instead of an array\\nasync.series({\\n    one: function(callback){\\n        setTimeout(function(){\\n            callback(null, 1);\\n        }, 200);\\n    },\\n    two: function(callback){\\n        setTimeout(function(){\\n            callback(null, 2);\\n        }, 100);\\n    }\\n},\\nfunction(err, results) {\\n    // results is now equal to: {one: 1, two: 2}\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"parallel\\\" />\\n### parallel(tasks, [callback])\\n\\nRun the `tasks` array of functions in parallel, without waiting until the previous\\nfunction has completed. If any of the functions pass an error to its\\ncallback, the main `callback` is immediately called with the value of the error.\\nOnce the `tasks` have completed, the results are passed to the final `callback` as an\\narray.\\n\\nIt is also possible to use an object instead of an array. Each property will be\\nrun as a function and the results will be passed to the final `callback` as an object\\ninstead of an array. This can be a more readable way of handling results from\\n[`parallel`](#parallel).\\n\\n\\n__Arguments__\\n\\n* `tasks` - An array or object containing functions to run. Each function is passed \\n  a `callback(err, result)` which it must call on completion with an error `err` \\n  (which can be `null`) and an optional `result` value.\\n* `callback(err, results)` - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the task callbacks.\\n\\n__Example__\\n\\n```js\\nasync.parallel([\\n    function(callback){\\n        setTimeout(function(){\\n            callback(null, 'one');\\n        }, 200);\\n    },\\n    function(callback){\\n        setTimeout(function(){\\n            callback(null, 'two');\\n        }, 100);\\n    }\\n],\\n// optional callback\\nfunction(err, results){\\n    // the results array will equal ['one','two'] even though\\n    // the second function had a shorter timeout.\\n});\\n\\n\\n// an example using an object instead of an array\\nasync.parallel({\\n    one: function(callback){\\n        setTimeout(function(){\\n            callback(null, 1);\\n        }, 200);\\n    },\\n    two: function(callback){\\n        setTimeout(function(){\\n            callback(null, 2);\\n        }, 100);\\n    }\\n},\\nfunction(err, results) {\\n    // results is now equals to: {one: 1, two: 2}\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"parallelLimit\\\" />\\n### parallelLimit(tasks, limit, [callback])\\n\\nThe same as [`parallel`](#parallel), only `tasks` are executed in parallel \\nwith a maximum of `limit` tasks executing at any time.\\n\\nNote that the `tasks` are not executed in batches, so there is no guarantee that \\nthe first `limit` tasks will complete before any others are started.\\n\\n__Arguments__\\n\\n* `tasks` - An array or object containing functions to run, each function is passed \\n  a `callback(err, result)` it must call on completion with an error `err` (which can\\n  be `null`) and an optional `result` value.\\n* `limit` - The maximum number of `tasks` to run at any time.\\n* `callback(err, results)` - An optional callback to run once all the functions\\n  have completed. This function gets a results array (or object) containing all \\n  the result arguments passed to the `task` callbacks.\\n\\n---------------------------------------\\n\\n<a name=\\\"whilst\\\" />\\n### whilst(test, fn, callback)\\n\\nRepeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,\\nor an error occurs.\\n\\n__Arguments__\\n\\n* `test()` - synchronous truth test to perform before each execution of `fn`.\\n* `fn(callback)` - A function which is called each time `test` passes. The function is\\n  passed a `callback(err)`, which must be called once it has completed with an \\n  optional `err` argument.\\n* `callback(err)` - A callback which is called after the test fails and repeated\\n  execution of `fn` has stopped.\\n\\n__Example__\\n\\n```js\\nvar count = 0;\\n\\nasync.whilst(\\n    function () { return count < 5; },\\n    function (callback) {\\n        count++;\\n        setTimeout(callback, 1000);\\n    },\\n    function (err) {\\n        // 5 seconds have passed\\n    }\\n);\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"doWhilst\\\" />\\n### doWhilst(fn, test, callback)\\n\\nThe post-check version of [`whilst`](#whilst). To reflect the difference in \\nthe order of operations, the arguments `test` and `fn` are switched. \\n\\n`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\\n\\n---------------------------------------\\n\\n<a name=\\\"until\\\" />\\n### until(test, fn, callback)\\n\\nRepeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,\\nor an error occurs.\\n\\nThe inverse of [`whilst`](#whilst).\\n\\n---------------------------------------\\n\\n<a name=\\\"doUntil\\\" />\\n### doUntil(fn, test, callback)\\n\\nLike [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.\\n\\n---------------------------------------\\n\\n<a name=\\\"forever\\\" />\\n### forever(fn, errback)\\n\\nCalls the asynchronous function `fn` with a callback parameter that allows it to\\ncall itself again, in series, indefinitely.\\n\\nIf an error is passed to the callback then `errback` is called with the\\nerror, and execution stops, otherwise it will never be called.\\n\\n```js\\nasync.forever(\\n    function(next) {\\n        // next is suitable for passing to things that need a callback(err [, whatever]);\\n        // it will result in this function being called again.\\n    },\\n    function(err) {\\n        // if next is called with a value in its first parameter, it will appear\\n        // in here as 'err', and execution will stop.\\n    }\\n);\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"waterfall\\\" />\\n### waterfall(tasks, [callback])\\n\\nRuns the `tasks` array of functions in series, each passing their results to the next in\\nthe array. However, if any of the `tasks` pass an error to their own callback, the\\nnext function is not executed, and the main `callback` is immediately called with\\nthe error.\\n\\n__Arguments__\\n\\n* `tasks` - An array of functions to run, each function is passed a \\n  `callback(err, result1, result2, ...)` it must call on completion. The first\\n  argument is an error (which can be `null`) and any further arguments will be \\n  passed as arguments in order to the next task.\\n* `callback(err, [results])` - An optional callback to run once all the functions\\n  have completed. This will be passed the results of the last task's callback.\\n\\n\\n\\n__Example__\\n\\n```js\\nasync.waterfall([\\n    function(callback){\\n        callback(null, 'one', 'two');\\n    },\\n    function(arg1, arg2, callback){\\n    \\t// arg1 now equals 'one' and arg2 now equals 'two'\\n        callback(null, 'three');\\n    },\\n    function(arg1, callback){\\n        // arg1 now equals 'three'\\n        callback(null, 'done');\\n    }\\n], function (err, result) {\\n   // result now equals 'done'    \\n});\\n```\\n\\n---------------------------------------\\n<a name=\\\"compose\\\" />\\n### compose(fn1, fn2...)\\n\\nCreates a function which is a composition of the passed asynchronous\\nfunctions. Each function consumes the return value of the function that\\nfollows. Composing functions `f()`, `g()`, and `h()` would produce the result of\\n`f(g(h()))`, only this version uses callbacks to obtain the return values.\\n\\nEach function is executed with the `this` binding of the composed function.\\n\\n__Arguments__\\n\\n* `functions...` - the asynchronous functions to compose\\n\\n\\n__Example__\\n\\n```js\\nfunction add1(n, callback) {\\n    setTimeout(function () {\\n        callback(null, n + 1);\\n    }, 10);\\n}\\n\\nfunction mul3(n, callback) {\\n    setTimeout(function () {\\n        callback(null, n * 3);\\n    }, 10);\\n}\\n\\nvar add1mul3 = async.compose(mul3, add1);\\n\\nadd1mul3(4, function (err, result) {\\n   // result now equals 15\\n});\\n```\\n\\n---------------------------------------\\n<a name=\\\"seq\\\" />\\n### seq(fn1, fn2...)\\n\\nVersion of the compose function that is more natural to read.\\nEach following function consumes the return value of the latter function. \\n\\nEach function is executed with the `this` binding of the composed function.\\n\\n__Arguments__\\n\\n* functions... - the asynchronous functions to compose\\n\\n\\n__Example__\\n\\n```js\\n// Requires lodash (or underscore), express3 and dresende's orm2.\\n// Part of an app, that fetches cats of the logged user.\\n// This example uses `seq` function to avoid overnesting and error \\n// handling clutter.\\napp.get('/cats', function(request, response) {\\n  function handleError(err, data, callback) {\\n    if (err) {\\n      console.error(err);\\n      response.json({ status: 'error', message: err.message });\\n    }\\n    else {\\n      callback(data);\\n    }\\n  }\\n  var User = request.models.User;\\n  asyc.seq(\\n    _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\\n    handleError,\\n    function(user, fn) {\\n      user.getCats(fn);      // 'getCats' has signature (callback(err, data))\\n    },\\n    handleError,\\n    function(cats) {\\n      response.json({ status: 'ok', message: 'Cats found', data: cats });\\n    }\\n  )(req.session.user_id);\\n  }\\n});\\n```\\n\\n---------------------------------------\\n<a name=\\\"applyEach\\\" />\\n### applyEach(fns, args..., callback)\\n\\nApplies the provided arguments to each function in the array, calling \\n`callback` after all functions have completed. If you only provide the first\\nargument, then it will return a function which lets you pass in the\\narguments as if it were a single function call.\\n\\n__Arguments__\\n\\n* `fns` - the asynchronous functions to all call with the same arguments\\n* `args...` - any number of separate arguments to pass to the function\\n* `callback` - the final argument should be the callback, called when all\\n  functions have completed processing\\n\\n\\n__Example__\\n\\n```js\\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\\n\\n// partial application example:\\nasync.each(\\n    buckets,\\n    async.applyEach([enableSearch, updateSchema]),\\n    callback\\n);\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"applyEachSeries\\\" />\\n### applyEachSeries(arr, iterator, callback)\\n\\nThe same as [`applyEach`](#applyEach) only the functions are applied in series.\\n\\n---------------------------------------\\n\\n<a name=\\\"queue\\\" />\\n### queue(worker, concurrency)\\n\\nCreates a `queue` object with the specified `concurrency`. Tasks added to the\\n`queue` are processed in parallel (up to the `concurrency` limit). If all\\n`worker`s are in progress, the task is queued until one becomes available. \\nOnce a `worker` completes a `task`, that `task`'s callback is called.\\n\\n__Arguments__\\n\\n* `worker(task, callback)` - An asynchronous function for processing a queued\\n  task, which must call its `callback(err)` argument when finished, with an \\n  optional `error` as an argument.\\n* `concurrency` - An `integer` for determining how many `worker` functions should be\\n  run in parallel.\\n\\n__Queue objects__\\n\\nThe `queue` object returned by this function has the following properties and\\nmethods:\\n\\n* `length()` - a function returning the number of items waiting to be processed.\\n* `running()` - a function returning the number of items currently being processed.\\n* `idle()` - a function returning false if there are items waiting or being processed, or true if not.\\n* `concurrency` - an integer for determining how many `worker` functions should be\\n  run in parallel. This property can be changed after a `queue` is created to\\n  alter the concurrency on-the-fly.\\n* `push(task, [callback])` - add a new task to the `queue`. Calls `callback` once \\n  the `worker` has finished processing the task. Instead of a single task, a `tasks` array\\n  can be submitted. The respective callback is used for every task in the list.\\n* `unshift(task, [callback])` - add a new task to the front of the `queue`.\\n* `saturated` - a callback that is called when the `queue` length hits the `concurrency` limit, \\n   and further tasks will be queued.\\n* `empty` - a callback that is called when the last item from the `queue` is given to a `worker`.\\n* `drain` - a callback that is called when the last item from the `queue` has returned from the `worker`.\\n* `paused` - a boolean for determining whether the queue is in a paused state\\n* `pause()` - a function that pauses the processing of tasks until `resume()` is called.\\n* `resume()` - a function that resumes the processing of queued tasks when the queue is paused.\\n\\n__Example__\\n\\n```js\\n// create a queue object with concurrency 2\\n\\nvar q = async.queue(function (task, callback) {\\n    console.log('hello ' + task.name);\\n    callback();\\n}, 2);\\n\\n\\n// assign a callback\\nq.drain = function() {\\n    console.log('all items have been processed');\\n}\\n\\n// add some items to the queue\\n\\nq.push({name: 'foo'}, function (err) {\\n    console.log('finished processing foo');\\n});\\nq.push({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\n\\n// add some items to the queue (batch-wise)\\n\\nq.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {\\n    console.log('finished processing bar');\\n});\\n\\n// add some items to the front of the queue\\n\\nq.unshift({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"cargo\\\" />\\n### cargo(worker, [payload])\\n\\nCreates a `cargo` object with the specified payload. Tasks added to the\\ncargo will be processed altogether (up to the `payload` limit). If the\\n`worker` is in progress, the task is queued until it becomes available. Once\\nthe `worker` has completed some tasks, each callback of those tasks is called.\\nCheck out [this animation](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) for how `cargo` and `queue` work.\\n\\nWhile [queue](#queue) passes only one task to one of a group of workers\\nat a time, cargo passes an array of tasks to a single worker, repeating\\nwhen the worker is finished.\\n\\n__Arguments__\\n\\n* `worker(tasks, callback)` - An asynchronous function for processing an array of\\n  queued tasks, which must call its `callback(err)` argument when finished, with \\n  an optional `err` argument.\\n* `payload` - An optional `integer` for determining how many tasks should be\\n  processed per round; if omitted, the default is unlimited.\\n\\n__Cargo objects__\\n\\nThe `cargo` object returned by this function has the following properties and\\nmethods:\\n\\n* `length()` - A function returning the number of items waiting to be processed.\\n* `payload` - An `integer` for determining how many tasks should be\\n  process per round. This property can be changed after a `cargo` is created to\\n  alter the payload on-the-fly.\\n* `push(task, [callback])` - Adds `task` to the `queue`. The callback is called\\n  once the `worker` has finished processing the task. Instead of a single task, an array of `tasks` \\n  can be submitted. The respective callback is used for every task in the list.\\n* `saturated` - A callback that is called when the `queue.length()` hits the concurrency and further tasks will be queued.\\n* `empty` - A callback that is called when the last item from the `queue` is given to a `worker`.\\n* `drain` - A callback that is called when the last item from the `queue` has returned from the `worker`.\\n\\n__Example__\\n\\n```js\\n// create a cargo object with payload 2\\n\\nvar cargo = async.cargo(function (tasks, callback) {\\n    for(var i=0; i<tasks.length; i++){\\n      console.log('hello ' + tasks[i].name);\\n    }\\n    callback();\\n}, 2);\\n\\n\\n// add some items\\n\\ncargo.push({name: 'foo'}, function (err) {\\n    console.log('finished processing foo');\\n});\\ncargo.push({name: 'bar'}, function (err) {\\n    console.log('finished processing bar');\\n});\\ncargo.push({name: 'baz'}, function (err) {\\n    console.log('finished processing baz');\\n});\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"auto\\\" />\\n### auto(tasks, [callback])\\n\\nDetermines the best order for running the functions in `tasks`, based on their \\nrequirements. Each function can optionally depend on other functions being completed \\nfirst, and each function is run as soon as its requirements are satisfied. \\n\\nIf any of the functions pass an error to their callback, it will not \\ncomplete (so any other functions depending on it will not run), and the main \\n`callback` is immediately called with the error. Functions also receive an \\nobject containing the results of functions which have completed so far.\\n\\nNote, all functions are called with a `results` object as a second argument, \\nso it is unsafe to pass functions in the `tasks` object which cannot handle the\\nextra argument. \\n\\nFor example, this snippet of code:\\n\\n```js\\nasync.auto({\\n  readData: async.apply(fs.readFile, 'data.txt', 'utf-8')\\n}, callback);\\n```\\n\\nwill have the effect of calling `readFile` with the results object as the last\\nargument, which will fail:\\n\\n```js\\nfs.readFile('data.txt', 'utf-8', cb, {});\\n```\\n\\nInstead, wrap the call to `readFile` in a function which does not forward the \\n`results` object:\\n\\n```js\\nasync.auto({\\n  readData: function(cb, results){\\n    fs.readFile('data.txt', 'utf-8', cb);\\n  }\\n}, callback);\\n```\\n\\n__Arguments__\\n\\n* `tasks` - An object. Each of its properties is either a function or an array of\\n  requirements, with the function itself the last item in the array. The object's key\\n  of a property serves as the name of the task defined by that property,\\n  i.e. can be used when specifying requirements for other tasks.\\n  The function receives two arguments: (1) a `callback(err, result)` which must be \\n  called when finished, passing an `error` (which can be `null`) and the result of \\n  the function's execution, and (2) a `results` object, containing the results of\\n  the previously executed functions.\\n* `callback(err, results)` - An optional callback which is called when all the\\n  tasks have been completed. It receives the `err` argument if any `tasks` \\n  pass an error to their callback. Results are always returned; however, if \\n  an error occurs, no further `tasks` will be performed, and the results\\n  object will only contain partial results.\\n\\n\\n__Example__\\n\\n```js\\nasync.auto({\\n    get_data: function(callback){\\n        console.log('in get_data');\\n        // async code to get some data\\n        callback(null, 'data', 'converted to array');\\n    },\\n    make_folder: function(callback){\\n        console.log('in make_folder');\\n        // async code to create a directory to store a file in\\n        // this is run at the same time as getting the data\\n        callback(null, 'folder');\\n    },\\n    write_file: ['get_data', 'make_folder', function(callback, results){\\n        console.log('in write_file', JSON.stringify(results));\\n        // once there is some data and the directory exists,\\n        // write the data to a file in the directory\\n        callback(null, 'filename');\\n    }],\\n    email_link: ['write_file', function(callback, results){\\n        console.log('in email_link', JSON.stringify(results));\\n        // once the file is written let's email a link to it...\\n        // results.write_file contains the filename returned by write_file.\\n        callback(null, {'file':results.write_file, 'email':'user@example.com'});\\n    }]\\n}, function(err, results) {\\n    console.log('err = ', err);\\n    console.log('results = ', results);\\n});\\n```\\n\\nThis is a fairly trivial example, but to do this using the basic parallel and\\nseries functions would look like this:\\n\\n```js\\nasync.parallel([\\n    function(callback){\\n        console.log('in get_data');\\n        // async code to get some data\\n        callback(null, 'data', 'converted to array');\\n    },\\n    function(callback){\\n        console.log('in make_folder');\\n        // async code to create a directory to store a file in\\n        // this is run at the same time as getting the data\\n        callback(null, 'folder');\\n    }\\n],\\nfunction(err, results){\\n    async.series([\\n        function(callback){\\n            console.log('in write_file', JSON.stringify(results));\\n            // once there is some data and the directory exists,\\n            // write the data to a file in the directory\\n            results.push('filename');\\n            callback(null);\\n        },\\n        function(callback){\\n            console.log('in email_link', JSON.stringify(results));\\n            // once the file is written let's email a link to it...\\n            callback(null, {'file':results.pop(), 'email':'user@example.com'});\\n        }\\n    ]);\\n});\\n```\\n\\nFor a complicated series of `async` tasks, using the [`auto`](#auto) function makes adding\\nnew tasks much easier (and the code more readable).\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"retry\\\" />\\n### retry([times = 5], task, [callback])\\n\\nAttempts to get a successful response from `task` no more than `times` times before\\nreturning an error. If the task is successful, the `callback` will be passed the result\\nof the successfull task. If all attemps fail, the callback will be passed the error and\\nresult (if any) of the final attempt.\\n\\n__Arguments__\\n\\n* `task(callback, results)` - A function which receives two arguments: (1) a `callback(err, result)`\\n  which must be called when finished, passing `err` (which can be `null`) and the `result` of \\n  the function's execution, and (2) a `results` object, containing the results of\\n  the previously executed functions (if nested inside another control flow).\\n* `callback(err, results)` - An optional callback which is called when the\\n  task has succeeded, or after the final failed attempt. It receives the `err` and `result` arguments of the last attempt at completing the `task`.\\n\\nThe [`retry`](#retry) function can be used as a stand-alone control flow by passing a\\ncallback, as shown below:\\n\\n```js\\nasync.retry(3, apiMethod, function(err, result) {\\n    // do something with the result\\n});\\n```\\n\\nIt can also be embeded within other control flow functions to retry individual methods\\nthat are not as reliable, like this:\\n\\n```js\\nasync.auto({\\n    users: api.getUsers.bind(api),\\n    payments: async.retry(3, api.getPayments.bind(api))\\n}, function(err, results) {\\n  // do something with the results\\n});\\n```\\n\\n\\n---------------------------------------\\n\\n<a name=\\\"iterator\\\" />\\n### iterator(tasks)\\n\\nCreates an iterator function which calls the next function in the `tasks` array,\\nreturning a continuation to call the next one after that. It's also possible to\\n“peek” at the next iterator with `iterator.next()`.\\n\\nThis function is used internally by the `async` module, but can be useful when\\nyou want to manually control the flow of functions in series.\\n\\n__Arguments__\\n\\n* `tasks` - An array of functions to run.\\n\\n__Example__\\n\\n```js\\nvar iterator = async.iterator([\\n    function(){ sys.p('one'); },\\n    function(){ sys.p('two'); },\\n    function(){ sys.p('three'); }\\n]);\\n\\nnode> var iterator2 = iterator();\\n'one'\\nnode> var iterator3 = iterator2();\\n'two'\\nnode> iterator3();\\n'three'\\nnode> var nextfn = iterator2.next();\\nnode> nextfn();\\n'three'\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"apply\\\" />\\n### apply(function, arguments..)\\n\\nCreates a continuation function with some arguments already applied. \\n\\nUseful as a shorthand when combined with other control flow functions. Any arguments\\npassed to the returned function are added to the arguments originally passed\\nto apply.\\n\\n__Arguments__\\n\\n* `function` - The function you want to eventually apply all arguments to.\\n* `arguments...` - Any number of arguments to automatically apply when the\\n  continuation is called.\\n\\n__Example__\\n\\n```js\\n// using apply\\n\\nasync.parallel([\\n    async.apply(fs.writeFile, 'testfile1', 'test1'),\\n    async.apply(fs.writeFile, 'testfile2', 'test2'),\\n]);\\n\\n\\n// the same process without using apply\\n\\nasync.parallel([\\n    function(callback){\\n        fs.writeFile('testfile1', 'test1', callback);\\n    },\\n    function(callback){\\n        fs.writeFile('testfile2', 'test2', callback);\\n    }\\n]);\\n```\\n\\nIt's possible to pass any number of additional arguments when calling the\\ncontinuation:\\n\\n```js\\nnode> var fn = async.apply(sys.puts, 'one');\\nnode> fn('two', 'three');\\none\\ntwo\\nthree\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"nextTick\\\" />\\n### nextTick(callback)\\n\\nCalls `callback` on a later loop around the event loop. In Node.js this just\\ncalls `process.nextTick`; in the browser it falls back to `setImmediate(callback)`\\nif available, otherwise `setTimeout(callback, 0)`, which means other higher priority\\nevents may precede the execution of `callback`.\\n\\nThis is used internally for browser-compatibility purposes.\\n\\n__Arguments__\\n\\n* `callback` - The function to call on a later loop around the event loop.\\n\\n__Example__\\n\\n```js\\nvar call_order = [];\\nasync.nextTick(function(){\\n    call_order.push('two');\\n    // call_order now equals ['one','two']\\n});\\ncall_order.push('one')\\n```\\n\\n<a name=\\\"times\\\" />\\n### times(n, callback)\\n\\nCalls the `callback` function `n` times, and accumulates results in the same manner\\nyou would use with [`map`](#map).\\n\\n__Arguments__\\n\\n* `n` - The number of times to run the function.\\n* `callback` - The function to call `n` times.\\n\\n__Example__\\n\\n```js\\n// Pretend this is some complicated async factory\\nvar createUser = function(id, callback) {\\n  callback(null, {\\n    id: 'user' + id\\n  })\\n}\\n// generate 5 users\\nasync.times(5, function(n, next){\\n    createUser(n, function(err, user) {\\n      next(err, user)\\n    })\\n}, function(err, users) {\\n  // we should now have 5 users\\n});\\n```\\n\\n<a name=\\\"timesSeries\\\" />\\n### timesSeries(n, callback)\\n\\nThe same as [`times`](#times), only the iterator is applied to each item in `arr` in\\nseries. The next `iterator` is only called once the current one has completed. \\nThe results array will be in the same order as the original.\\n\\n\\n## Utils\\n\\n<a name=\\\"memoize\\\" />\\n### memoize(fn, [hasher])\\n\\nCaches the results of an `async` function. When creating a hash to store function\\nresults against, the callback is omitted from the hash and an optional hash\\nfunction can be used.\\n\\nThe cache of results is exposed as the `memo` property of the function returned\\nby `memoize`.\\n\\n__Arguments__\\n\\n* `fn` - The function to proxy and cache results from.\\n* `hasher` - Tn optional function for generating a custom hash for storing\\n  results. It has all the arguments applied to it apart from the callback, and\\n  must be synchronous.\\n\\n__Example__\\n\\n```js\\nvar slow_fn = function (name, callback) {\\n    // do something\\n    callback(null, result);\\n};\\nvar fn = async.memoize(slow_fn);\\n\\n// fn can now be used as if it were slow_fn\\nfn('some name', function () {\\n    // callback\\n});\\n```\\n\\n<a name=\\\"unmemoize\\\" />\\n### unmemoize(fn)\\n\\nUndoes a [`memoize`](#memoize)d function, reverting it to the original, unmemoized\\nform. Handy for testing.\\n\\n__Arguments__\\n\\n* `fn` - the memoized function\\n\\n<a name=\\\"log\\\" />\\n### log(function, arguments)\\n\\nLogs the result of an `async` function to the `console`. Only works in Node.js or\\nin browsers that support `console.log` and `console.error` (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, `console.log` is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* `function` - The function you want to eventually apply all arguments to.\\n* `arguments...` - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n```js\\nvar hello = function(name, callback){\\n    setTimeout(function(){\\n        callback(null, 'hello ' + name);\\n    }, 1000);\\n};\\n```\\n```js\\nnode> async.log(hello, 'world');\\n'hello world'\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"dir\\\" />\\n### dir(function, arguments)\\n\\nLogs the result of an `async` function to the `console` using `console.dir` to\\ndisplay the properties of the resulting object. Only works in Node.js or\\nin browsers that support `console.dir` and `console.error` (such as FF and Chrome).\\nIf multiple arguments are returned from the async function, `console.dir` is\\ncalled on each argument in order.\\n\\n__Arguments__\\n\\n* `function` - The function you want to eventually apply all arguments to.\\n* `arguments...` - Any number of arguments to apply to the function.\\n\\n__Example__\\n\\n```js\\nvar hello = function(name, callback){\\n    setTimeout(function(){\\n        callback(null, {hello: name});\\n    }, 1000);\\n};\\n```\\n```js\\nnode> async.dir(hello, 'world');\\n{hello: 'world'}\\n```\\n\\n---------------------------------------\\n\\n<a name=\\\"noConflict\\\" />\\n### noConflict()\\n\\nChanges the value of `async` back to its original value, returning a reference to the\\n`async` object.\\n\",\n   39    \"readmeFilename\": \"README.md\",\n   40    \"homepage\": \"https://github.com/caolan/async\",\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/express/node_modules/connect/lib/middleware/directory.js:\n  201  \n  202      var isDir = '..' == file.name || (file.stat && file.stat.isDirectory());\n  203:     var icon = isDir ? icons.folder : icons[extname(file.name)] || icons.default;\n  204  \n  205      var ext = extname(file.name);\n  ...\n  326    , '.swf': 'page_white_flash.png'\n  327    , '.pdf': 'page_white_acrobat.png'\n  328:   , 'folder': 'folder.png'\n  329    , 'default': 'page_white.png'\n  330  };\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/express/node_modules/connect/node_modules/multiparty/CHANGELOG.md:\n  135  ### v1.0.2\n  136  \n  137: * Exclude node\\_modules folder from git\n  138  * Implement new `'aborted'` event\n  139: * Fix files in example folder to work with recent node versions\n  140  * Make gently a devDependency\n  141  \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/express/node_modules/send/node_modules/mime/types/mime.types:\n  721  # application/vnd.omads-email+xml\n  722  # application/vnd.omads-file+xml\n  723: # application/vnd.omads-folder+xml\n  724  # application/vnd.omaloc-supl-init\n  725  application/vnd.openofficeorg.extension		oxt\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/mongoose/node_modules/mpromise/.idea/mpromise.iml:\n    4      <content url=\"file://$MODULE_DIR$\" />\n    5      <orderEntry type=\"inheritedJdk\" />\n    6:     <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    7      <orderEntry type=\"library\" name=\"Node.js Dependencies for mpromise\" level=\"project\" />\n    8      <orderEntry type=\"library\" name=\"Node.js v0.8.26 Core Modules\" level=\"application\" />\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/mongoose/node_modules/mpromise/.idea/other.xml:\n    2  <project version=\"4\">\n    3    <component name=\"TabdirProjectConfiguration\">\n    4:     <folderConfigurations />\n    5    </component>\n    6  </project>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/nodemailer/README.md:\n  115  ```\n  116  \n  117: See also the [examples folder](https://github.com/andris9/Nodemailer/tree/master/examples)\n  118  for full featured examples\n  119  \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/nodemailer/package.json:\n   53      \"smtp\"\n   54    ],\n   55:   \"readme\": \"![Nodemailer](https://raw2.github.com/andris9/Nodemailer/master/assets/nm_logo_200x136.png)\\n\\n**Nodemailer** is an easy to use module to send e-mails with Node.JS (using\\nSMTP or sendmail or Amazon SES) and is unicode friendly - You can use any characters you like ✔\\n\\nNodemailer is Windows friendly, you can install it with *npm* on Windows just like any other module, there are no compiled dependencies. Use it from Azure or from your Windows box hassle free.\\n\\n**[Read about using Nodemailer from the Node Knockout blog](http://blog.nodeknockout.com/post/34641712180/sending-email-from-node-js)**\\n\\n[![Build Status](https://secure.travis-ci.org/andris9/Nodemailer.png)](http://travis-ci.org/andris9/Nodemailer)\\n[![NPM version](https://badge.fury.io/js/nodemailer.png)](http://badge.fury.io/js/nodemailer)\\n\\n## Notes and information\\n\\n### Nodemailer supports\\n\\n  * **Unicode** to use any characters\\n  * **HTML content** as well as **plain text** alternative\\n  * **Attachments** (including attachment **streaming** for sending larger files)\\n  * **Embedded images** in HTML\\n  * **SSL/STARTTLS** for secure e-mail delivery\\n  * Different transport methods - **SMTP**, **sendmail**, **Amazon SES** or **directly** to recipients MX server or even a **custom** method\\n  * SMTP **Connection pool** and connection reuse for rapid delivery\\n  * **Preconfigured** services for using SMTP with Gmail, Hotmail etc.\\n  * Use objects as header values for **SendGrid** SMTP API\\n  * **XOAUTH2** authentication and token generation support - useful with Gmail\\n  * **DKIM** signing\\n\\n### Support Nodemailer development\\n\\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\\n\\nIf you want to support with Bitcoins, then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\\n\\n### Nodemailer PaaS support\\n\\nNodemailer has been tested successfully on the following PaaS platforms (using free/trial accounts):\\n\\n  * [heroku](http://www.heroku.com/)\\n  * [AppFog](http://www.appfog.com/)\\n  * [OpenShift](https://openshift.redhat.com/app/)\\n  * [Nodejitsu](http://nodejitsu.com/)\\n  * [Windows Azure](http://www.windowsazure.com/)\\n  * [Modulus](https://modulus.io/)\\n\\n### Check out my other mail related modules\\n\\nIf you want to parse generated or received e-mail instead of sending it, check\\nout [MailParser](https://github.com/andris9/mailparser).\\n\\nIf you only want to generate the raw e-mail stream, check out\\n[MailComposer](https://github.com/andris9/mailcomposer).\\n\\nIf you only want to communicate with the SMTP (both as client and the server),\\ncheck out [simplesmtp](https://github.com/andris9/simplesmtp).\\n\\n### Templates\\n\\nTo use Nodemailer with templates, please see documentation for these projects.\\n\\n * [swig-email-templates](https://github.com/superjoe30/swig-email-templates) - swig, template inheritance, dummy context\\n * [node-email-templates](https://github.com/niftylettuce/node-email-templates) - ejs\\n\\n## TL;DR Usage Example\\n\\nThis is a complete example to send an e-mail with plaintext and HTML body\\n\\n```javascript\\nvar nodemailer = require(\\\"nodemailer\\\");\\n\\n// create reusable transport method (opens pool of SMTP connections)\\nvar smtpTransport = nodemailer.createTransport(\\\"SMTP\\\",{\\n    service: \\\"Gmail\\\",\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\",\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n\\n// setup e-mail data with unicode symbols\\nvar mailOptions = {\\n    from: \\\"Fred Foo ✔ <foo@blurdybloop.com>\\\", // sender address\\n    to: \\\"bar@blurdybloop.com, baz@blurdybloop.com\\\", // list of receivers\\n    subject: \\\"Hello ✔\\\", // Subject line\\n    text: \\\"Hello world ✔\\\", // plaintext body\\n    html: \\\"<b>Hello world ✔</b>\\\" // html body\\n}\\n\\n// send mail with defined transport object\\nsmtpTransport.sendMail(mailOptions, function(error, response){\\n    if(error){\\n        console.log(error);\\n    }else{\\n        console.log(\\\"Message sent: \\\" + response.message);\\n    }\\n\\n    // if you don't want to use this transport object anymore, uncomment following line\\n    //smtpTransport.close(); // shut down the connection pool, no more messages\\n});\\n```\\n\\nOr if you want to go the really easy (but not the best) route, you can try to send e-mails directly to\\nthe recipients MX server without a relaying service:\\n\\n```javascript\\nvar mail = require(\\\"nodemailer\\\").mail;\\n\\nmail({\\n    from: \\\"Fred Foo ✔ <foo@blurdybloop.com>\\\", // sender address\\n    to: \\\"bar@blurdybloop.com, baz@blurdybloop.com\\\", // list of receivers\\n    subject: \\\"Hello ✔\\\", // Subject line\\n    text: \\\"Hello world ✔\\\", // plaintext body\\n    html: \\\"<b>Hello world ✔</b>\\\" // html body\\n});\\n```\\n\\nSee also the [examples folder](https://github.com/andris9/Nodemailer/tree/master/examples)\\nfor full featured examples\\n\\n## Installation\\n\\nInstall through NPM\\n\\n```\\nnpm install nodemailer\\n```\\n\\n## Usage\\n\\nInclude the module\\n\\n```javascript\\nvar nodemailer = require(\\\"nodemailer\\\");\\n```\\n\\nAn e-mail can be sent with `sendMail(mailOptions[, callback])` command\\n\\n```javascript\\ntransport.sendMail(mailOptions, callback);\\n```\\n\\nWhere\\n\\n  * `transport` is a transport object created from the `nodemailer.createTransport` method\\n  * **mailOptions** defines the e-mail (set its subject, body text, receivers etc.), see [E-mail Message Fields](#e-mail-message-fields) for details\\n  * **callback** is the callback function that will be run after the e-mail is sent or the sending failed (see [Return callback](#return-callback) for details)\\n\\n## Setting up a transport method\\n\\nBefore you can send any e-mails you need to set up a transport method. This can\\nbe done with `nodemailer.createTransport(type, options)` where `type` indicates\\nthe transport protocol and `options` defines how it is used.\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"SMTP\\\", {smtp_options});\\n```\\n\\nThe same transport object can and should be reused several times.\\n\\nWhen the transport method is defined, it can be used to send e-mail with `sendMail`\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"SMTP\\\", {smtp_options});\\n\\ntransport.sendMail({\\n    from: \\\"sender@tr.ee\\\",\\n    to: \\\"receiver@tr.ee\\\"\\n    ...\\n});\\n```\\n\\n### Possible transport methods\\n\\n`type` parameter can be one of the following:\\n\\n  * **SMTP** for using SMTP\\n  * **SES** for using Amazon SES\\n  * **Sendmail** for utilizing systems *sendmail* command\\n  * **Pickup** for storing the e-mail in a directory on your machine\\n  * **Direct** for sending e-mails directly to recipients MTA servers\\n\\nIf `type` is not set, \\\"direct\\\" will be used\\n\\nIf you want to use custom transport method, you need to provide the transport handler constructor as the `type` parameter. See [Custom Transport Methods](#custom-transport-methods) for details\\n\\n### Global transport options\\n\\nIn addition to any specific configuration for a selected transport type, a few global\\nones exist.\\n\\n  * **resolveHostname** - if set to true, resolves the public hostname for the current machine (makes an external HTTP request to [remoteAddress.net](http://www.remoteaddress.net/) for resolving it). The value is used when generating `Message-ID` values (as the domain part) and when identifying itself to a SMTP server\\n  * **xMailer** - if the value is a string it replaces the default `X-Mailer` header value. If the value is `false` then `X-Mailer` is stripped from the header\\n\\n### Setting up SMTP\\n\\nSMTP is different from the other transport mechanisms, as in its case a connection\\npool is created. All the connections try to stay alive as long as possible and\\nare reusable to minimize the protocol overhead delay - for example setting up\\nTLS for authenticating is relatively lengthy process (in CPU terms, not by human\\nterms), you do not want to do it several times.\\n\\nPossible SMTP options are the following:\\n\\n * **service** - an optional well known service identifier (\\\"Gmail\\\", \\\"Hotmail\\\" etc., see [Well known Services](#well-known-services-for-smtp) for a list of supported services) to auto-configure host, port and secure connection settings\\n * **host** - hostname of the SMTP server (defaults to \\\"localhost\\\", not needed with `service`)\\n * **port** - port of the SMTP server (defaults to 25, not needed with `service`)\\n * **secureConnection** - use SSL (default is `false`, not needed with `service`). If you're using port 587 then keep `secureConnection` false, since the connection is started in insecure plain text mode and only later upgraded with STARTTLS\\n * **name** - the name of the client server (defaults to machine name)\\n * **auth** - authentication object as `{user:\\\"...\\\", pass:\\\"...\\\"}` or  `{XOAuth2: {xoauth2_options}}` or  `{XOAuthToken: \\\"base64data\\\"}`\\n * **ignoreTLS** - ignore server support for STARTTLS (defaults to `false`)\\n * **debug** - output client and server messages to console\\n * **maxConnections** - how many connections to keep in the pool (defaults to 5)\\n * **maxMessages** - limit the count of messages to send through a single connection (no limit by default)\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"SMTP\\\", {\\n    service: \\\"Gmail\\\",\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\",\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n```\\n\\nor the same without `service` parameter\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"SMTP\\\", {\\n    host: \\\"smtp.gmail.com\\\", // hostname\\n    secureConnection: true, // use SSL\\n    port: 465, // port for secure SMTP\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\",\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n```\\n\\n**NB!** if you want to close the pool (cancel all open connections) you can use `transport.close()`\\n\\n```javascript\\n\\nvar transport = nodemailer.createTransport(\\\"SMTP\\\",{});\\n...\\ntransport.close(); // close the pool\\n```\\n\\n\\n#### SMTP XOAUTH and token generation\\n\\n##### XOAUTH2\\n\\n**nodemailer** supports XOAUTH2 authentication protocol. To use this you need to obtain a Client ID and a Client Secret from [Google API Console](https://code.google.com/apis/console) (Open \\\"API Access\\\" and create \\\"Client ID for web applications\\\") and then request a refresh token for an user. See [Google OAuth 2.0 Offline Access](https://developers.google.com/accounts/docs/OAuth2WebServer#offline) for more information.\\n\\nOnce you have obtained the Client ID, Client Secret and a Refresh Token for an user, you can use these values to send mail on behalf of the user.\\n\\n```javascript\\nvar transportOptions = {\\n    ...,\\n    auth: {\\n        XOAuth2: {\\n            user: \\\"example.user@gmail.com\\\",\\n            clientId: \\\"8819981768.apps.googleusercontent.com\\\",\\n            clientSecret: \\\"{client_secret}\\\",\\n            refreshToken: \\\"1/xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI\\\",\\n            accessToken: \\\"vF9dft4qmTc2Nvb3RlckBhdHRhdmlzdGEuY29tCg==\\\",\\n            timeout: 3600\\n        }\\n    }\\n}\\n```\\n\\n`accessToken` and `timeout` values are both optional. If XOAUTH2 login fails a new access token is generated automatically and the login is retried.\\n\\n##### XOAUTH\\n\\nOlder XOAUTH is also supported by **nodemailer** for SMTP. XOAUTH is based on OAuth protocol 1.0 and is considered deprecated.\\n\\nTo use this, include `XOAuthToken` option in `auth` instead of the regular `user` and `pass`.\\n\\n```javascript\\nvar transportOptions = {\\n    ...,\\n    auth: {\\n        XOAuthToken: \\\"R0VUIGh0dHBzOi8vbWFpbC5nb29....\\\"\\n    }\\n}\\n```\\n\\n**nodemailer** includes also built in XOAUTH token generator which can be used\\nwith `nodemailer.createXOAuthGenerator()`. The function is preconfigured for\\nGmail, so in this case only mandatory options are `user`, `token` and `tokenSecret`.\\n\\n```javascript\\nvar XOAuthTokenGenerator = nodemailer.createXOAuthGenerator({\\n        user: \\\"test.nodemailer@gmail.com\\\",\\n        // requestUrl: \\\"https://oauth.access.point\\\",\\n        // consumerKey: \\\"anonymous\\\",\\n        // consumerSecret: \\\"anonymous\\\",\\n        token: \\\"1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM\\\",\\n        tokenSecret: \\\"_mUBkIwNPnfQBUIWrJrpXJ0c\\\"\\n    });\\n```\\n\\nOne of `user` or `requestUrl` is mandatory. `consumerKey` and `consumerSecret` both\\ndefault to `\\\"anonymous\\\"`.\\n\\n```javascript\\nvar transportOptions = {\\n    service: \\\"Gmail\\\",\\n    auth: {\\n        XOAuthToken: nodemailer.createXOAuthGenerator({\\n            user: \\\"test.nodemailer@gmail.com\\\",\\n            token: \\\"1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM\\\",\\n            tokenSecret: \\\"_mUBkIwNPnfQBUIWrJrpXJ0c\\\"\\n        })\\n    }\\n}\\n```\\n\\n### Setting up SES\\n\\nSES is actually a HTTP based protocol, the compiled e-mail and related info\\n(signatures and such) are sent as a HTTP request to SES servers.\\n\\nPossible SES options are the following:\\n\\n * **AWSAccessKeyID** - AWS access key (required)\\n * **AWSSecretKey** - AWS secret (required)\\n * **ServiceUrl** - *optional* API end point URL (defaults to *\\\"https://email.us-east-1.amazonaws.com\\\"*)\\n * **AWSSecurityToken** - *optional* security token\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"SES\\\", {\\n    AWSAccessKeyID: \\\"AWSACCESSKEY\\\",\\n    AWSSecretKey: \\\"AWS/Secret/key\\\"\\n});\\n```\\n\\n### Setting up Sendmail\\n\\nSendmail transport method streams the compiled message to the *stdin* of *sendmail*\\ncommand.\\n\\nOptions object is optional, possible sendmail options are the following:\\n\\n  * **path** - path to the `sendmail` command (defaults to *\\\"sendmail\\\"*)\\n  * **args** - an array of extra command line options to pass to the `sendmail` command (ie. `[\\\"-f\\\", \\\"foo@blurdybloop.com\\\"]`).\\n\\nCurrently the command to be spawned is built up like this: the command is either using `sendmail -i -f from_addr to_addr[]` (by default) or `sendmail -i list_of_args[]` (if `args` property was given). `-i` is ensured to be present on either case.\\n\\nIn the default case (no `args` defined) From and To addresses are either taken from `From`,`To`, `Cc` and `Bcc` properties or from the `envelope` property if one is present.\\n\\nBe wary when using the `args` property - no recipients are defined by default, you need to ensure these by yourself, for example by using the `-t` flag.\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"sendmail\\\");\\n```\\n\\nor\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"sendmail\\\", {\\n    path: \\\"/usr/local/bin/sendmail\\\",\\n    args: [\\\"-t\\\", \\\"-f\\\", \\\"foo@blurdybloop.com\\\"]\\n});\\n```\\n\\nSendmail uses a Transform stream, which is available in NodeJS >= 0.10. For\\nprevious versions you can include [`readable-stream`](https://github.com/isaacs/readable-stream)\\nin your depencies, which provides a polyfill.\\n\\n### Setting up Pickup\\n\\nWhen choosing `Pickup` all e-mails will be stored in a directory so that they can be picked up by your SMTP server.\\n\\nPossible options are the following:\\n\\n * **directory** - The directory where applications save e-mail for later processing by the SMTP server (required)\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"PICKUP\\\", {\\n    directory: \\\"C:\\\\\\\\inetpub\\\\\\\\mailroot\\\\\\\\Pickup\\\"\\n});\\n```\\n\\nor the shorthand version:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"PICKUP\\\", \\\"C:\\\\\\\\inetpub\\\\\\\\mailroot\\\\\\\\Pickup\\\");\\n```\\n\\n### Setting up Direct transport\\n\\n*Direct* transport is useful when you can not or want not to use a relaying service or the sendmail command.\\n\\nTo set it up, you do not need to provide anything, just run the following to create a transport object:\\n\\n```\\nvar transport = nodemailer.createTransport();\\n```\\n\\nIf you want to use debug logging, use the following form:\\n\\n```\\nvar transport = nodemailer.createTransport(\\\"direct\\\", {debug: true});\\n```\\n\\nThere is also a shorthand method `mail` if you do not like to set up a transport object (see [E-mail message fields](#e-mail-message-fields) for options for the `mailOptions` object).\\n\\n```javascript\\nvar mail = require(\\\"nodemailer\\\").mail;\\nmail(mailOptions);\\n```\\n\\n*Direct* can be quite inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages are lost. Thus *direct* is only suitable for low throughput systems, like password remainders and such, where the message can be processed immediatelly.\\n\\n*Direct* is able to handle sending errors, graylisting and such. If a message can not be sent, it is requeued and retried later.\\n\\nTo raise the odds of getting your emails into recipients inboxes, you should setup [SPF records](http://en.wikipedia.org/wiki/Sender_Policy_Framework) for your domain. Using [DKIM](#dkim-signing) wouldn't hurt either. Dynamic IP addresses are frequently treated as spam sources, so using static IPs is advised.\\n\\n#### Handling responses\\n\\n*Direct* exposes an event emitter for receiving status updates. If the message includes several recipients, the message\\nis not sent to everyone at once but is sharded in chunks based on the domain name of the addresses. For example\\nif your message includes the following recipients: *user1@example.com*, *user2@example.com* and *user3@blurdybloop.com*, then 2 separate messages are sent out - one for *user1@example.com* and *user2@example.com* and one for *user3@blurdybloop.com*. This means that sending to different recipients may succeed or fail independently. All information about messages being delivered, failed or requeued is emitted by the status emitter `statusHandler`.\\n\\n*Direct* exposes the following events:\\n\\n  * **'sent'** - message was sent successfully\\n  * **'failed'** - message was failed permanently\\n  * **'requeue'** - message failed but the error might not be permanent, so the message is requeued for later (once the message is retried an event is fired again).\\n\\nAll events get the same argument which is an object with the following properties:\\n\\n  * **domain** - is the domain part of the e-mail addresses\\n  * **response** - is the last line form the SMTP transmission\\n\\n**Usage example**\\n\\n```javascript\\ntransport.sendMail(messageOptions, function(error, response){\\n    if(error){\\n        console.log(error);\\n        return;\\n    }\\n\\n    // response.statusHandler only applies to 'direct' transport\\n    response.statusHandler.once(\\\"failed\\\", function(data){\\n        console.log(\\n          \\\"Permanently failed delivering message to %s with the following response: %s\\\",\\n          data.domain, data.response);\\n    });\\n\\n    response.statusHandler.once(\\\"requeue\\\", function(data){\\n        console.log(\\\"Temporarily failed delivering message to %s\\\", data.domain);\\n    });\\n\\n    response.statusHandler.once(\\\"sent\\\", function(data){\\n        console.log(\\\"Message was accepted by %s\\\", data.domain);\\n    });\\n});\\n```\\n\\n**NB!** If you want to provide instant feedback to the user, listen for the first `'sent'`, `'failed'`, or `'requeued'` event only. The first event should arrive quickly but once the message gets requeued, the delay until the next event for this particular domain is fired is at least 15 minutes.\\n\\n> This example uses `.once` for listening to the events which is ok if you have just one recipient. For several recipients with different domains, the events get called several times and thus would need a more complex handling.\\n\\n#### When would you use Direct transport?\\n\\n  * When prototyping your application\\n  * If you do not have or do not want to use a relaying service account\\n  * When running under Windows as a Sendmail replacement (by default Sendmail is not available in Windows)\\n\\n### DKIM Signing\\n\\n**Nodemailer** supports DKIM signing with very simple setup. Use this with caution\\nthough since the generated message needs to be buffered entirely before it can be\\nsigned. Not a big deal with small messages but might consume a lot of RAM when\\nusing larger attachments.\\n\\nSet up the DKIM signing with `useDKIM` method for a transport object:\\n\\n```javascript\\ntransport.useDKIM(dkimOptions)\\n```\\n\\nWhere `dkimOptions` includes necessary options for signing\\n\\n  * **domainName** - the domainname that is being used for signing\\n  * **keySelector** - key selector. If you have set up a TXT record with DKIM public key at *zzz._domainkey.blurdybloop.com* then `zzz` is the selector\\n  * **privateKey** - DKIM private key that is used for signing as a string\\n  * **headerFieldNames** - optional colon separated list of header fields to sign, by default all fields suggested by RFC4871 #5.5 are used\\n\\nAll messages transmitted through this transport objects are from now on DKIM signed.\\n\\nCurrently if several header fields with the same name exists, only the last one (the one in the bottom) is signed.\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"Sendmail\\\");\\n\\ntransport.useDKIM({\\n    domainName: \\\"kreata.ee\\\",\\n    keySelector: \\\"dkim\\\",\\n    privateKey: fs.readFileSync(\\\"private_key.pem\\\")\\n});\\n\\ntransport.sendMail(mailOptions);\\n```\\n\\nSee [examples/example_dkim.js](https://github.com/andris9/Nodemailer/blob/master/examples/example_dkim.js) for a complete example.\\n\\n### Well known services for SMTP\\n\\nIf you want to use a well known service as the SMTP host, you do not need\\nto enter the hostname or port number, just use the `service` parameter\\n\\nCurrently supported services are:\\n\\n  * **DynectEmail**\\n  * **Gmail**\\n  * **hot.ee**\\n  * **Hotmail**\\n  * **iCloud**\\n  * **mail.ee**\\n  * **Mail.Ru**\\n  * **Mailgun**\\n  * **Mailjet**\\n  * **Mandrill**\\n  * **Postmark**\\n  * **QQ**\\n  * **QQex** (Tencent Business Email)\\n  * **SendGrid**\\n  * **SES**\\n  * **Yahoo**\\n  * **yandex**\\n  * **Zoho**\\n\\nPredefined service data covers `host`, `port` and secure connection settings,\\nany other parameters (ie. `auth`) need to be set separately. Service names are\\ncase insensitive, so using \\\"gmail\\\" instead of \\\"Gmail\\\" is totally fine.\\n\\nExample:\\n\\n```javascript\\nvar smtpTransport = nodemailer.createTransport(\\\"Gmail\\\",{\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\",\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n```\\n\\nor alternatively\\n\\n```javascript\\nvar smtpTransport = nodemailer.createTransport(\\\"SMTP\\\",{\\n    service: \\\"Gmail\\\", // sets automatically host, port and connection security settings\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\",\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n```\\n\\nActually, if you are authenticating with an e-mail address that has a domain name\\nlike @gmail.com or @yahoo.com etc., then you don't even need to provide the service name,\\nit is detected automatically.\\n\\n```javascript\\nvar smtpTransport = nodemailer.createTransport(\\\"SMTP\\\",{\\n    auth: {\\n        user: \\\"gmail.user@gmail.com\\\", // service is detected from the username\\n        pass: \\\"userpass\\\"\\n    }\\n});\\n```\\n\\n## E-mail message fields\\n\\nThe following are the possible fields of an e-mail message:\\n\\n  - **from** - The e-mail address of the sender. All e-mail addresses can be plain `sender@server.com` or formatted `Sender Name <sender@server.com>`\\n  - **to** - Comma separated list or an array of recipients e-mail addresses that will appear on the `To:` field\\n  - **cc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Cc:` field\\n  - **bcc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Bcc:` field\\n  - **replyTo** - An e-mail address that will appear on the `Reply-To:` field\\n  - **inReplyTo** - The message-id this message is replying\\n  - **references** - Message-id list\\n  - **subject** - The subject of the e-mail\\n  - **text** - The plaintext version of the message\\n  - **html** - The HTML version of the message\\n  - **generateTextFromHTML** - if set to true uses HTML to generate plain text body part from the HTML if the text is not defined\\n  - **headers** - An object of additional header fields `{\\\"X-Key-Name\\\": \\\"key value\\\"}` (NB! values are passed as is, you should do your own encoding to 7bit and folding if needed)\\n  - **attachments** - An array of attachment objects.\\n  - **alternatives** - An array of alternative text contents (in addition to text and html parts)\\n  - **envelope** - optional SMTP envelope, if auto generated envelope is not suitable\\n  - **messageId** - optional Message-Id value, random value will be generated if not set. Set to false to omit the Message-Id header\\n  - **date** - optional Date value, current UTC string will be used if not set\\n  - **encoding** - optional transfer encoding for the textual parts (defaults to \\\"quoted-printable\\\")\\n  - **charset** - optional output character set for the textual parts (defaults to \\\"utf-8\\\")\\n  - **dsn** - An object with methods `success`, `failure` and `delay`. If any of these are set to true, DSN will be used\\n\\nAll text fields (e-mail addresses, plaintext body, html body) use UTF-8 as the encoding.\\nAttachments are streamed as binary.\\n\\nExample:\\n\\n```javascript\\nvar transport = nodemailer.createTransport(\\\"Sendmail\\\");\\n\\nvar mailOptions = {\\n    from: \\\"me@tr.ee\\\",\\n    to: \\\"me@tr.ee\\\",\\n    subject: \\\"Hello world!\\\",\\n    text: \\\"Plaintext body\\\"\\n}\\n\\ntransport.sendMail(mailOptions);\\n```\\n\\n### SendGrid support\\n\\nNodemailer supports SendGrid [SMTP API](http://docs.sendgrid.com/documentation/api/smtp-api/) out of the box - you can\\nuse objects as header values and these are automatically JSONized (and mime encoded if needed).\\n\\n```javascript\\nvar mailOptions = {\\n    ...,\\n    headers: {\\n        'X-SMTPAPI': {\\n            category : \\\"newuser\\\",\\n            sub:{\\n                \\\"%name%\\\": [\\\"Žiguli Õllepruul\\\"]\\n            }\\n        }\\n    },\\n    subject: \\\"Hello, %name%\\\"\\n}\\n```\\n\\nThis also applies to any other service that expects a JSON string as a header value for specified key.\\n\\n### Generate Text from HTML\\n\\nIf `generateTextFromHTML` option is set to true, then HTML contents of the mail is automatically converted\\nto plaintext format when plaintext content is empty or missing.\\n\\nFor example\\n\\n```javascript\\nmailOptions = {\\n    ...,\\n    generateTextFromHTML: true,\\n    html: '<h1>Hello world</h1><p><b>How</b> are you?',\\n    // text: '' // no text part\\n}\\n```\\n\\nis automatically converted in the backround by Nodemailer to:\\n\\n```javascript\\nmailOptions = {\\n    ...,\\n    // source html:\\n    html: '<h1>Hello world</h1><p><b>How</b> are you?',\\n    // automatically generated plaintext message:\\n    text: \\\"Hello world\\\\n\\\"+\\n          \\\"===========\\\\n\\\"+\\n          \\\"\\\\n\\\"+\\n          \\\"**How** are you?\\\"\\n}\\n```\\n\\nAs you can see the output syntax for `generateTextFromHTML` looks similar to markdown, and that\\nis exactly the case here - Nodemailer includes a simple HTML to markdown converter. But don't\\nexpect too much from it, it's not full featured or perfect, just some regexes here and there.\\n\\n### Attachment fields\\n\\nAttachment object consists of the following properties:\\n\\n  * **fileName** - filename to be reported as the name of the attached file, use of unicode is allowed (except when using Amazon SES which doesn't like it)\\n  * **cid** - optional content id for using inline images in HTML message source\\n  * **contents** - String or a Buffer contents for the attachment\\n  * **filePath** - path to a file or an URL if you want to stream the file instead of including it (better for larger attachments)\\n  * **streamSource** - Stream object for arbitrary binary streams if you want to stream the contents (needs to support *pause*/*resume*)\\n  * **contentType** - optional content type for the attachment, if not set will be derived from the `fileName` property\\n  * **contentDisposition** - optional content disposition type for the attachment, defaults to \\\"attachment\\\"\\n\\nOne of `contents`, `filePath` or `streamSource` must be specified, if none is\\npresent, the attachment will be discarded. Other fields are optional.\\n\\nAttachments can be added as many as you want.\\n\\n```javascript\\nvar mailOptions = {\\n    ...\\n    attachments: [\\n        {   // utf-8 string as an attachment\\n            fileName: \\\"text1.txt\\\",\\n            contents: \\\"hello world!\\\"\\n        },\\n        {   // binary buffer as an attachment\\n            fileName: \\\"text2.txt\\\",\\n            contents: new Buffer(\\\"hello world!\\\",\\\"utf-8\\\")\\n        },\\n        {   // file on disk as an attachment\\n            fileName: \\\"text3.txt\\\",\\n            filePath: \\\"/path/to/file.txt\\\" // stream this file\\n        },\\n        {   // fileName and content type is derived from filePath\\n            filePath: \\\"/path/to/file.txt\\\"\\n        },\\n        {   // stream as an attachment\\n            fileName: \\\"text4.txt\\\",\\n            streamSource: fs.createReadStream(\\\"file.txt\\\")\\n        },\\n        {   // define custom content type for the attachment\\n            fileName: \\\"text.bin\\\",\\n            contents: \\\"hello world!\\\",\\n            contentType: \\\"text/plain\\\"\\n        },\\n        {   // use URL as an attachment\\n            fileName: \\\"license.txt\\\",\\n            filePath: \\\"https://raw.github.com/andris9/Nodemailer/master/LICENSE\\\"\\n        }\\n    ]\\n}\\n```\\n\\n### Alternative fields\\n\\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader.\\n\\nAttahcment object consists of the following properties:\\n\\n  * **contents** - String or a Buffer contents for the attachment\\n  * **contentType** - optional content type for the attachment, if not set will be set to \\\"application/octet-stream\\\"\\n  * **contentEncoding** - optional value of how the data is encoded, defaults to \\\"base64\\\"\\n\\nIf `contents` is empty, the alternative will be discarded. Other fields are optional.\\n\\n**Usage example:**\\n\\n```javascript\\nvar mailOptions = {\\n    ...\\n    html: \\\"<b>Hello world!</b>\\\",\\n    alternatives: [\\n        {\\n            contentType: \\\"text/x-web-markdown\\\",\\n            contents: \\\"**Hello world!**\\\"\\n        }\\n    ]\\n}\\n```\\nIf the receiving e-mail client can render messages in Markdown syntax as well, it could prefer\\nto display this alternative as the main content of the message instead of the html part.\\n\\nAlternatives can be added as many as you want.\\n\\n### Address Formatting\\n\\nAll the e-mail addresses can be plain e-mail address\\n\\n```\\nfoobar@blurdybloop.com\\n```\\n\\nor with formatted name (includes unicode support)\\n\\n```\\n\\\"Ноде Майлер\\\" <foobar@blurdybloop.com>\\n```\\n\\nTo, Cc and Bcc fields accept comma separated list of e-mails or an array of\\nemails or an array of comma separated list of e-mails - use it as you like.\\nFormatting can be mixed.\\n\\n```\\n...,\\nto: 'foobar@blurdybloop.com, \\\"Ноде Майлер\\\" <bar@blurdybloop.com>, \\\"Name, User\\\" <baz@blurdybloop.com>',\\ncc: ['foobar@blurdybloop.com', '\\\"Ноде Майлер\\\" <bar@blurdybloop.com>, \\\"Name, User\\\" <baz@blurdybloop.com>']\\n...\\n```\\n\\nYou can even use unicode domain and user names, these are automatically converted\\nto the supported form\\n\\n```\\n\\\"Unicode Domain\\\" <info@müriaad-polüteism.info>\\n```\\n\\n### SMTP envelope\\n\\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\\n\\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\\nwith regular mail options. You can also use the regular address format, unicode domains etc.\\n\\n```javascript\\nmailOptions = {\\n    ...,\\n    from: \\\"mailer@kreata.ee\\\",\\n    to: \\\"daemon@kreata.ee\\\",\\n    envelope: {\\n        from: \\\"Daemon <deamon@kreata.ee>\\\",\\n        to: \\\"mailer@kreata.ee, Mailer <mailer2@kreata.ee>\\\"\\n    }\\n}\\n```\\n\\nThe envelope only applies when using SMTP or sendmail, setting envelope has no effect with SES.\\n\\n### Using Embedded Images\\n\\nAttachments can be used as embedded images in the HTML body. To use this\\nfeature, you need to set additional property of the attachment - `cid` (unique\\nidentifier of the file) which is a reference to the attachment file. The same\\n`cid` value must be used as the image URL in HTML (using `cid:` as the URL\\nprotocol, see example below).\\n\\n**NB!** the cid value should be as unique as possible!\\n\\n```javascript\\nvar mailOptions = {\\n    ...\\n    html: \\\"Embedded image: <img src='cid:unique@kreata.ee' />\\\",\\n    attachments: [{\\n        filename: \\\"image.png\\\",\\n        filePath: \\\"/path/to/file\\\",\\n        cid: \\\"unique@kreata.ee\\\" //same cid value as in the html img src\\n    }]\\n}\\n```\\n\\n**Automatic embedding images**\\n\\nIf you want to convert images in the HTML to embedded images automatically, you can\\nset mail option `forceEmbeddedImages` to true. In this case all images in\\nthe HTML that are either using an absolute URL (http://...) or absolute file path\\n(/path/to/file) are replaced with embedded attachments.\\n\\nFor example when using this code\\n\\n```javascript\\nvar mailOptions = {\\n    forceEmbeddedImages: true\\n    html: 'Embedded image: <img src=\\\"http://example.com/image.png\\\">'\\n};\\n```\\n\\nThe image linked is fetched and added automatically as an attachment and the url\\nin the HTML is replaced automatically with a proper `cid:` string.\\n\\n## Return callback\\n\\nReturn callback gets two parameters\\n\\n  * **error** - an error object if the message failed\\n  * **responseStatus** - an object with some information about the status on success\\n    * **responseStatus.messageId** - message ID used with the message\\n\\n> Different transport methods may expose additional properties to the `responseStatus` object, eg. *direct* transport exposes `statusHandler`, see the docs for the particular transport type for more info.\\n\\nExample:\\n\\n```javascript\\nnodemailer.sendMail(mailOptions, function(error, responseStatus){\\n    if(!error){\\n        console.log(responseStatus.message); // response from the server\\n        console.log(responseStatus.messageId); // Message-ID value used\\n    }\\n});\\n```\\n\\n**NB!** Message-ID used might not be the same that reaches recipients inbox since some providers (like **SES**) may change the value.\\n\\n\\n## Custom Transport Methods\\n\\nIf you want to use a custom transport method you need to define a constructor function with the following API\\n\\n```javascript\\nfunction MyCustomHandler(options){}\\nMyCustomHandler.prototype.sendMail = function(emailMessage, callback){};\\nMyCustomHandler.prototype.close = function(closeCallback){};\\n```\\n\\nWhere\\n\\n  * `options` is the optional options object passed to `createTransport`\\n  * `sendMail()` is the function that is going to deliver the message\\n  * `emailMessage` is a paused [MailComposer](https://github.com/andris9/mailcomposer#create-a-new-mailcomposer-instance) object. You should call `emailMessage.streamMessage()` once you have everything set up for streaming the message\\n  * `callback` is the function to run once the message has been sent or an error occurred. The response object *should* include `messageId` property (you can get the value from `emailMessage._messageId`)\\n  * `close()` is an optional method (no need to define it) to close the transport method\\n  * `closeCallback` is the function to run once the transport method is closed\\n\\n### Example usage\\n\\n```javascript\\nvar nodemailer = require(\\\"nodemailer\\\");\\n// Pipes all messages to stdout\\nfunction MyTransport(options){\\n    this.options = options;\\n}\\nMyTransport.prototype.sendMail = function(emailMessage, callback) {\\n    console.log(\\\"Envelope: \\\", emailMessage.getEnvelope());\\n    emailMessage.pipe(process.stdout);\\n    emailMessage.on(\\\"error\\\", function(err){\\n        callback(err);\\n    });\\n    emailMessage.on(\\\"end\\\", function(){\\n        callback(null, {\\n            messageId: emailMessage._messageId\\n        });\\n    });\\n    // everything set up, start streaming\\n    emailMessage.streamMessage();\\n};\\n// Use MyTransport as the transport method\\nvar transport = nodemailer.createTransport(MyTransport, {\\n    name: \\\"my.host\\\" // hostname for generating Message-ID values\\n});\\ntransport.sendMail({\\n    from: \\\"sender@example.com\\\",\\n    to: \\\"receiver@example.com\\\",\\n    subject: \\\"hello\\\",\\n    text: \\\"world\\\"\\n}, function(err, response){\\n    console.log(err || response);\\n});\\n```\\n\\n## Command line usage\\n\\n**NB!** Command line usage was removed from v0.4\\n\\n## Tests\\n\\nRun the tests with npm in Nodemailer's directory\\n\\n```\\nnpm test\\n```\\n\\nThere aren't currently many tests for Nodemailer but there are a lot of tests\\nin the modules that are used to generate the raw e-mail body and to use the\\nSMTP client connection.\\n\\n## Tweaking\\n\\nNodemailer in itself is actually more like a wrapper for my other modules\\n[mailcomposer](https://github.com/andris9/mailcomposer) for composing the raw message stream\\nand [simplesmtp](https://github.com/andris9/simplesmtp) for delivering it, by providing an\\nunified API. If there's some problems with particular parts of the\\nmessage composing/sending process you should look at the  appropriate module.\\n\\n## License\\n\\n**Nodemailer** is licensed under [MIT license](https://github.com/andris9/Nodemailer/blob/master/LICENSE). Basically you can do whatever you want to with it.\\n\\n----\\n\\nThe Nodemailer logo was designed by [Sven Kristjansen](https://www.behance.net/kristjansen).\\n\\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/andris9/nodemailer/trend.png)](https://bitdeli.com/free \\\"Bitdeli Badge\\\")\\n\",\n   56    \"readmeFilename\": \"README.md\",\n   57    \"bugs\": {\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/nodemailer/node_modules/mailcomposer/node_modules/mime/types/mime.types:\n  721  # application/vnd.omads-email+xml\n  722  # application/vnd.omads-file+xml\n  723: # application/vnd.omads-folder+xml\n  724  # application/vnd.omaloc-supl-init\n  725  application/vnd.openofficeorg.extension		oxt\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/pagination/README.md:\n   82  	</html>\n   83  \n   84: You can browse example folder for more. Release folder contains all mimified versions for browser. To customize your need you can use ./bin/build.js -h\n   85  \n   86  ## Classes\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/pagination/package.json:\n   36      }\n   37    ],\n   38:   \"readme\": \"## pagination\\n\\nPagination for javascript/nodejs\\n\\n[![build status](https://secure.travis-ci.org/vanng822/pagination.png)](http://travis-ci.org/vanng822/pagination)\\n\\n\\n## usage example\\n\\n\\tvar pagination = require('pagination');\\n\\tvar paginator = pagination.create('search', {prelink:'/', current: 1, rowsPerPage: 200, totalResult: 10020});\\n\\tconsole.log(paginator.render());\\n\\n### OR\\n\\n\\tvar pagination = require('pagination');\\n\\tvar paginator = new pagination.SearchPaginator({prelink:'/', current: 10, rowsPerPage: 200, totalResult: 10020});\\n\\tconsole.log(paginator.render());\\n\\t\\n\\t// output (without newlines)\\n\\t<div class=\\\"paginator\\\">\\n\\t\\t<a href=\\\"/?page=9\\\" class=\\\"paginator-previous\\\">Previous</a>\\n\\t\\t<a href=\\\"/?page=8\\\" class=\\\"paginator-page paginator-page-first\\\">8</a>\\n\\t\\t<a href=\\\"/?page=9\\\" class=\\\"paginator-page\\\">9</a>\\n\\t\\t<a href=\\\"/?page=10\\\" class=\\\"paginator-current\\\">10</a>\\n\\t\\t<a href=\\\"/?page=11\\\" class=\\\"paginator-page\\\">11</a>\\n\\t\\t<a href=\\\"/?page=12\\\" class=\\\"paginator-page paginator-page-last\\\">12</a>\\n\\t\\t<a href=\\\"/?page=11\\\" class=\\\"paginator-next\\\">Next</a>\\n\\t</div>\\n\\n### OR \\n\\n\\tvar pagination = require('pagination');\\n\\tvar paginator = new pagination.ItemPaginator({prelink:'/', slashSeparator: true, current: 3, rowsPerPage: 200, totalResult: 10020});\\n\\tconsole.log(paginator.render());\\n\\t\\n\\t// output (without newlines)\\n\\t<div class=\\\"paginator\\\">\\n\\t\\t<span class=\\\"paginator-current-report\\\">Results 401 - 600 of 10020</span>\\n\\t\\t<a href=\\\"/page/1\\\" class=\\\"paginator-first\\\">First</a>\\n\\t\\t<a href=\\\"/page/2\\\" class=\\\"paginator-previous\\\">Previous</a>\\n\\t\\t<a href=\\\"/page/4\\\" class=\\\"paginator-next\\\">Next</a>\\n\\t\\t<a href=\\\"/page/51\\\" class=\\\"paginator-last\\\">Last</a>\\n\\t</div>\\n\\n### OR need data from the calculation\\n\\n\\tvar pagination = require('pagination');\\n\\tvar paginator = new pagination.SearchPaginator({prelink:'/', current: 3, rowsPerPage: 200, totalResult: 10020});\\n\\tconsole.log(paginator.getPaginationData());\\n\\t\\n\\t// output\\n\\t{ prelink: '/',\\n\\t  current: 3,\\n\\t  previous: 2,\\n\\t  next: 4,\\n\\t  first: 1,\\n\\t  last: 51,\\n\\t  range: [ 1, 2, 3, 4, 5 ],\\n\\t  fromResult: 401,\\n\\t  toResult: 600,\\n\\t  totalResult: 10020,\\n\\t  pageCount: 51 }\\n\\t  \\n## Pagination on client side\\n\\t<html>\\n\\t\\t<head>\\n\\t\\t<script src=\\\"../release/pagination.full.min.js\\\"></script>\\n\\t\\t</head>\\n\\t\\t<body>\\n\\t\\t\\t<div id=\\\"paging\\\"></div>\\n\\t\\t\\t<script type=\\\"text/javascript\\\">\\n\\t\\t\\t(function() {\\n\\t\\t\\t\\tvar paginator = new pagination.ItemPaginator({prelink:'/', current: 3, rowsPerPage: 200, totalResult: 10020});\\n\\t\\t\\t\\tvar html = paginator.render();\\n\\t\\t\\t\\tvar paginator = pagination.create('search', {prelink:'/', current: 1, rowsPerPage: 200, totalResult: 10020});\\n\\t\\t\\t\\thtml += paginator.render();\\n\\t\\t\\t\\tdocument.getElementById(\\\"paging\\\").innerHTML = html;\\n\\t\\t\\t})();\\n\\t\\t\\t</script>\\n\\t\\t</body>\\n\\t</html>\\n\\nYou can browse example folder for more. Release folder contains all mimified versions for browser. To customize your need you can use ./bin/build.js -h\\n\\n## Classes\\n### SearchPaginator(options)\\n* `options` See Options bellow\\n\\nSee also http://developer.yahoo.com/ypatterns/navigation/pagination/search.html\\n\\n### ItemPaginator(options)\\n* `options` See Options bellow\\n\\nSee also http://developer.yahoo.com/ypatterns/navigation/pagination/item.html\\n\\n### TemplatePaginator(options)\\n* `options` See Options bellow\\n\\nThis class will render the markup as desired. The options must contains property \\\"template\\\"\\nIt can be either a template string or a compiled template. The local variables available in the template are\\n\\n* `prelink` String\\n* `preparedPreLink` String\\n* `current` Integer\\n* `previous` Integer\\n* `next` Integer\\n* `first` Integer\\n* `last` Integer\\n* `range` Array\\n* `fromResult` Integer\\n* `toResult` Integer\\n* `totalResult` Integer\\n* `pageCount` Integer\\n* `translations` Object with properties NEXT, PREVIOUS, FIRST, LAST, CURRENT_PAGE_REPORT\\n\\n## API\\n### Paginator.getPaginationData()\\nReturn an object contains data for rendering markup. See example above.\\n\\n### Paginator.set(option, value)\\nSet value to a single for option. See options section bellow\\n\\n### Paginator.preparePreLink(prelink)\\n* `prelink` String\\n\\nAppend page param to the link\\n\\n### Paginator.render()\\nReturn the rendered markup\\n\\n### pagination.create(type, options)\\n* `type` String\\n* `options` Object see Options section bellow\\n\\nWrapper for create instance of classes above\\n\\n### pagination.TemplateEngine.parse(str, options)\\nSee pagination.TemplateEngine.compile bellow\\n\\n### pagination.TemplateEngine.compile(str, options)\\n* `str` Template string\\n* `options` object which can contains .open .close .cache and .id\\n\\n## Options\\nObject to pass to paginator classes (second argument when using create function)\\n\\n### totalResult: {Integer}\\nNumber of total items in result set\\n\\t\\n### prelink: {String}\\nLink to append the page-param\\n\\n### rowsPerPage: {Integer}\\nNumber of items per page, default to 10\\n\\n### pageLinks: {Integer}\\nNumber of links to create in page range, default to 5. This value will be ignored when using item pagination.\\n\\n### current: {Integer}\\nIndicate which page is the current one. Page always starts with 1.\\n\\n### translationCache: {Boolean}\\nTo indicate if the result from CURRENT_PAGE_REPORT translation can be cached or not. Default is false.\\nThe cache is global and will be the same for all instances which have specified translationCacheKey as bellow.\\n\\n### translationCacheKey: {String}\\nFor supporting multiple versions of translation of CURRENT_PAGE_REPORT. It can use for multilanguages or different formats. Default is \\\"en\\\"\\n\\n### translator: {Function}\\nFor translations of FIRST, NEXT, ... Simple example\\n\\n\\tvar translations = {\\n\\t\\t'PREVIOUS' : 'Voorgaand',\\n\\t\\t'NEXT' : 'Volgende',\\n\\t\\t'FIRST' : 'Eerst',\\n\\t\\t'LAST' : 'Laatste',\\n\\t\\t'CURRENT_PAGE_REPORT' : 'Resulten {FromResult} - {ToResult} van {TotalResult}'\\n\\t};\\n\\t\\n\\tvar item = new ItemPaginator({\\n\\t\\tprelink : '/',\\n\\t\\tpageLinks : 5,\\n\\t\\tcurrent : 5,\\n\\t\\ttotalResult : 100,\\n\\t\\ttranslator : function(str) {\\n\\t\\t\\treturn translations[str];\\n\\t\\t}\\n\\t});\\n\\n### pageParamName: {String}\\nThe name of the page parameter. Default is \\\"page\\\"\\n\\n### slashSeparator: {Boolean}\\nIndicate if using slash instead of equal sign, ie /page/2 instead of /?page=2, default is false.\\n\\n### template: {String | Function}\\nThis can be a template string or a compiled template (function).\\nThe compiled function will be called with an object as argument.\\n\",\n   39    \"readmeFilename\": \"README.md\",\n   40    \"_id\": \"pagination@0.4.0\",\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/dashboard.html:\n  190                          <li class=\"treeview\">\n  191                              <a href=\"#\">\n  192:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n  193                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  194                              </a>\n  ...\n  203                          <li class=\"treeview\">\n  204                              <a href=\"#\">\n  205:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  206                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  207                              </a>\n  ...\n  216                          <li class=\"treeview\">\n  217                              <a href=\"#\">\n  218:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  219                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  220                              </a>\n  ...\n  229                          <li class=\"treeview\">\n  230                              <a href=\"#\">\n  231:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  232                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  233                              </a>\n  ...\n  242                          <li class=\"treeview\">\n  243                              <a href=\"#\">\n  244:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  245                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  246                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/untitled:\n  185                          <li class=\"treeview\">\n  186                              <a href=\"#\">\n  187:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n  188                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  189                              </a>\n  ...\n  198                          <li class=\"treeview\">\n  199                              <a href=\"#\">\n  200:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  201                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  202                              </a>\n  ...\n  211                          <li class=\"treeview\">\n  212                              <a href=\"#\">\n  213:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  214                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  215                              </a>\n  ...\n  224                          <li class=\"treeview\">\n  225                              <a href=\"#\">\n  226:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  227                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  228                              </a>\n  ...\n  237                          <li class=\"treeview\">\n  238                              <a href=\"#\">\n  239:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  240                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  241                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/css/bootstrap.min.css:\n    9   */\n   10  \n   11: article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden],template{display:none;}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}a{background:transparent;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;margin:0.67em 0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:bold;}dfn{font-style:italic;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace, serif;font-size:1em;}pre{white-space:pre-wrap;}q{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\";}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}img{border:0;}svg:not(:root){overflow:hidden;}figure{margin:0;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,select{text-transform:none;}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0;}input[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}@media print{*{text-shadow:none !important;color:#000 !important;background:transparent !important;box-shadow:none !important;} a,a:visited{text-decoration:underline;} a[href]:after{content:\" (\" attr(href) \")\";} abbr[title]:after{content:\" (\" attr(title) \")\";} a[href^=\"javascript:\"]:after,a[href^=\"#\"]:after{content:\"\";} pre,blockquote{border:1px solid #999;page-break-inside:avoid;} thead{display:table-header-group;} tr,img{page-break-inside:avoid;} img{max-width:100% !important;} @page {margin:2cm .5cm;}p,h2,h3{orphans:3;widows:3;} h2,h3{page-break-after:avoid;} select{background:#fff !important;} .navbar{display:none;} .table td,.table th{background-color:#fff !important;} .btn>.caret,.dropup>.btn>.caret{border-top-color:#000 !important;} .label{border:1px solid #000;} .table{border-collapse:collapse !important;} .table-bordered th,.table-bordered td{border:1px solid #ddd !important;}}*,*:before,*:after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}html{font-size:62.5%;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);}body{font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.428571429;color:#333333;background-color:#ffffff;}input,button,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit;}a{color:#428bca;text-decoration:none;}a:hover,a:focus{color:#2a6496;text-decoration:underline;}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}img{vertical-align:middle;}.img-responsive{display:block;max-width:100%;height:auto;}.img-rounded{border-radius:6px;}.img-thumbnail{padding:4px;line-height:1.428571429;background-color:#ffffff;border:1px solid #dddddd;border-radius:4px;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;display:inline-block;max-width:100%;height:auto;}.img-circle{border-radius:50%;}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eeeeee;}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-weight:500;line-height:1.1;color:inherit;}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small,.h1 small,.h2 small,.h3 small,.h4 small,.h5 small,.h6 small,h1 .small,h2 .small,h3 .small,h4 .small,h5 .small,h6 .small,.h1 .small,.h2 .small,.h3 .small,.h4 .small,.h5 .small,.h6 .small{font-weight:normal;line-height:1;color:#999999;}h1,h2,h3{margin-top:20px;margin-bottom:10px;}h1 small,h2 small,h3 small,h1 .small,h2 .small,h3 .small{font-size:65%;}h4,h5,h6{margin-top:10px;margin-bottom:10px;}h4 small,h5 small,h6 small,h4 .small,h5 .small,h6 .small{font-size:75%;}h1,.h1{font-size:36px;}h2,.h2{font-size:30px;}h3,.h3{font-size:24px;}h4,.h4{font-size:18px;}h5,.h5{font-size:14px;}h6,.h6{font-size:12px;}p{margin:0 0 10px;}.lead{margin-bottom:20px;font-size:16px;font-weight:200;line-height:1.4;}@media (min-width:768px){.lead{font-size:21px;}}small,.small{font-size:85%;}cite{font-style:normal;}.text-muted{color:#999999;}.text-primary{color:#428bca;}.text-primary:hover{color:#3071a9;}.text-warning{color:#8a6d3b;}.text-warning:hover{color:#66512c;}.text-danger{color:#a94442;}.text-danger:hover{color:#843534;}.text-success{color:#3c763d;}.text-success:hover{color:#2b542c;}.text-info{color:#31708f;}.text-info:hover{color:#245269;}.text-left{text-align:left;}.text-right{text-align:right;}.text-center{text-align:center;}.page-header{padding-bottom:9px;margin:40px 0 20px;border-bottom:1px solid #eeeeee;}ul,ol{margin-top:0;margin-bottom:10px;}ul ul,ol ul,ul ol,ol ol{margin-bottom:0;}.list-unstyled{padding-left:0;list-style:none;}.list-inline{padding-left:0;list-style:none;}.list-inline>li{display:inline-block;padding-left:5px;padding-right:5px;}.list-inline>li:first-child{padding-left:0;}dl{margin-top:0;margin-bottom:20px;}dt,dd{line-height:1.428571429;}dt{font-weight:bold;}dd{margin-left:0;}@media (min-width:768px){.dl-horizontal dt{float:left;width:160px;clear:left;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;} .dl-horizontal dd{margin-left:180px;}.dl-horizontal dd:before,.dl-horizontal dd:after{content:\" \";display:table;} .dl-horizontal dd:after{clear:both;} .dl-horizontal dd:before,.dl-horizontal dd:after{content:\" \";display:table;} .dl-horizontal dd:after{clear:both;}}abbr[title],abbr[data-original-title]{cursor:help;border-bottom:1px dotted #999999;}.initialism{font-size:90%;text-transform:uppercase;}blockquote{padding:10px 20px;margin:0 0 20px;border-left:5px solid #eeeeee;}blockquote p{font-size:17.5px;font-weight:300;line-height:1.25;}blockquote p:last-child{margin-bottom:0;}blockquote small,blockquote .small{display:block;line-height:1.428571429;color:#999999;}blockquote small:before,blockquote .small:before{content:'\\2014 \\00A0';}blockquote.pull-right{padding-right:15px;padding-left:0;border-right:5px solid #eeeeee;border-left:0;}blockquote.pull-right p,blockquote.pull-right small,blockquote.pull-right .small{text-align:right;}blockquote.pull-right small:before,blockquote.pull-right .small:before{content:'';}blockquote.pull-right small:after,blockquote.pull-right .small:after{content:'\\00A0 \\2014';}blockquote:before,blockquote:after{content:\"\";}address{margin-bottom:20px;font-style:normal;line-height:1.428571429;}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,\"Courier New\",monospace;}code{padding:2px 4px;font-size:90%;color:#c7254e;background-color:#f9f2f4;white-space:nowrap;border-radius:4px;}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:1.428571429;word-break:break-all;word-wrap:break-word;color:#333333;background-color:#f5f5f5;border:1px solid #cccccc;border-radius:4px;}pre code{padding:0;font-size:inherit;color:inherit;white-space:pre-wrap;background-color:transparent;border-radius:0;}.pre-scrollable{max-height:340px;overflow-y:scroll;}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px;}.container:before,.container:after{content:\" \";display:table;}.container:after{clear:both;}.container:before,.container:after{content:\" \";display:table;}.container:after{clear:both;}@media (min-width:768px){.container{width:750px;}}@media (min-width:992px){.container{width:970px;}}@media (min-width:1200px){.container{width:1170px;}}.row{margin-left:-15px;margin-right:-15px;}.row:before,.row:after{content:\" \";display:table;}.row:after{clear:both;}.row:before,.row:after{content:\" \";display:table;}.row:after{clear:both;}.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12, .col-xs-13, .col-sm-13, .col-md-13, .col-lg-13, .col-xs-14, .col-sm-14, .col-md-14, .col-lg-14, .col-xs-15, .col-sm-15, .col-md-15, .col-lg-15, .col-xs-16, .col-sm-16, .col-md-16, .col-lg-16, .col-xs-17, .col-sm-17, .col-md-17, .col-lg-17, .col-xs-18, .col-sm-18, .col-md-18, .col-lg-18, .col-xs-19, .col-sm-19, .col-md-19, .col-lg-19, .col-xs-20, .col-sm-20, .col-md-20, .col-lg-20, .col-xs-21, .col-sm-21, .col-md-21, .col-lg-21, .col-xs-22, .col-sm-22, .col-md-22, .col-lg-22, .col-xs-23, .col-sm-23, .col-md-23, .col-lg-23, .col-xs-24, .col-sm-24, .col-md-24, .col-lg-24{position:relative;min-height:1px;padding-left:15px;padding-right:15px;}.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-13, .col-xs-14, .col-xs-15, .col-xs-16, .col-xs-17, .col-xs-18, .col-xs-19, .col-xs-20, .col-xs-21, .col-xs-22, .col-xs-23, .col-xs-24{float:left;}.col-xs-24{width:100%;}.col-xs-23{width:95.83333333333334%;}.col-xs-22{width:91.66666666666666%;}.col-xs-21{width:87.5%;}.col-xs-20{width:83.33333333333334%;}.col-xs-19{width:79.16666666666666%;}.col-xs-18{width:75%;}.col-xs-17{width:70.83333333333334%;}.col-xs-16{width:66.66666666666666%;}.col-xs-15{width:62.5%;}.col-xs-14{width:58.333333333333336%;}.col-xs-13{width:54.166666666666664%;}.col-xs-12{width:50%;}.col-xs-11{width:45.83333333333333%;}.col-xs-10{width:41.66666666666667%;}.col-xs-9{width:37.5%;}.col-xs-8{width:33.33333333333333%;}.col-xs-7{width:29.166666666666668%;}.col-xs-6{width:25%;}.col-xs-5{width:20.833333333333336%;}.col-xs-4{width:16.666666666666664%;}.col-xs-3{width:12.5%;}.col-xs-2{width:8.333333333333332%;}.col-xs-1{width:4.166666666666666%;}.col-xs-pull-24{right:100%;}.col-xs-pull-23{right:95.83333333333334%;}.col-xs-pull-22{right:91.66666666666666%;}.col-xs-pull-21{right:87.5%;}.col-xs-pull-20{right:83.33333333333334%;}.col-xs-pull-19{right:79.16666666666666%;}.col-xs-pull-18{right:75%;}.col-xs-pull-17{right:70.83333333333334%;}.col-xs-pull-16{right:66.66666666666666%;}.col-xs-pull-15{right:62.5%;}.col-xs-pull-14{right:58.333333333333336%;}.col-xs-pull-13{right:54.166666666666664%;}.col-xs-pull-12{right:50%;}.col-xs-pull-11{right:45.83333333333333%;}.col-xs-pull-10{right:41.66666666666667%;}.col-xs-pull-9{right:37.5%;}.col-xs-pull-8{right:33.33333333333333%;}.col-xs-pull-7{right:29.166666666666668%;}.col-xs-pull-6{right:25%;}.col-xs-pull-5{right:20.833333333333336%;}.col-xs-pull-4{right:16.666666666666664%;}.col-xs-pull-3{right:12.5%;}.col-xs-pull-2{right:8.333333333333332%;}.col-xs-pull-1{right:4.166666666666666%;}.col-xs-pull-0{right:0%;}.col-xs-push-24{left:100%;}.col-xs-push-23{left:95.83333333333334%;}.col-xs-push-22{left:91.66666666666666%;}.col-xs-push-21{left:87.5%;}.col-xs-push-20{left:83.33333333333334%;}.col-xs-push-19{left:79.16666666666666%;}.col-xs-push-18{left:75%;}.col-xs-push-17{left:70.83333333333334%;}.col-xs-push-16{left:66.66666666666666%;}.col-xs-push-15{left:62.5%;}.col-xs-push-14{left:58.333333333333336%;}.col-xs-push-13{left:54.166666666666664%;}.col-xs-push-12{left:50%;}.col-xs-push-11{left:45.83333333333333%;}.col-xs-push-10{left:41.66666666666667%;}.col-xs-push-9{left:37.5%;}.col-xs-push-8{left:33.33333333333333%;}.col-xs-push-7{left:29.166666666666668%;}.col-xs-push-6{left:25%;}.col-xs-push-5{left:20.833333333333336%;}.col-xs-push-4{left:16.666666666666664%;}.col-xs-push-3{left:12.5%;}.col-xs-push-2{left:8.333333333333332%;}.col-xs-push-1{left:4.166666666666666%;}.col-xs-push-0{left:0%;}.col-xs-offset-24{margin-left:100%;}.col-xs-offset-23{margin-left:95.83333333333334%;}.col-xs-offset-22{margin-left:91.66666666666666%;}.col-xs-offset-21{margin-left:87.5%;}.col-xs-offset-20{margin-left:83.33333333333334%;}.col-xs-offset-19{margin-left:79.16666666666666%;}.col-xs-offset-18{margin-left:75%;}.col-xs-offset-17{margin-left:70.83333333333334%;}.col-xs-offset-16{margin-left:66.66666666666666%;}.col-xs-offset-15{margin-left:62.5%;}.col-xs-offset-14{margin-left:58.333333333333336%;}.col-xs-offset-13{margin-left:54.166666666666664%;}.col-xs-offset-12{margin-left:50%;}.col-xs-offset-11{margin-left:45.83333333333333%;}.col-xs-offset-10{margin-left:41.66666666666667%;}.col-xs-offset-9{margin-left:37.5%;}.col-xs-offset-8{margin-left:33.33333333333333%;}.col-xs-offset-7{margin-left:29.166666666666668%;}.col-xs-offset-6{margin-left:25%;}.col-xs-offset-5{margin-left:20.833333333333336%;}.col-xs-offset-4{margin-left:16.666666666666664%;}.col-xs-offset-3{margin-left:12.5%;}.col-xs-offset-2{margin-left:8.333333333333332%;}.col-xs-offset-1{margin-left:4.166666666666666%;}.col-xs-offset-0{margin-left:0%;}@media (min-width:768px){.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-13, .col-sm-14, .col-sm-15, .col-sm-16, .col-sm-17, .col-sm-18, .col-sm-19, .col-sm-20, .col-sm-21, .col-sm-22, .col-sm-23, .col-sm-24{float:left;} .col-sm-24{width:100%;} .col-sm-23{width:95.83333333333334%;} .col-sm-22{width:91.66666666666666%;} .col-sm-21{width:87.5%;} .col-sm-20{width:83.33333333333334%;} .col-sm-19{width:79.16666666666666%;} .col-sm-18{width:75%;} .col-sm-17{width:70.83333333333334%;} .col-sm-16{width:66.66666666666666%;} .col-sm-15{width:62.5%;} .col-sm-14{width:58.333333333333336%;} .col-sm-13{width:54.166666666666664%;} .col-sm-12{width:50%;} .col-sm-11{width:45.83333333333333%;} .col-sm-10{width:41.66666666666667%;} .col-sm-9{width:37.5%;} .col-sm-8{width:33.33333333333333%;} .col-sm-7{width:29.166666666666668%;} .col-sm-6{width:25%;} .col-sm-5{width:20.833333333333336%;} .col-sm-4{width:16.666666666666664%;} .col-sm-3{width:12.5%;} .col-sm-2{width:8.333333333333332%;} .col-sm-1{width:4.166666666666666%;} .col-sm-pull-24{right:100%;} .col-sm-pull-23{right:95.83333333333334%;} .col-sm-pull-22{right:91.66666666666666%;} .col-sm-pull-21{right:87.5%;} .col-sm-pull-20{right:83.33333333333334%;} .col-sm-pull-19{right:79.16666666666666%;} .col-sm-pull-18{right:75%;} .col-sm-pull-17{right:70.83333333333334%;} .col-sm-pull-16{right:66.66666666666666%;} .col-sm-pull-15{right:62.5%;} .col-sm-pull-14{right:58.333333333333336%;} .col-sm-pull-13{right:54.166666666666664%;} .col-sm-pull-12{right:50%;} .col-sm-pull-11{right:45.83333333333333%;} .col-sm-pull-10{right:41.66666666666667%;} .col-sm-pull-9{right:37.5%;} .col-sm-pull-8{right:33.33333333333333%;} .col-sm-pull-7{right:29.166666666666668%;} .col-sm-pull-6{right:25%;} .col-sm-pull-5{right:20.833333333333336%;} .col-sm-pull-4{right:16.666666666666664%;} .col-sm-pull-3{right:12.5%;} .col-sm-pull-2{right:8.333333333333332%;} .col-sm-pull-1{right:4.166666666666666%;} .col-sm-pull-0{right:0%;} .col-sm-push-24{left:100%;} .col-sm-push-23{left:95.83333333333334%;} .col-sm-push-22{left:91.66666666666666%;} .col-sm-push-21{left:87.5%;} .col-sm-push-20{left:83.33333333333334%;} .col-sm-push-19{left:79.16666666666666%;} .col-sm-push-18{left:75%;} .col-sm-push-17{left:70.83333333333334%;} .col-sm-push-16{left:66.66666666666666%;} .col-sm-push-15{left:62.5%;} .col-sm-push-14{left:58.333333333333336%;} .col-sm-push-13{left:54.166666666666664%;} .col-sm-push-12{left:50%;} .col-sm-push-11{left:45.83333333333333%;} .col-sm-push-10{left:41.66666666666667%;} .col-sm-push-9{left:37.5%;} .col-sm-push-8{left:33.33333333333333%;} .col-sm-push-7{left:29.166666666666668%;} .col-sm-push-6{left:25%;} .col-sm-push-5{left:20.833333333333336%;} .col-sm-push-4{left:16.666666666666664%;} .col-sm-push-3{left:12.5%;} .col-sm-push-2{left:8.333333333333332%;} .col-sm-push-1{left:4.166666666666666%;} .col-sm-push-0{left:0%;} .col-sm-offset-24{margin-left:100%;} .col-sm-offset-23{margin-left:95.83333333333334%;} .col-sm-offset-22{margin-left:91.66666666666666%;} .col-sm-offset-21{margin-left:87.5%;} .col-sm-offset-20{margin-left:83.33333333333334%;} .col-sm-offset-19{margin-left:79.16666666666666%;} .col-sm-offset-18{margin-left:75%;} .col-sm-offset-17{margin-left:70.83333333333334%;} .col-sm-offset-16{margin-left:66.66666666666666%;} .col-sm-offset-15{margin-left:62.5%;} .col-sm-offset-14{margin-left:58.333333333333336%;} .col-sm-offset-13{margin-left:54.166666666666664%;} .col-sm-offset-12{margin-left:50%;} .col-sm-offset-11{margin-left:45.83333333333333%;} .col-sm-offset-10{margin-left:41.66666666666667%;} .col-sm-offset-9{margin-left:37.5%;} .col-sm-offset-8{margin-left:33.33333333333333%;} .col-sm-offset-7{margin-left:29.166666666666668%;} .col-sm-offset-6{margin-left:25%;} .col-sm-offset-5{margin-left:20.833333333333336%;} .col-sm-offset-4{margin-left:16.666666666666664%;} .col-sm-offset-3{margin-left:12.5%;} .col-sm-offset-2{margin-left:8.333333333333332%;} .col-sm-offset-1{margin-left:4.166666666666666%;} .col-sm-offset-0{margin-left:0%;}}@media (min-width:992px){.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md-13, .col-md-14, .col-md-15, .col-md-16, .col-md-17, .col-md-18, .col-md-19, .col-md-20, .col-md-21, .col-md-22, .col-md-23, .col-md-24{float:left;} .col-md-24{width:100%;} .col-md-23{width:95.83333333333334%;} .col-md-22{width:91.66666666666666%;} .col-md-21{width:87.5%;} .col-md-20{width:83.33333333333334%;} .col-md-19{width:79.16666666666666%;} .col-md-18{width:75%;} .col-md-17{width:70.83333333333334%;} .col-md-16{width:66.66666666666666%;} .col-md-15{width:62.5%;} .col-md-14{width:58.333333333333336%;} .col-md-13{width:54.166666666666664%;} .col-md-12{width:50%;} .col-md-11{width:45.83333333333333%;} .col-md-10{width:41.66666666666667%;} .col-md-9{width:37.5%;} .col-md-8{width:33.33333333333333%;} .col-md-7{width:29.166666666666668%;} .col-md-6{width:25%;} .col-md-5{width:20.833333333333336%;} .col-md-4{width:16.666666666666664%;} .col-md-3{width:12.5%;} .col-md-2{width:8.333333333333332%;} .col-md-1{width:4.166666666666666%;} .col-md-pull-24{right:100%;} .col-md-pull-23{right:95.83333333333334%;} .col-md-pull-22{right:91.66666666666666%;} .col-md-pull-21{right:87.5%;} .col-md-pull-20{right:83.33333333333334%;} .col-md-pull-19{right:79.16666666666666%;} .col-md-pull-18{right:75%;} .col-md-pull-17{right:70.83333333333334%;} .col-md-pull-16{right:66.66666666666666%;} .col-md-pull-15{right:62.5%;} .col-md-pull-14{right:58.333333333333336%;} .col-md-pull-13{right:54.166666666666664%;} .col-md-pull-12{right:50%;} .col-md-pull-11{right:45.83333333333333%;} .col-md-pull-10{right:41.66666666666667%;} .col-md-pull-9{right:37.5%;} .col-md-pull-8{right:33.33333333333333%;} .col-md-pull-7{right:29.166666666666668%;} .col-md-pull-6{right:25%;} .col-md-pull-5{right:20.833333333333336%;} .col-md-pull-4{right:16.666666666666664%;} .col-md-pull-3{right:12.5%;} .col-md-pull-2{right:8.333333333333332%;} .col-md-pull-1{right:4.166666666666666%;} .col-md-pull-0{right:0%;} .col-md-push-24{left:100%;} .col-md-push-23{left:95.83333333333334%;} .col-md-push-22{left:91.66666666666666%;} .col-md-push-21{left:87.5%;} .col-md-push-20{left:83.33333333333334%;} .col-md-push-19{left:79.16666666666666%;} .col-md-push-18{left:75%;} .col-md-push-17{left:70.83333333333334%;} .col-md-push-16{left:66.66666666666666%;} .col-md-push-15{left:62.5%;} .col-md-push-14{left:58.333333333333336%;} .col-md-push-13{left:54.166666666666664%;} .col-md-push-12{left:50%;} .col-md-push-11{left:45.83333333333333%;} .col-md-push-10{left:41.66666666666667%;} .col-md-push-9{left:37.5%;} .col-md-push-8{left:33.33333333333333%;} .col-md-push-7{left:29.166666666666668%;} .col-md-push-6{left:25%;} .col-md-push-5{left:20.833333333333336%;} .col-md-push-4{left:16.666666666666664%;} .col-md-push-3{left:12.5%;} .col-md-push-2{left:8.333333333333332%;} .col-md-push-1{left:4.166666666666666%;} .col-md-push-0{left:0%;} .col-md-offset-24{margin-left:100%;} .col-md-offset-23{margin-left:95.83333333333334%;} .col-md-offset-22{margin-left:91.66666666666666%;} .col-md-offset-21{margin-left:87.5%;} .col-md-offset-20{margin-left:83.33333333333334%;} .col-md-offset-19{margin-left:79.16666666666666%;} .col-md-offset-18{margin-left:75%;} .col-md-offset-17{margin-left:70.83333333333334%;} .col-md-offset-16{margin-left:66.66666666666666%;} .col-md-offset-15{margin-left:62.5%;} .col-md-offset-14{margin-left:58.333333333333336%;} .col-md-offset-13{margin-left:54.166666666666664%;} .col-md-offset-12{margin-left:50%;} .col-md-offset-11{margin-left:45.83333333333333%;} .col-md-offset-10{margin-left:41.66666666666667%;} .col-md-offset-9{margin-left:37.5%;} .col-md-offset-8{margin-left:33.33333333333333%;} .col-md-offset-7{margin-left:29.166666666666668%;} .col-md-offset-6{margin-left:25%;} .col-md-offset-5{margin-left:20.833333333333336%;} .col-md-offset-4{margin-left:16.666666666666664%;} .col-md-offset-3{margin-left:12.5%;} .col-md-offset-2{margin-left:8.333333333333332%;} .col-md-offset-1{margin-left:4.166666666666666%;} .col-md-offset-0{margin-left:0%;}}@media (min-width:1200px){.col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-13, .col-lg-14, .col-lg-15, .col-lg-16, .col-lg-17, .col-lg-18, .col-lg-19, .col-lg-20, .col-lg-21, .col-lg-22, .col-lg-23, .col-lg-24{float:left;} .col-lg-24{width:100%;} .col-lg-23{width:95.83333333333334%;} .col-lg-22{width:91.66666666666666%;} .col-lg-21{width:87.5%;} .col-lg-20{width:83.33333333333334%;} .col-lg-19{width:79.16666666666666%;} .col-lg-18{width:75%;} .col-lg-17{width:70.83333333333334%;} .col-lg-16{width:66.66666666666666%;} .col-lg-15{width:62.5%;} .col-lg-14{width:58.333333333333336%;} .col-lg-13{width:54.166666666666664%;} .col-lg-12{width:50%;} .col-lg-11{width:45.83333333333333%;} .col-lg-10{width:41.66666666666667%;} .col-lg-9{width:37.5%;} .col-lg-8{width:33.33333333333333%;} .col-lg-7{width:29.166666666666668%;} .col-lg-6{width:25%;} .col-lg-5{width:20.833333333333336%;} .col-lg-4{width:16.666666666666664%;} .col-lg-3{width:12.5%;} .col-lg-2{width:8.333333333333332%;} .col-lg-1{width:4.166666666666666%;} .col-lg-pull-24{right:100%;} .col-lg-pull-23{right:95.83333333333334%;} .col-lg-pull-22{right:91.66666666666666%;} .col-lg-pull-21{right:87.5%;} .col-lg-pull-20{right:83.33333333333334%;} .col-lg-pull-19{right:79.16666666666666%;} .col-lg-pull-18{right:75%;} .col-lg-pull-17{right:70.83333333333334%;} .col-lg-pull-16{right:66.66666666666666%;} .col-lg-pull-15{right:62.5%;} .col-lg-pull-14{right:58.333333333333336%;} .col-lg-pull-13{right:54.166666666666664%;} .col-lg-pull-12{right:50%;} .col-lg-pull-11{right:45.83333333333333%;} .col-lg-pull-10{right:41.66666666666667%;} .col-lg-pull-9{right:37.5%;} .col-lg-pull-8{right:33.33333333333333%;} .col-lg-pull-7{right:29.166666666666668%;} .col-lg-pull-6{right:25%;} .col-lg-pull-5{right:20.833333333333336%;} .col-lg-pull-4{right:16.666666666666664%;} .col-lg-pull-3{right:12.5%;} .col-lg-pull-2{right:8.333333333333332%;} .col-lg-pull-1{right:4.166666666666666%;} .col-lg-pull-0{right:0%;} .col-lg-push-24{left:100%;} .col-lg-push-23{left:95.83333333333334%;} .col-lg-push-22{left:91.66666666666666%;} .col-lg-push-21{left:87.5%;} .col-lg-push-20{left:83.33333333333334%;} .col-lg-push-19{left:79.16666666666666%;} .col-lg-push-18{left:75%;} .col-lg-push-17{left:70.83333333333334%;} .col-lg-push-16{left:66.66666666666666%;} .col-lg-push-15{left:62.5%;} .col-lg-push-14{left:58.333333333333336%;} .col-lg-push-13{left:54.166666666666664%;} .col-lg-push-12{left:50%;} .col-lg-push-11{left:45.83333333333333%;} .col-lg-push-10{left:41.66666666666667%;} .col-lg-push-9{left:37.5%;} .col-lg-push-8{left:33.33333333333333%;} .col-lg-push-7{left:29.166666666666668%;} .col-lg-push-6{left:25%;} .col-lg-push-5{left:20.833333333333336%;} .col-lg-push-4{left:16.666666666666664%;} .col-lg-push-3{left:12.5%;} .col-lg-push-2{left:8.333333333333332%;} .col-lg-push-1{left:4.166666666666666%;} .col-lg-push-0{left:0%;} .col-lg-offset-24{margin-left:100%;} .col-lg-offset-23{margin-left:95.83333333333334%;} .col-lg-offset-22{margin-left:91.66666666666666%;} .col-lg-offset-21{margin-left:87.5%;} .col-lg-offset-20{margin-left:83.33333333333334%;} .col-lg-offset-19{margin-left:79.16666666666666%;} .col-lg-offset-18{margin-left:75%;} .col-lg-offset-17{margin-left:70.83333333333334%;} .col-lg-offset-16{margin-left:66.66666666666666%;} .col-lg-offset-15{margin-left:62.5%;} .col-lg-offset-14{margin-left:58.333333333333336%;} .col-lg-offset-13{margin-left:54.166666666666664%;} .col-lg-offset-12{margin-left:50%;} .col-lg-offset-11{margin-left:45.83333333333333%;} .col-lg-offset-10{margin-left:41.66666666666667%;} .col-lg-offset-9{margin-left:37.5%;} .col-lg-offset-8{margin-left:33.33333333333333%;} .col-lg-offset-7{margin-left:29.166666666666668%;} .col-lg-offset-6{margin-left:25%;} .col-lg-offset-5{margin-left:20.833333333333336%;} .col-lg-offset-4{margin-left:16.666666666666664%;} .col-lg-offset-3{margin-left:12.5%;} .col-lg-offset-2{margin-left:8.333333333333332%;} .col-lg-offset-1{margin-left:4.166666666666666%;} .col-lg-offset-0{margin-left:0%;}}table{max-width:100%;background-color:transparent;}th{text-align:left;}.table{width:100%;margin-bottom:20px;}.table>thead>tr>th,.table>tbody>tr>th,.table>tfoot>tr>th,.table>thead>tr>td,.table>tbody>tr>td,.table>tfoot>tr>td{padding:8px;line-height:1.428571429;vertical-align:top;border-top:1px solid #dddddd;}.table>thead>tr>th{vertical-align:bottom;border-bottom:2px solid #dddddd;}.table>caption+thead>tr:first-child>th,.table>colgroup+thead>tr:first-child>th,.table>thead:first-child>tr:first-child>th,.table>caption+thead>tr:first-child>td,.table>colgroup+thead>tr:first-child>td,.table>thead:first-child>tr:first-child>td{border-top:0;}.table>tbody+tbody{border-top:2px solid #dddddd;}.table .table{background-color:#ffffff;}.table-condensed>thead>tr>th,.table-condensed>tbody>tr>th,.table-condensed>tfoot>tr>th,.table-condensed>thead>tr>td,.table-condensed>tbody>tr>td,.table-condensed>tfoot>tr>td{padding:5px;}.table-bordered{border:1px solid #dddddd;}.table-bordered>thead>tr>th,.table-bordered>tbody>tr>th,.table-bordered>tfoot>tr>th,.table-bordered>thead>tr>td,.table-bordered>tbody>tr>td,.table-bordered>tfoot>tr>td{border:1px solid #dddddd;}.table-bordered>thead>tr>th,.table-bordered>thead>tr>td{border-bottom-width:2px;}.table-striped>tbody>tr:nth-child(odd)>td,.table-striped>tbody>tr:nth-child(odd)>th{background-color:#f9f9f9;}.table-hover>tbody>tr:hover>td,.table-hover>tbody>tr:hover>th{background-color:#f5f5f5;}table col[class*=\"col-\"]{position:static;float:none;display:table-column;}table td[class*=\"col-\"],table th[class*=\"col-\"]{float:none;display:table-cell;}.table>thead>tr>.active,.table>tbody>tr>.active,.table>tfoot>tr>.active,.table>thead>.active>td,.table>tbody>.active>td,.table>tfoot>.active>td,.table>thead>.active>th,.table>tbody>.active>th,.table>tfoot>.active>th{background-color:#f5f5f5;}.table-hover>tbody>tr>.active:hover,.table-hover>tbody>.active:hover>td,.table-hover>tbody>.active:hover>th{background-color:#e8e8e8;}.table>thead>tr>.success,.table>tbody>tr>.success,.table>tfoot>tr>.success,.table>thead>.success>td,.table>tbody>.success>td,.table>tfoot>.success>td,.table>thead>.success>th,.table>tbody>.success>th,.table>tfoot>.success>th{background-color:#dff0d8;}.table-hover>tbody>tr>.success:hover,.table-hover>tbody>.success:hover>td,.table-hover>tbody>.success:hover>th{background-color:#d0e9c6;}.table>thead>tr>.danger,.table>tbody>tr>.danger,.table>tfoot>tr>.danger,.table>thead>.danger>td,.table>tbody>.danger>td,.table>tfoot>.danger>td,.table>thead>.danger>th,.table>tbody>.danger>th,.table>tfoot>.danger>th{background-color:#f2dede;}.table-hover>tbody>tr>.danger:hover,.table-hover>tbody>.danger:hover>td,.table-hover>tbody>.danger:hover>th{background-color:#ebcccc;}.table>thead>tr>.warning,.table>tbody>tr>.warning,.table>tfoot>tr>.warning,.table>thead>.warning>td,.table>tbody>.warning>td,.table>tfoot>.warning>td,.table>thead>.warning>th,.table>tbody>.warning>th,.table>tfoot>.warning>th{background-color:#fcf8e3;}.table-hover>tbody>tr>.warning:hover,.table-hover>tbody>.warning:hover>td,.table-hover>tbody>.warning:hover>th{background-color:#faf2cc;}@media (max-width:767px){.table-responsive{width:100%;margin-bottom:15px;overflow-y:hidden;overflow-x:scroll;-ms-overflow-style:-ms-autohiding-scrollbar;border:1px solid #dddddd;-webkit-overflow-scrolling:touch;}.table-responsive>.table{margin-bottom:0;}.table-responsive>.table>thead>tr>th,.table-responsive>.table>tbody>tr>th,.table-responsive>.table>tfoot>tr>th,.table-responsive>.table>thead>tr>td,.table-responsive>.table>tbody>tr>td,.table-responsive>.table>tfoot>tr>td{white-space:nowrap;} .table-responsive>.table-bordered{border:0;}.table-responsive>.table-bordered>thead>tr>th:first-child,.table-responsive>.table-bordered>tbody>tr>th:first-child,.table-responsive>.table-bordered>tfoot>tr>th:first-child,.table-responsive>.table-bordered>thead>tr>td:first-child,.table-responsive>.table-bordered>tbody>tr>td:first-child,.table-responsive>.table-bordered>tfoot>tr>td:first-child{border-left:0;} .table-responsive>.table-bordered>thead>tr>th:last-child,.table-responsive>.table-bordered>tbody>tr>th:last-child,.table-responsive>.table-bordered>tfoot>tr>th:last-child,.table-responsive>.table-bordered>thead>tr>td:last-child,.table-responsive>.table-bordered>tbody>tr>td:last-child,.table-responsive>.table-bordered>tfoot>tr>td:last-child{border-right:0;} .table-responsive>.table-bordered>tbody>tr:last-child>th,.table-responsive>.table-bordered>tfoot>tr:last-child>th,.table-responsive>.table-bordered>tbody>tr:last-child>td,.table-responsive>.table-bordered>tfoot>tr:last-child>td{border-bottom:0;}}fieldset{padding:0;margin:0;border:0;}legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333333;border:0;border-bottom:1px solid #e5e5e5;}label{display:inline-block;margin-bottom:5px;font-weight:bold;}input[type=\"search\"]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}input[type=\"radio\"],input[type=\"checkbox\"]{margin:4px 0 0;margin-top:1px \\9;line-height:normal;}input[type=\"file\"]{display:block;}select[multiple],select[size]{height:auto;}select optgroup{font-size:inherit;font-style:inherit;font-family:inherit;}input[type=\"file\"]:focus,input[type=\"radio\"]:focus,input[type=\"checkbox\"]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}input[type=\"number\"]::-webkit-outer-spin-button,input[type=\"number\"]::-webkit-inner-spin-button{height:auto;}output{display:block;padding-top:7px;font-size:14px;line-height:1.428571429;color:#555555;vertical-align:middle;}.form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.428571429;color:#555555;vertical-align:middle;background-color:#ffffff;background-image:none;border:1px solid #cccccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-webkit-transition:border-color ease-in-out .15s, box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s, box-shadow ease-in-out .15s;}.form-control:focus{border-color:#66afe9;outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6);}.form-control:-moz-placeholder{color:#999999;}.form-control::-moz-placeholder{color:#999999;opacity:1;}.form-control:-ms-input-placeholder{color:#999999;}.form-control::-webkit-input-placeholder{color:#999999;}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{cursor:not-allowed;background-color:#eeeeee;}textarea.form-control{height:auto;}.form-group{margin-bottom:15px;}.radio,.checkbox{display:block;min-height:20px;margin-top:10px;margin-bottom:10px;padding-left:20px;vertical-align:middle;}.radio label,.checkbox label{display:inline;margin-bottom:0;font-weight:normal;cursor:pointer;}.radio input[type=\"radio\"],.radio-inline input[type=\"radio\"],.checkbox input[type=\"checkbox\"],.checkbox-inline input[type=\"checkbox\"]{float:left;margin-left:-20px;}.radio+.radio,.checkbox+.checkbox{margin-top:-5px;}.radio-inline,.checkbox-inline{display:inline-block;padding-left:20px;margin-bottom:0;vertical-align:middle;font-weight:normal;cursor:pointer;}.radio-inline+.radio-inline,.checkbox-inline+.checkbox-inline{margin-top:0;margin-left:10px;}input[type=\"radio\"][disabled],input[type=\"checkbox\"][disabled],.radio[disabled],.radio-inline[disabled],.checkbox[disabled],.checkbox-inline[disabled],fieldset[disabled] input[type=\"radio\"],fieldset[disabled] input[type=\"checkbox\"],fieldset[disabled] .radio,fieldset[disabled] .radio-inline,fieldset[disabled] .checkbox,fieldset[disabled] .checkbox-inline{cursor:not-allowed;}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}select.input-sm{height:30px;line-height:30px;}textarea.input-sm{height:auto;}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px;}select.input-lg{height:46px;line-height:46px;}textarea.input-lg{height:auto;}.has-warning .help-block,.has-warning .control-label,.has-warning .radio,.has-warning .checkbox,.has-warning .radio-inline,.has-warning .checkbox-inline{color:#8a6d3b;}.has-warning .form-control{border-color:#8a6d3b;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.has-warning .form-control:focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #c0a16b;}.has-warning .input-group-addon{color:#8a6d3b;border-color:#8a6d3b;background-color:#fcf8e3;}.has-error .help-block,.has-error .control-label,.has-error .radio,.has-error .checkbox,.has-error .radio-inline,.has-error .checkbox-inline{color:#a94442;}.has-error .form-control{border-color:#a94442;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.has-error .form-control:focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #ce8483;}.has-error .input-group-addon{color:#a94442;border-color:#a94442;background-color:#f2dede;}.has-success .help-block,.has-success .control-label,.has-success .radio,.has-success .checkbox,.has-success .radio-inline,.has-success .checkbox-inline{color:#3c763d;}.has-success .form-control{border-color:#3c763d;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.has-success .form-control:focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #67b168;}.has-success .input-group-addon{color:#3c763d;border-color:#3c763d;background-color:#dff0d8;}.form-control-static{margin-bottom:0;}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373;}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle;} .form-inline .form-control{display:inline-block;} .form-inline select.form-control{width:auto;} .form-inline .radio,.form-inline .checkbox{display:inline-block;margin-top:0;margin-bottom:0;padding-left:0;} .form-inline .radio input[type=\"radio\"],.form-inline .checkbox input[type=\"checkbox\"]{float:none;margin-left:0;}}.form-horizontal .control-label,.form-horizontal .radio,.form-horizontal .checkbox,.form-horizontal .radio-inline,.form-horizontal .checkbox-inline{margin-top:0;margin-bottom:0;padding-top:7px;}.form-horizontal .radio,.form-horizontal .checkbox{min-height:27px;}.form-horizontal .form-group{margin-left:-15px;margin-right:-15px;}.form-horizontal .form-group:before,.form-horizontal .form-group:after{content:\" \";display:table;}.form-horizontal .form-group:after{clear:both;}.form-horizontal .form-group:before,.form-horizontal .form-group:after{content:\" \";display:table;}.form-horizontal .form-group:after{clear:both;}.form-horizontal .form-control-static{padding-top:7px;}@media (min-width:768px){.form-horizontal .control-label{text-align:right;}}.btn{display:inline-block;margin-bottom:0;font-weight:normal;text-align:center;vertical-align:middle;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;padding:6px 12px;font-size:14px;line-height:1.428571429;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}.btn:hover,.btn:focus{color:#333333;text-decoration:none;}.btn:active,.btn.active{outline:0;background-image:none;-webkit-box-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);box-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;pointer-events:none;opacity:0.65;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;}.btn-default{color:#333333;background-color:#ffffff;border-color:#cccccc;}.btn-default:hover,.btn-default:focus,.btn-default:active,.btn-default.active,.open .dropdown-toggle.btn-default{color:#333333;background-color:#ebebeb;border-color:#adadad;}.btn-default:active,.btn-default.active,.open .dropdown-toggle.btn-default{background-image:none;}.btn-default.disabled,.btn-default[disabled],fieldset[disabled] .btn-default,.btn-default.disabled:hover,.btn-default[disabled]:hover,fieldset[disabled] .btn-default:hover,.btn-default.disabled:focus,.btn-default[disabled]:focus,fieldset[disabled] .btn-default:focus,.btn-default.disabled:active,.btn-default[disabled]:active,fieldset[disabled] .btn-default:active,.btn-default.disabled.active,.btn-default[disabled].active,fieldset[disabled] .btn-default.active{background-color:#ffffff;border-color:#cccccc;}.btn-default .badge{color:#ffffff;background-color:#fff;}.btn-primary{color:#ffffff;background-color:#428bca;border-color:#357ebd;}.btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.open .dropdown-toggle.btn-primary{color:#ffffff;background-color:#3276b1;border-color:#285e8e;}.btn-primary:active,.btn-primary.active,.open .dropdown-toggle.btn-primary{background-image:none;}.btn-primary.disabled,.btn-primary[disabled],fieldset[disabled] .btn-primary,.btn-primary.disabled:hover,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary:hover,.btn-primary.disabled:focus,.btn-primary[disabled]:focus,fieldset[disabled] .btn-primary:focus,.btn-primary.disabled:active,.btn-primary[disabled]:active,fieldset[disabled] .btn-primary:active,.btn-primary.disabled.active,.btn-primary[disabled].active,fieldset[disabled] .btn-primary.active{background-color:#428bca;border-color:#357ebd;}.btn-primary .badge{color:#428bca;background-color:#fff;}.btn-warning{color:#ffffff;background-color:#f0ad4e;border-color:#eea236;}.btn-warning:hover,.btn-warning:focus,.btn-warning:active,.btn-warning.active,.open .dropdown-toggle.btn-warning{color:#ffffff;background-color:#ed9c28;border-color:#d58512;}.btn-warning:active,.btn-warning.active,.open .dropdown-toggle.btn-warning{background-image:none;}.btn-warning.disabled,.btn-warning[disabled],fieldset[disabled] .btn-warning,.btn-warning.disabled:hover,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning:hover,.btn-warning.disabled:focus,.btn-warning[disabled]:focus,fieldset[disabled] .btn-warning:focus,.btn-warning.disabled:active,.btn-warning[disabled]:active,fieldset[disabled] .btn-warning:active,.btn-warning.disabled.active,.btn-warning[disabled].active,fieldset[disabled] .btn-warning.active{background-color:#f0ad4e;border-color:#eea236;}.btn-warning .badge{color:#f0ad4e;background-color:#fff;}.btn-danger{color:#ffffff;background-color:#d9534f;border-color:#d43f3a;}.btn-danger:hover,.btn-danger:focus,.btn-danger:active,.btn-danger.active,.open .dropdown-toggle.btn-danger{color:#ffffff;background-color:#d2322d;border-color:#ac2925;}.btn-danger:active,.btn-danger.active,.open .dropdown-toggle.btn-danger{background-image:none;}.btn-danger.disabled,.btn-danger[disabled],fieldset[disabled] .btn-danger,.btn-danger.disabled:hover,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger:hover,.btn-danger.disabled:focus,.btn-danger[disabled]:focus,fieldset[disabled] .btn-danger:focus,.btn-danger.disabled:active,.btn-danger[disabled]:active,fieldset[disabled] .btn-danger:active,.btn-danger.disabled.active,.btn-danger[disabled].active,fieldset[disabled] .btn-danger.active{background-color:#d9534f;border-color:#d43f3a;}.btn-danger .badge{color:#d9534f;background-color:#fff;}.btn-success{color:#ffffff;background-color:#5cb85c;border-color:#4cae4c;}.btn-success:hover,.btn-success:focus,.btn-success:active,.btn-success.active,.open .dropdown-toggle.btn-success{color:#ffffff;background-color:#47a447;border-color:#398439;}.btn-success:active,.btn-success.active,.open .dropdown-toggle.btn-success{background-image:none;}.btn-success.disabled,.btn-success[disabled],fieldset[disabled] .btn-success,.btn-success.disabled:hover,.btn-success[disabled]:hover,fieldset[disabled] .btn-success:hover,.btn-success.disabled:focus,.btn-success[disabled]:focus,fieldset[disabled] .btn-success:focus,.btn-success.disabled:active,.btn-success[disabled]:active,fieldset[disabled] .btn-success:active,.btn-success.disabled.active,.btn-success[disabled].active,fieldset[disabled] .btn-success.active{background-color:#5cb85c;border-color:#4cae4c;}.btn-success .badge{color:#5cb85c;background-color:#fff;}.btn-info{color:#ffffff;background-color:#5bc0de;border-color:#46b8da;}.btn-info:hover,.btn-info:focus,.btn-info:active,.btn-info.active,.open .dropdown-toggle.btn-info{color:#ffffff;background-color:#39b3d7;border-color:#269abc;}.btn-info:active,.btn-info.active,.open .dropdown-toggle.btn-info{background-image:none;}.btn-info.disabled,.btn-info[disabled],fieldset[disabled] .btn-info,.btn-info.disabled:hover,.btn-info[disabled]:hover,fieldset[disabled] .btn-info:hover,.btn-info.disabled:focus,.btn-info[disabled]:focus,fieldset[disabled] .btn-info:focus,.btn-info.disabled:active,.btn-info[disabled]:active,fieldset[disabled] .btn-info:active,.btn-info.disabled.active,.btn-info[disabled].active,fieldset[disabled] .btn-info.active{background-color:#5bc0de;border-color:#46b8da;}.btn-info .badge{color:#5bc0de;background-color:#fff;}.btn-link{color:#428bca;font-weight:normal;cursor:pointer;border-radius:0;}.btn-link,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;-webkit-box-shadow:none;box-shadow:none;}.btn-link,.btn-link:hover,.btn-link:focus,.btn-link:active{border-color:transparent;}.btn-link:hover,.btn-link:focus{color:#2a6496;text-decoration:underline;background-color:transparent;}.btn-link[disabled]:hover,fieldset[disabled] .btn-link:hover,.btn-link[disabled]:focus,fieldset[disabled] .btn-link:focus{color:#999999;text-decoration:none;}.btn-lg{padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px;}.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px;}.btn-block{display:block;width:100%;padding-left:0;padding-right:0;}.btn-block+.btn-block{margin-top:5px;}input[type=\"submit\"].btn-block,input[type=\"reset\"].btn-block,input[type=\"button\"].btn-block{width:100%;}.fade{opacity:0;-webkit-transition:opacity 0.15s linear;transition:opacity 0.15s linear;}.fade.in{opacity:1;}.collapse{display:none;}.collapse.in{display:block;}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height 0.35s ease;transition:height 0.35s ease;}@font-face{font-family:'Glyphicons Halflings';src:url('../fonts/glyphicons-halflings-regular.eot');src:url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'),url('../fonts/glyphicons-halflings-regular.woff') format('woff'),url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'),url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.glyphicon:empty{width:1em;}.glyphicon-asterisk:before{content:\"\\2a\";}.glyphicon-plus:before{content:\"\\2b\";}.glyphicon-euro:before{content:\"\\20ac\";}.glyphicon-minus:before{content:\"\\2212\";}.glyphicon-cloud:before{content:\"\\2601\";}.glyphicon-envelope:before{content:\"\\2709\";}.glyphicon-pencil:before{content:\"\\270f\";}.glyphicon-glass:before{content:\"\\e001\";}.glyphicon-music:before{content:\"\\e002\";}.glyphicon-search:before{content:\"\\e003\";}.glyphicon-heart:before{content:\"\\e005\";}.glyphicon-star:before{content:\"\\e006\";}.glyphicon-star-empty:before{content:\"\\e007\";}.glyphicon-user:before{content:\"\\e008\";}.glyphicon-film:before{content:\"\\e009\";}.glyphicon-th-large:before{content:\"\\e010\";}.glyphicon-th:before{content:\"\\e011\";}.glyphicon-th-list:before{content:\"\\e012\";}.glyphicon-ok:before{content:\"\\e013\";}.glyphicon-remove:before{content:\"\\e014\";}.glyphicon-zoom-in:before{content:\"\\e015\";}.glyphicon-zoom-out:before{content:\"\\e016\";}.glyphicon-off:before{content:\"\\e017\";}.glyphicon-signal:before{content:\"\\e018\";}.glyphicon-cog:before{content:\"\\e019\";}.glyphicon-trash:before{content:\"\\e020\";}.glyphicon-home:before{content:\"\\e021\";}.glyphicon-file:before{content:\"\\e022\";}.glyphicon-time:before{content:\"\\e023\";}.glyphicon-road:before{content:\"\\e024\";}.glyphicon-download-alt:before{content:\"\\e025\";}.glyphicon-download:before{content:\"\\e026\";}.glyphicon-upload:before{content:\"\\e027\";}.glyphicon-inbox:before{content:\"\\e028\";}.glyphicon-play-circle:before{content:\"\\e029\";}.glyphicon-repeat:before{content:\"\\e030\";}.glyphicon-refresh:before{content:\"\\e031\";}.glyphicon-list-alt:before{content:\"\\e032\";}.glyphicon-lock:before{content:\"\\e033\";}.glyphicon-flag:before{content:\"\\e034\";}.glyphicon-headphones:before{content:\"\\e035\";}.glyphicon-volume-off:before{content:\"\\e036\";}.glyphicon-volume-down:before{content:\"\\e037\";}.glyphicon-volume-up:before{content:\"\\e038\";}.glyphicon-qrcode:before{content:\"\\e039\";}.glyphicon-barcode:before{content:\"\\e040\";}.glyphicon-tag:before{content:\"\\e041\";}.glyphicon-tags:before{content:\"\\e042\";}.glyphicon-book:before{content:\"\\e043\";}.glyphicon-bookmark:before{content:\"\\e044\";}.glyphicon-print:before{content:\"\\e045\";}.glyphicon-camera:before{content:\"\\e046\";}.glyphicon-font:before{content:\"\\e047\";}.glyphicon-bold:before{content:\"\\e048\";}.glyphicon-italic:before{content:\"\\e049\";}.glyphicon-text-height:before{content:\"\\e050\";}.glyphicon-text-width:before{content:\"\\e051\";}.glyphicon-align-left:before{content:\"\\e052\";}.glyphicon-align-center:before{content:\"\\e053\";}.glyphicon-align-right:before{content:\"\\e054\";}.glyphicon-align-justify:before{content:\"\\e055\";}.glyphicon-list:before{content:\"\\e056\";}.glyphicon-indent-left:before{content:\"\\e057\";}.glyphicon-indent-right:before{content:\"\\e058\";}.glyphicon-facetime-video:before{content:\"\\e059\";}.glyphicon-picture:before{content:\"\\e060\";}.glyphicon-map-marker:before{content:\"\\e062\";}.glyphicon-adjust:before{content:\"\\e063\";}.glyphicon-tint:before{content:\"\\e064\";}.glyphicon-edit:before{content:\"\\e065\";}.glyphicon-share:before{content:\"\\e066\";}.glyphicon-check:before{content:\"\\e067\";}.glyphicon-move:before{content:\"\\e068\";}.glyphicon-step-backward:before{content:\"\\e069\";}.glyphicon-fast-backward:before{content:\"\\e070\";}.glyphicon-backward:before{content:\"\\e071\";}.glyphicon-play:before{content:\"\\e072\";}.glyphicon-pause:before{content:\"\\e073\";}.glyphicon-stop:before{content:\"\\e074\";}.glyphicon-forward:before{content:\"\\e075\";}.glyphicon-fast-forward:before{content:\"\\e076\";}.glyphicon-step-forward:before{content:\"\\e077\";}.glyphicon-eject:before{content:\"\\e078\";}.glyphicon-chevron-left:before{content:\"\\e079\";}.glyphicon-chevron-right:before{content:\"\\e080\";}.glyphicon-plus-sign:before{content:\"\\e081\";}.glyphicon-minus-sign:before{content:\"\\e082\";}.glyphicon-remove-sign:before{content:\"\\e083\";}.glyphicon-ok-sign:before{content:\"\\e084\";}.glyphicon-question-sign:before{content:\"\\e085\";}.glyphicon-info-sign:before{content:\"\\e086\";}.glyphicon-screenshot:before{content:\"\\e087\";}.glyphicon-remove-circle:before{content:\"\\e088\";}.glyphicon-ok-circle:before{content:\"\\e089\";}.glyphicon-ban-circle:before{content:\"\\e090\";}.glyphicon-arrow-left:before{content:\"\\e091\";}.glyphicon-arrow-right:before{content:\"\\e092\";}.glyphicon-arrow-up:before{content:\"\\e093\";}.glyphicon-arrow-down:before{content:\"\\e094\";}.glyphicon-share-alt:before{content:\"\\e095\";}.glyphicon-resize-full:before{content:\"\\e096\";}.glyphicon-resize-small:before{content:\"\\e097\";}.glyphicon-exclamation-sign:before{content:\"\\e101\";}.glyphicon-gift:before{content:\"\\e102\";}.glyphicon-leaf:before{content:\"\\e103\";}.glyphicon-fire:before{content:\"\\e104\";}.glyphicon-eye-open:before{content:\"\\e105\";}.glyphicon-eye-close:before{content:\"\\e106\";}.glyphicon-warning-sign:before{content:\"\\e107\";}.glyphicon-plane:before{content:\"\\e108\";}.glyphicon-calendar:before{content:\"\\e109\";}.glyphicon-random:before{content:\"\\e110\";}.glyphicon-comment:before{content:\"\\e111\";}.glyphicon-magnet:before{content:\"\\e112\";}.glyphicon-chevron-up:before{content:\"\\e113\";}.glyphicon-chevron-down:before{content:\"\\e114\";}.glyphicon-retweet:before{content:\"\\e115\";}.glyphicon-shopping-cart:before{content:\"\\e116\";}.glyphicon-folder-close:before{content:\"\\e117\";}.glyphicon-folder-open:before{content:\"\\e118\";}.glyphicon-resize-vertical:before{content:\"\\e119\";}.glyphicon-resize-horizontal:before{content:\"\\e120\";}.glyphicon-hdd:before{content:\"\\e121\";}.glyphicon-bullhorn:before{content:\"\\e122\";}.glyphicon-bell:before{content:\"\\e123\";}.glyphicon-certificate:before{content:\"\\e124\";}.glyphicon-thumbs-up:before{content:\"\\e125\";}.glyphicon-thumbs-down:before{content:\"\\e126\";}.glyphicon-hand-right:before{content:\"\\e127\";}.glyphicon-hand-left:before{content:\"\\e128\";}.glyphicon-hand-up:before{content:\"\\e129\";}.glyphicon-hand-down:before{content:\"\\e130\";}.glyphicon-circle-arrow-right:before{content:\"\\e131\";}.glyphicon-circle-arrow-left:before{content:\"\\e132\";}.glyphicon-circle-arrow-up:before{content:\"\\e133\";}.glyphicon-circle-arrow-down:before{content:\"\\e134\";}.glyphicon-globe:before{content:\"\\e135\";}.glyphicon-wrench:before{content:\"\\e136\";}.glyphicon-tasks:before{content:\"\\e137\";}.glyphicon-filter:before{content:\"\\e138\";}.glyphicon-briefcase:before{content:\"\\e139\";}.glyphicon-fullscreen:before{content:\"\\e140\";}.glyphicon-dashboard:before{content:\"\\e141\";}.glyphicon-paperclip:before{content:\"\\e142\";}.glyphicon-heart-empty:before{content:\"\\e143\";}.glyphicon-link:before{content:\"\\e144\";}.glyphicon-phone:before{content:\"\\e145\";}.glyphicon-pushpin:before{content:\"\\e146\";}.glyphicon-usd:before{content:\"\\e148\";}.glyphicon-gbp:before{content:\"\\e149\";}.glyphicon-sort:before{content:\"\\e150\";}.glyphicon-sort-by-alphabet:before{content:\"\\e151\";}.glyphicon-sort-by-alphabet-alt:before{content:\"\\e152\";}.glyphicon-sort-by-order:before{content:\"\\e153\";}.glyphicon-sort-by-order-alt:before{content:\"\\e154\";}.glyphicon-sort-by-attributes:before{content:\"\\e155\";}.glyphicon-sort-by-attributes-alt:before{content:\"\\e156\";}.glyphicon-unchecked:before{content:\"\\e157\";}.glyphicon-expand:before{content:\"\\e158\";}.glyphicon-collapse-down:before{content:\"\\e159\";}.glyphicon-collapse-up:before{content:\"\\e160\";}.glyphicon-log-in:before{content:\"\\e161\";}.glyphicon-flash:before{content:\"\\e162\";}.glyphicon-log-out:before{content:\"\\e163\";}.glyphicon-new-window:before{content:\"\\e164\";}.glyphicon-record:before{content:\"\\e165\";}.glyphicon-save:before{content:\"\\e166\";}.glyphicon-open:before{content:\"\\e167\";}.glyphicon-saved:before{content:\"\\e168\";}.glyphicon-import:before{content:\"\\e169\";}.glyphicon-export:before{content:\"\\e170\";}.glyphicon-send:before{content:\"\\e171\";}.glyphicon-floppy-disk:before{content:\"\\e172\";}.glyphicon-floppy-saved:before{content:\"\\e173\";}.glyphicon-floppy-remove:before{content:\"\\e174\";}.glyphicon-floppy-save:before{content:\"\\e175\";}.glyphicon-floppy-open:before{content:\"\\e176\";}.glyphicon-credit-card:before{content:\"\\e177\";}.glyphicon-transfer:before{content:\"\\e178\";}.glyphicon-cutlery:before{content:\"\\e179\";}.glyphicon-header:before{content:\"\\e180\";}.glyphicon-compressed:before{content:\"\\e181\";}.glyphicon-earphone:before{content:\"\\e182\";}.glyphicon-phone-alt:before{content:\"\\e183\";}.glyphicon-tower:before{content:\"\\e184\";}.glyphicon-stats:before{content:\"\\e185\";}.glyphicon-sd-video:before{content:\"\\e186\";}.glyphicon-hd-video:before{content:\"\\e187\";}.glyphicon-subtitles:before{content:\"\\e188\";}.glyphicon-sound-stereo:before{content:\"\\e189\";}.glyphicon-sound-dolby:before{content:\"\\e190\";}.glyphicon-sound-5-1:before{content:\"\\e191\";}.glyphicon-sound-6-1:before{content:\"\\e192\";}.glyphicon-sound-7-1:before{content:\"\\e193\";}.glyphicon-copyright-mark:before{content:\"\\e194\";}.glyphicon-registration-mark:before{content:\"\\e195\";}.glyphicon-cloud-download:before{content:\"\\e197\";}.glyphicon-cloud-upload:before{content:\"\\e198\";}.glyphicon-tree-conifer:before{content:\"\\e199\";}.glyphicon-tree-deciduous:before{content:\"\\e200\";}.caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px solid;border-right:4px solid transparent;border-left:4px solid transparent;}.dropdown{position:relative;}.dropdown-toggle:focus{outline:0;}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;list-style:none;font-size:14px;background-color:#ffffff;border:1px solid #cccccc;border:1px solid rgba(0, 0, 0, 0.15);border-radius:4px;-webkit-box-shadow:0 6px 12px rgba(0, 0, 0, 0.175);box-shadow:0 6px 12px rgba(0, 0, 0, 0.175);background-clip:padding-box;}.dropdown-menu.pull-right{right:0;left:auto;}.dropdown-menu .divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5;}.dropdown-menu>li>a{display:block;padding:3px 20px;clear:both;font-weight:normal;line-height:1.428571429;color:#333333;white-space:nowrap;}.dropdown-menu>li>a:hover,.dropdown-menu>li>a:focus{text-decoration:none;color:#262626;background-color:#f5f5f5;}.dropdown-menu>.active>a,.dropdown-menu>.active>a:hover,.dropdown-menu>.active>a:focus{color:#ffffff;text-decoration:none;outline:0;background-color:#428bca;}.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus{color:#999999;}.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus{text-decoration:none;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);cursor:not-allowed;}.open>.dropdown-menu{display:block;}.open>a{outline:0;}.dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.428571429;color:#999999;}.dropdown-backdrop{position:fixed;left:0;right:0;bottom:0;top:0;z-index:990;}.pull-right>.dropdown-menu{right:0;left:auto;}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{border-top:0;border-bottom:4px solid;content:\"\";}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:1px;}@media (min-width:768px){.navbar-right .dropdown-menu{right:0;left:auto;}}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle;}.btn-group>.btn,.btn-group-vertical>.btn{position:relative;float:left;}.btn-group>.btn:hover,.btn-group-vertical>.btn:hover,.btn-group>.btn:focus,.btn-group-vertical>.btn:focus,.btn-group>.btn:active,.btn-group-vertical>.btn:active,.btn-group>.btn.active,.btn-group-vertical>.btn.active{z-index:2;}.btn-group>.btn:focus,.btn-group-vertical>.btn:focus{outline:none;}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px;}.btn-toolbar:before,.btn-toolbar:after{content:\" \";display:table;}.btn-toolbar:after{clear:both;}.btn-toolbar:before,.btn-toolbar:after{content:\" \";display:table;}.btn-toolbar:after{clear:both;}.btn-toolbar .btn-group{float:left;}.btn-toolbar>.btn+.btn,.btn-toolbar>.btn-group+.btn,.btn-toolbar>.btn+.btn-group,.btn-toolbar>.btn-group+.btn-group{margin-left:5px;}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0;}.btn-group>.btn:first-child{margin-left:0;}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0;}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;}.btn-group>.btn-group{float:left;}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0;}.btn-group>.btn-group:first-child>.btn:last-child,.btn-group>.btn-group:first-child>.dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0;}.btn-group>.btn-group:last-child>.btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0;}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0;}.btn-group-xs>.btn{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px;}.btn-group-sm>.btn{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}.btn-group-lg>.btn{padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px;}.btn-group>.btn+.dropdown-toggle{padding-left:8px;padding-right:8px;}.btn-group>.btn-lg+.dropdown-toggle{padding-left:12px;padding-right:12px;}.btn-group.open .dropdown-toggle{-webkit-box-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);box-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);}.btn-group.open .dropdown-toggle.btn-link{-webkit-box-shadow:none;box-shadow:none;}.btn .caret{margin-left:0;}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0;}.dropup .btn-lg .caret{border-width:0 5px 5px;}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%;}.btn-group-vertical>.btn-group:before,.btn-group-vertical>.btn-group:after{content:\" \";display:table;}.btn-group-vertical>.btn-group:after{clear:both;}.btn-group-vertical>.btn-group:before,.btn-group-vertical>.btn-group:after{content:\" \";display:table;}.btn-group-vertical>.btn-group:after{clear:both;}.btn-group-vertical>.btn-group>.btn{float:none;}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0;}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0;}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0;}.btn-group-vertical>.btn:last-child:not(:first-child){border-bottom-left-radius:4px;border-top-right-radius:0;border-top-left-radius:0;}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0;}.btn-group-vertical>.btn-group:first-child>.btn:last-child,.btn-group-vertical>.btn-group:first-child>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0;}.btn-group-vertical>.btn-group:last-child>.btn:first-child{border-top-right-radius:0;border-top-left-radius:0;}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate;}.btn-group-justified>.btn,.btn-group-justified>.btn-group{float:none;display:table-cell;width:1%;}.btn-group-justified>.btn-group .btn{width:100%;}[data-toggle=\"buttons\"]>.btn>input[type=\"radio\"],[data-toggle=\"buttons\"]>.btn>input[type=\"checkbox\"]{display:none;}.input-group{position:relative;display:table;border-collapse:separate;}.input-group[class*=\"col-\"]{float:none;padding-left:0;padding-right:0;}.input-group .form-control{width:100%;margin-bottom:0;}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.33;border-radius:6px;}select.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn{height:46px;line-height:46px;}textarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn{height:auto;}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}select.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn{height:30px;line-height:30px;}textarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn{height:auto;}.input-group-addon,.input-group-btn,.input-group .form-control{display:table-cell;}.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child){border-radius:0;}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle;}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:normal;line-height:1;color:#555555;text-align:center;background-color:#eeeeee;border:1px solid #cccccc;border-radius:4px;}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px;}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px;}.input-group-addon input[type=\"radio\"],.input-group-addon input[type=\"checkbox\"]{margin-top:0;}.input-group .form-control:first-child,.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0;}.input-group-addon:first-child{border-right:0;}.input-group .form-control:last-child,.input-group-addon:last-child,.input-group-btn:last-child>.btn,.input-group-btn:last-child>.dropdown-toggle,.input-group-btn:first-child>.btn:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;}.input-group-addon:last-child{border-left:0;}.input-group-btn{position:relative;white-space:nowrap;}.input-group-btn:first-child>.btn{margin-right:-1px;}.input-group-btn:last-child>.btn{margin-left:-1px;}.input-group-btn>.btn{position:relative;}.input-group-btn>.btn+.btn{margin-left:-4px;}.input-group-btn>.btn:hover,.input-group-btn>.btn:active{z-index:2;}.nav{margin-bottom:0;padding-left:0;list-style:none;}.nav:before,.nav:after{content:\" \";display:table;}.nav:after{clear:both;}.nav:before,.nav:after{content:\" \";display:table;}.nav:after{clear:both;}.nav>li{position:relative;display:block;}.nav>li>a{position:relative;display:block;padding:10px 15px;}.nav>li>a:hover,.nav>li>a:focus{text-decoration:none;background-color:#eeeeee;}.nav>li.disabled>a{color:#999999;}.nav>li.disabled>a:hover,.nav>li.disabled>a:focus{color:#999999;text-decoration:none;background-color:transparent;cursor:not-allowed;}.nav .open>a,.nav .open>a:hover,.nav .open>a:focus{background-color:#eeeeee;border-color:#428bca;}.nav .nav-divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5;}.nav>li>a>img{max-width:none;}.nav-tabs{border-bottom:1px solid #dddddd;}.nav-tabs>li{float:left;margin-bottom:-1px;}.nav-tabs>li>a{margin-right:2px;line-height:1.428571429;border:1px solid transparent;border-radius:4px 4px 0 0;}.nav-tabs>li>a:hover{border-color:#eeeeee #eeeeee #dddddd;}.nav-tabs>li.active>a,.nav-tabs>li.active>a:hover,.nav-tabs>li.active>a:focus{color:#555555;background-color:#ffffff;border:1px solid #dddddd;border-bottom-color:transparent;cursor:default;}.nav-tabs.nav-justified{width:100%;border-bottom:0;}.nav-tabs.nav-justified>li{float:none;}.nav-tabs.nav-justified>li>a{text-align:center;margin-bottom:5px;}.nav-tabs.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto;}@media (min-width:768px){.nav-tabs.nav-justified>li{display:table-cell;width:1%;}.nav-tabs.nav-justified>li>a{margin-bottom:0;}}.nav-tabs.nav-justified>li>a{margin-right:0;border-radius:4px;}.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:hover,.nav-tabs.nav-justified>.active>a:focus{border:1px solid #dddddd;}@media (min-width:768px){.nav-tabs.nav-justified>li>a{border-bottom:1px solid #dddddd;border-radius:4px 4px 0 0;} .nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:hover,.nav-tabs.nav-justified>.active>a:focus{border-bottom-color:#ffffff;}}.nav-pills>li{float:left;}.nav-pills>li>a{border-radius:4px;}.nav-pills>li+li{margin-left:2px;}.nav-pills>li.active>a,.nav-pills>li.active>a:hover,.nav-pills>li.active>a:focus{color:#ffffff;background-color:#428bca;}.nav-stacked>li{float:none;}.nav-stacked>li+li{margin-top:2px;margin-left:0;}.nav-justified{width:100%;}.nav-justified>li{float:none;}.nav-justified>li>a{text-align:center;margin-bottom:5px;}.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto;}@media (min-width:768px){.nav-justified>li{display:table-cell;width:1%;}.nav-justified>li>a{margin-bottom:0;}}.nav-tabs-justified{border-bottom:0;}.nav-tabs-justified>li>a{margin-right:0;border-radius:4px;}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:hover,.nav-tabs-justified>.active>a:focus{border:1px solid #dddddd;}@media (min-width:768px){.nav-tabs-justified>li>a{border-bottom:1px solid #dddddd;border-radius:4px 4px 0 0;} .nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:hover,.nav-tabs-justified>.active>a:focus{border-bottom-color:#ffffff;}}.tab-content>.tab-pane{display:none;}.tab-content>.active{display:block;}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0;}.navbar{position:relative;min-height:50px;margin-bottom:20px;border:1px solid transparent;}.navbar:before,.navbar:after{content:\" \";display:table;}.navbar:after{clear:both;}.navbar:before,.navbar:after{content:\" \";display:table;}.navbar:after{clear:both;}@media (min-width:768px){.navbar{border-radius:4px;}}.navbar-header:before,.navbar-header:after{content:\" \";display:table;}.navbar-header:after{clear:both;}.navbar-header:before,.navbar-header:after{content:\" \";display:table;}.navbar-header:after{clear:both;}@media (min-width:768px){.navbar-header{float:left;}}.navbar-collapse{max-height:340px;overflow-x:visible;padding-right:15px;padding-left:15px;border-top:1px solid transparent;box-shadow:inset 0 1px 0 rgba(255, 255, 255, 0.1);-webkit-overflow-scrolling:touch;}.navbar-collapse:before,.navbar-collapse:after{content:\" \";display:table;}.navbar-collapse:after{clear:both;}.navbar-collapse:before,.navbar-collapse:after{content:\" \";display:table;}.navbar-collapse:after{clear:both;}.navbar-collapse.in{overflow-y:auto;}@media (min-width:768px){.navbar-collapse{width:auto;border-top:0;box-shadow:none;}.navbar-collapse.collapse{display:block !important;height:auto !important;padding-bottom:0;overflow:visible !important;} .navbar-collapse.in{overflow-y:visible;} .navbar-fixed-top .navbar-collapse,.navbar-static-top .navbar-collapse,.navbar-fixed-bottom .navbar-collapse{padding-left:0;padding-right:0;}}.container>.navbar-header,.container>.navbar-collapse{margin-right:-15px;margin-left:-15px;}@media (min-width:768px){.container>.navbar-header,.container>.navbar-collapse{margin-right:0;margin-left:0;}}.navbar-static-top{z-index:1000;border-width:0 0 1px;}@media (min-width:768px){.navbar-static-top{border-radius:0;}}.navbar-fixed-top,.navbar-fixed-bottom{position:fixed;right:0;left:0;z-index:1030;}@media (min-width:768px){.navbar-fixed-top,.navbar-fixed-bottom{border-radius:0;}}.navbar-fixed-top{top:0;border-width:0 0 1px;}.navbar-fixed-bottom{bottom:0;margin-bottom:0;border-width:1px 0 0;}.navbar-brand{float:left;padding:15px 15px;font-size:18px;line-height:20px;}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none;}@media (min-width:768px){.navbar>.container .navbar-brand{margin-left:-15px;}}.navbar-toggle{position:relative;float:right;margin-right:15px;padding:9px 10px;margin-top:8px;margin-bottom:8px;background-color:transparent;background-image:none;border:1px solid transparent;border-radius:4px;}.navbar-toggle .icon-bar{display:block;width:22px;height:2px;border-radius:1px;}.navbar-toggle .icon-bar+.icon-bar{margin-top:4px;}@media (min-width:768px){.navbar-toggle{display:none;}}.navbar-nav{margin:7.5px -15px;}.navbar-nav>li>a{padding-top:10px;padding-bottom:10px;line-height:20px;}@media (max-width:767px){.navbar-nav .open .dropdown-menu{position:static;float:none;width:auto;margin-top:0;background-color:transparent;border:0;box-shadow:none;}.navbar-nav .open .dropdown-menu>li>a,.navbar-nav .open .dropdown-menu .dropdown-header{padding:5px 15px 5px 25px;} .navbar-nav .open .dropdown-menu>li>a{line-height:20px;}.navbar-nav .open .dropdown-menu>li>a:hover,.navbar-nav .open .dropdown-menu>li>a:focus{background-image:none;}}@media (min-width:768px){.navbar-nav{float:left;margin:0;}.navbar-nav>li{float:left;}.navbar-nav>li>a{padding-top:15px;padding-bottom:15px;} .navbar-nav.navbar-right:last-child{margin-right:-15px;}}@media (min-width:768px){.navbar-left{float:left !important;} .navbar-right{float:right !important;}}.navbar-form{margin-left:-15px;margin-right:-15px;padding:10px 15px;border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255, 255, 255, 0.1),0 1px 0 rgba(255, 255, 255, 0.1);box-shadow:inset 0 1px 0 rgba(255, 255, 255, 0.1),0 1px 0 rgba(255, 255, 255, 0.1);margin-top:8px;margin-bottom:8px;}@media (min-width:768px){.navbar-form .form-group{display:inline-block;margin-bottom:0;vertical-align:middle;} .navbar-form .form-control{display:inline-block;} .navbar-form select.form-control{width:auto;} .navbar-form .radio,.navbar-form .checkbox{display:inline-block;margin-top:0;margin-bottom:0;padding-left:0;} .navbar-form .radio input[type=\"radio\"],.navbar-form .checkbox input[type=\"checkbox\"]{float:none;margin-left:0;}}@media (max-width:767px){.navbar-form .form-group{margin-bottom:5px;}}@media (min-width:768px){.navbar-form{width:auto;border:0;margin-left:0;margin-right:0;padding-top:0;padding-bottom:0;-webkit-box-shadow:none;box-shadow:none;}.navbar-form.navbar-right:last-child{margin-right:-15px;}}.navbar-nav>li>.dropdown-menu{margin-top:0;border-top-right-radius:0;border-top-left-radius:0;}.navbar-fixed-bottom .navbar-nav>li>.dropdown-menu{border-bottom-right-radius:0;border-bottom-left-radius:0;}.navbar-nav.pull-right>li>.dropdown-menu,.navbar-nav>li>.dropdown-menu.pull-right{left:auto;right:0;}.navbar-btn{margin-top:8px;margin-bottom:8px;}.navbar-btn.btn-sm{margin-top:10px;margin-bottom:10px;}.navbar-btn.btn-xs{margin-top:14px;margin-bottom:14px;}.navbar-text{margin-top:15px;margin-bottom:15px;}@media (min-width:768px){.navbar-text{float:left;margin-left:15px;margin-right:15px;}.navbar-text.navbar-right:last-child{margin-right:0;}}.navbar-default{background-color:#f8f8f8;border-color:#e7e7e7;}.navbar-default .navbar-brand{color:#777777;}.navbar-default .navbar-brand:hover,.navbar-default .navbar-brand:focus{color:#5e5e5e;background-color:transparent;}.navbar-default .navbar-text{color:#777777;}.navbar-default .navbar-nav>li>a{color:#777777;}.navbar-default .navbar-nav>li>a:hover,.navbar-default .navbar-nav>li>a:focus{color:#333333;background-color:transparent;}.navbar-default .navbar-nav>.active>a,.navbar-default .navbar-nav>.active>a:hover,.navbar-default .navbar-nav>.active>a:focus{color:#555555;background-color:#e7e7e7;}.navbar-default .navbar-nav>.disabled>a,.navbar-default .navbar-nav>.disabled>a:hover,.navbar-default .navbar-nav>.disabled>a:focus{color:#cccccc;background-color:transparent;}.navbar-default .navbar-toggle{border-color:#dddddd;}.navbar-default .navbar-toggle:hover,.navbar-default .navbar-toggle:focus{background-color:#dddddd;}.navbar-default .navbar-toggle .icon-bar{background-color:#cccccc;}.navbar-default .navbar-collapse,.navbar-default .navbar-form{border-color:#e7e7e7;}.navbar-default .navbar-nav>.open>a,.navbar-default .navbar-nav>.open>a:hover,.navbar-default .navbar-nav>.open>a:focus{background-color:#e7e7e7;color:#555555;}@media (max-width:767px){.navbar-default .navbar-nav .open .dropdown-menu>li>a{color:#777777;}.navbar-default .navbar-nav .open .dropdown-menu>li>a:hover,.navbar-default .navbar-nav .open .dropdown-menu>li>a:focus{color:#333333;background-color:transparent;} .navbar-default .navbar-nav .open .dropdown-menu>.active>a,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:hover,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:focus{color:#555555;background-color:#e7e7e7;} .navbar-default .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:hover,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:focus{color:#cccccc;background-color:transparent;}}.navbar-default .navbar-link{color:#777777;}.navbar-default .navbar-link:hover{color:#333333;}.navbar-inverse{background-color:#222222;border-color:#080808;}.navbar-inverse .navbar-brand{color:#999999;}.navbar-inverse .navbar-brand:hover,.navbar-inverse .navbar-brand:focus{color:#ffffff;background-color:transparent;}.navbar-inverse .navbar-text{color:#999999;}.navbar-inverse .navbar-nav>li>a{color:#999999;}.navbar-inverse .navbar-nav>li>a:hover,.navbar-inverse .navbar-nav>li>a:focus{color:#ffffff;background-color:transparent;}.navbar-inverse .navbar-nav>.active>a,.navbar-inverse .navbar-nav>.active>a:hover,.navbar-inverse .navbar-nav>.active>a:focus{color:#ffffff;background-color:#080808;}.navbar-inverse .navbar-nav>.disabled>a,.navbar-inverse .navbar-nav>.disabled>a:hover,.navbar-inverse .navbar-nav>.disabled>a:focus{color:#444444;background-color:transparent;}.navbar-inverse .navbar-toggle{border-color:#333333;}.navbar-inverse .navbar-toggle:hover,.navbar-inverse .navbar-toggle:focus{background-color:#333333;}.navbar-inverse .navbar-toggle .icon-bar{background-color:#ffffff;}.navbar-inverse .navbar-collapse,.navbar-inverse .navbar-form{border-color:#101010;}.navbar-inverse .navbar-nav>.open>a,.navbar-inverse .navbar-nav>.open>a:hover,.navbar-inverse .navbar-nav>.open>a:focus{background-color:#080808;color:#ffffff;}@media (max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu>.dropdown-header{border-color:#080808;} .navbar-inverse .navbar-nav .open .dropdown-menu .divider{background-color:#080808;} .navbar-inverse .navbar-nav .open .dropdown-menu>li>a{color:#999999;}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:hover,.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:focus{color:#ffffff;background-color:transparent;} .navbar-inverse .navbar-nav .open .dropdown-menu>.active>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:hover,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:focus{color:#ffffff;background-color:#080808;} .navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:hover,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:focus{color:#444444;background-color:transparent;}}.navbar-inverse .navbar-link{color:#999999;}.navbar-inverse .navbar-link:hover{color:#ffffff;}.breadcrumb{padding:8px 15px;margin-bottom:20px;list-style:none;background-color:#f5f5f5;border-radius:4px;}.breadcrumb>li{display:inline-block;}.breadcrumb>li+li:before{content:\"/\\00a0\";padding:0 5px;color:#cccccc;}.breadcrumb>.active{color:#999999;}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px;}.pagination>li{display:inline;}.pagination>li>a,.pagination>li>span{position:relative;float:left;padding:6px 12px;line-height:1.428571429;text-decoration:none;background-color:#ffffff;border:1px solid #dddddd;margin-left:-1px;}.pagination>li:first-child>a,.pagination>li:first-child>span{margin-left:0;border-bottom-left-radius:4px;border-top-left-radius:4px;}.pagination>li:last-child>a,.pagination>li:last-child>span{border-bottom-right-radius:4px;border-top-right-radius:4px;}.pagination>li>a:hover,.pagination>li>span:hover,.pagination>li>a:focus,.pagination>li>span:focus{background-color:#eeeeee;}.pagination>.active>a,.pagination>.active>span,.pagination>.active>a:hover,.pagination>.active>span:hover,.pagination>.active>a:focus,.pagination>.active>span:focus{z-index:2;color:#ffffff;background-color:#428bca;border-color:#428bca;cursor:default;}.pagination>.disabled>span,.pagination>.disabled>span:hover,.pagination>.disabled>span:focus,.pagination>.disabled>a,.pagination>.disabled>a:hover,.pagination>.disabled>a:focus{color:#999999;background-color:#ffffff;border-color:#dddddd;cursor:not-allowed;}.pagination-lg>li>a,.pagination-lg>li>span{padding:10px 16px;font-size:18px;}.pagination-lg>li:first-child>a,.pagination-lg>li:first-child>span{border-bottom-left-radius:6px;border-top-left-radius:6px;}.pagination-lg>li:last-child>a,.pagination-lg>li:last-child>span{border-bottom-right-radius:6px;border-top-right-radius:6px;}.pagination-sm>li>a,.pagination-sm>li>span{padding:5px 10px;font-size:12px;}.pagination-sm>li:first-child>a,.pagination-sm>li:first-child>span{border-bottom-left-radius:3px;border-top-left-radius:3px;}.pagination-sm>li:last-child>a,.pagination-sm>li:last-child>span{border-bottom-right-radius:3px;border-top-right-radius:3px;}.pager{padding-left:0;margin:20px 0;list-style:none;text-align:center;}.pager:before,.pager:after{content:\" \";display:table;}.pager:after{clear:both;}.pager:before,.pager:after{content:\" \";display:table;}.pager:after{clear:both;}.pager li{display:inline;}.pager li>a,.pager li>span{display:inline-block;padding:5px 14px;background-color:#ffffff;border:1px solid #dddddd;border-radius:15px;}.pager li>a:hover,.pager li>a:focus{text-decoration:none;background-color:#eeeeee;}.pager .next>a,.pager .next>span{float:right;}.pager .previous>a,.pager .previous>span{float:left;}.pager .disabled>a,.pager .disabled>a:hover,.pager .disabled>a:focus,.pager .disabled>span{color:#999999;background-color:#ffffff;cursor:not-allowed;}.label{display:inline;padding:.2em .6em .3em;font-size:75%;font-weight:bold;line-height:1;color:#ffffff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25em;}.label[href]:hover,.label[href]:focus{color:#ffffff;text-decoration:none;cursor:pointer;}.label:empty{display:none;}.btn .label{position:relative;top:-1px;}.label-default{background-color:#999999;}.label-default[href]:hover,.label-default[href]:focus{background-color:#808080;}.label-primary{background-color:#428bca;}.label-primary[href]:hover,.label-primary[href]:focus{background-color:#3071a9;}.label-success{background-color:#5cb85c;}.label-success[href]:hover,.label-success[href]:focus{background-color:#449d44;}.label-info{background-color:#5bc0de;}.label-info[href]:hover,.label-info[href]:focus{background-color:#31b0d5;}.label-warning{background-color:#f0ad4e;}.label-warning[href]:hover,.label-warning[href]:focus{background-color:#ec971f;}.label-danger{background-color:#d9534f;}.label-danger[href]:hover,.label-danger[href]:focus{background-color:#c9302c;}.badge{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:bold;color:#ffffff;line-height:1;vertical-align:baseline;white-space:nowrap;text-align:center;background-color:#999999;border-radius:10px;}.badge:empty{display:none;}.btn .badge{position:relative;top:-1px;}a.badge:hover,a.badge:focus{color:#ffffff;text-decoration:none;cursor:pointer;}a.list-group-item.active>.badge,.nav-pills>.active>a>.badge{color:#428bca;background-color:#ffffff;}.nav-pills>li>a>.badge{margin-left:3px;}.jumbotron{padding:30px;margin-bottom:30px;font-size:21px;font-weight:200;line-height:2.1428571435;color:inherit;background-color:#eeeeee;}.jumbotron h1,.jumbotron .h1{line-height:1;color:inherit;}.jumbotron p{line-height:1.4;}.container .jumbotron{border-radius:6px;}.jumbotron .container{max-width:100%;}@media screen and (min-width:768px){.jumbotron{padding-top:48px;padding-bottom:48px;}.container .jumbotron{padding-left:60px;padding-right:60px;} .jumbotron h1,.jumbotron .h1{font-size:63px;}}.thumbnail{display:block;padding:4px;margin-bottom:20px;line-height:1.428571429;background-color:#ffffff;border:1px solid #dddddd;border-radius:4px;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;}.thumbnail>img,.thumbnail a>img{display:block;max-width:100%;height:auto;margin-left:auto;margin-right:auto;}a.thumbnail:hover,a.thumbnail:focus,a.thumbnail.active{border-color:#428bca;}.thumbnail .caption{padding:9px;color:#333333;}.alert{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px;}.alert h4{margin-top:0;color:inherit;}.alert .alert-link{font-weight:bold;}.alert>p,.alert>ul{margin-bottom:0;}.alert>p+p{margin-top:5px;}.alert-dismissable{padding-right:35px;}.alert-dismissable .close{position:relative;top:-2px;right:-21px;color:inherit;}.alert-success{background-color:#dff0d8;border-color:#d6e9c6;color:#3c763d;}.alert-success hr{border-top-color:#c9e2b3;}.alert-success .alert-link{color:#2b542c;}.alert-info{background-color:#d9edf7;border-color:#bce8f1;color:#31708f;}.alert-info hr{border-top-color:#a6e1ec;}.alert-info .alert-link{color:#245269;}.alert-warning{background-color:#fcf8e3;border-color:#faebcc;color:#8a6d3b;}.alert-warning hr{border-top-color:#f7e1b5;}.alert-warning .alert-link{color:#66512c;}.alert-danger{background-color:#f2dede;border-color:#ebccd1;color:#a94442;}.alert-danger hr{border-top-color:#e4b9c0;}.alert-danger .alert-link{color:#843534;}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}@keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}.progress{overflow:hidden;height:20px;margin-bottom:20px;background-color:#f5f5f5;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1);}.progress-bar{float:left;width:0%;height:100%;font-size:12px;line-height:20px;color:#ffffff;text-align:center;background-color:#428bca;-webkit-box-shadow:inset 0 -1px 0 rgba(0, 0, 0, 0.15);box-shadow:inset 0 -1px 0 rgba(0, 0, 0, 0.15);-webkit-transition:width 0.6s ease;transition:width 0.6s ease;}.progress-striped .progress-bar{background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-size:40px 40px;}.progress.active .progress-bar{-webkit-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite;}.progress-bar-success{background-color:#5cb85c;}.progress-striped .progress-bar-success{background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}.progress-bar-info{background-color:#5bc0de;}.progress-striped .progress-bar-info{background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}.progress-bar-warning{background-color:#f0ad4e;}.progress-striped .progress-bar-warning{background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}.progress-bar-danger{background-color:#d9534f;}.progress-striped .progress-bar-danger{background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}.media,.media-body{overflow:hidden;zoom:1;}.media,.media .media{margin-top:15px;}.media:first-child{margin-top:0;}.media-object{display:block;}.media-heading{margin:0 0 5px;}.media>.pull-left{margin-right:10px;}.media>.pull-right{margin-left:10px;}.media-list{padding-left:0;list-style:none;}.list-group{margin-bottom:20px;padding-left:0;}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#ffffff;border:1px solid #dddddd;}.list-group-item:first-child{border-top-right-radius:4px;border-top-left-radius:4px;}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px;}.list-group-item>.badge{float:right;}.list-group-item>.badge+.badge{margin-right:5px;}a.list-group-item{color:#555555;}a.list-group-item .list-group-item-heading{color:#333333;}a.list-group-item:hover,a.list-group-item:focus{text-decoration:none;background-color:#f5f5f5;}a.list-group-item.active,a.list-group-item.active:hover,a.list-group-item.active:focus{z-index:2;color:#ffffff;background-color:#428bca;border-color:#428bca;}a.list-group-item.active .list-group-item-heading,a.list-group-item.active:hover .list-group-item-heading,a.list-group-item.active:focus .list-group-item-heading{color:inherit;}a.list-group-item.active .list-group-item-text,a.list-group-item.active:hover .list-group-item-text,a.list-group-item.active:focus .list-group-item-text{color:#e1edf7;}.list-group-item-heading{margin-top:0;margin-bottom:5px;}.list-group-item-text{margin-bottom:0;line-height:1.3;}.panel{margin-bottom:20px;background-color:#ffffff;border:1px solid transparent;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0, 0, 0, 0.05);box-shadow:0 1px 1px rgba(0, 0, 0, 0.05);}.panel-body{padding:15px;}.panel-body:before,.panel-body:after{content:\" \";display:table;}.panel-body:after{clear:both;}.panel-body:before,.panel-body:after{content:\" \";display:table;}.panel-body:after{clear:both;}.panel>.list-group{margin-bottom:0;}.panel>.list-group .list-group-item{border-width:1px 0;}.panel>.list-group .list-group-item:first-child{border-top-right-radius:0;border-top-left-radius:0;}.panel>.list-group .list-group-item:last-child{border-bottom:0;}.panel-heading+.list-group .list-group-item:first-child{border-top-width:0;}.panel>.table,.panel>.table-responsive>.table{margin-bottom:0;}.panel>.panel-body+.table,.panel>.panel-body+.table-responsive{border-top:1px solid #dddddd;}.panel>.table>tbody:first-child th,.panel>.table>tbody:first-child td{border-top:0;}.panel>.table-bordered,.panel>.table-responsive>.table-bordered{border:0;}.panel>.table-bordered>thead>tr>th:first-child,.panel>.table-responsive>.table-bordered>thead>tr>th:first-child,.panel>.table-bordered>tbody>tr>th:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:first-child,.panel>.table-bordered>tfoot>tr>th:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:first-child,.panel>.table-bordered>thead>tr>td:first-child,.panel>.table-responsive>.table-bordered>thead>tr>td:first-child,.panel>.table-bordered>tbody>tr>td:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:first-child,.panel>.table-bordered>tfoot>tr>td:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:first-child{border-left:0;}.panel>.table-bordered>thead>tr>th:last-child,.panel>.table-responsive>.table-bordered>thead>tr>th:last-child,.panel>.table-bordered>tbody>tr>th:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:last-child,.panel>.table-bordered>tfoot>tr>th:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:last-child,.panel>.table-bordered>thead>tr>td:last-child,.panel>.table-responsive>.table-bordered>thead>tr>td:last-child,.panel>.table-bordered>tbody>tr>td:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:last-child,.panel>.table-bordered>tfoot>tr>td:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:last-child{border-right:0;}.panel>.table-bordered>thead>tr:last-child>th,.panel>.table-responsive>.table-bordered>thead>tr:last-child>th,.panel>.table-bordered>tbody>tr:last-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>th,.panel>.table-bordered>tfoot>tr:last-child>th,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>th,.panel>.table-bordered>thead>tr:last-child>td,.panel>.table-responsive>.table-bordered>thead>tr:last-child>td,.panel>.table-bordered>tbody>tr:last-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>td,.panel>.table-bordered>tfoot>tr:last-child>td,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>td{border-bottom:0;}.panel>.table-responsive{border:0;margin-bottom:0;}.panel-heading{padding:10px 15px;border-bottom:1px solid transparent;border-top-right-radius:3px;border-top-left-radius:3px;}.panel-heading>.dropdown .dropdown-toggle{color:inherit;}.panel-title{margin-top:0;margin-bottom:0;font-size:16px;color:inherit;}.panel-title>a{color:inherit;}.panel-footer{padding:10px 15px;background-color:#f5f5f5;border-top:1px solid #dddddd;border-bottom-right-radius:3px;border-bottom-left-radius:3px;}.panel-group .panel{margin-bottom:0;border-radius:4px;overflow:hidden;}.panel-group .panel+.panel{margin-top:5px;}.panel-group .panel-heading{border-bottom:0;}.panel-group .panel-heading+.panel-collapse .panel-body{border-top:1px solid #dddddd;}.panel-group .panel-footer{border-top:0;}.panel-group .panel-footer+.panel-collapse .panel-body{border-bottom:1px solid #dddddd;}.panel-default{border-color:#dddddd;}.panel-default>.panel-heading{color:#333333;background-color:#f5f5f5;border-color:#dddddd;}.panel-default>.panel-heading+.panel-collapse .panel-body{border-top-color:#dddddd;}.panel-default>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#dddddd;}.panel-primary{border-color:#428bca;}.panel-primary>.panel-heading{color:#ffffff;background-color:#428bca;border-color:#428bca;}.panel-primary>.panel-heading+.panel-collapse .panel-body{border-top-color:#428bca;}.panel-primary>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#428bca;}.panel-success{border-color:#d6e9c6;}.panel-success>.panel-heading{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6;}.panel-success>.panel-heading+.panel-collapse .panel-body{border-top-color:#d6e9c6;}.panel-success>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#d6e9c6;}.panel-warning{border-color:#faebcc;}.panel-warning>.panel-heading{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc;}.panel-warning>.panel-heading+.panel-collapse .panel-body{border-top-color:#faebcc;}.panel-warning>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#faebcc;}.panel-danger{border-color:#ebccd1;}.panel-danger>.panel-heading{color:#a94442;background-color:#f2dede;border-color:#ebccd1;}.panel-danger>.panel-heading+.panel-collapse .panel-body{border-top-color:#ebccd1;}.panel-danger>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#ebccd1;}.panel-info{border-color:#bce8f1;}.panel-info>.panel-heading{color:#31708f;background-color:#d9edf7;border-color:#bce8f1;}.panel-info>.panel-heading+.panel-collapse .panel-body{border-top-color:#bce8f1;}.panel-info>.panel-footer+.panel-collapse .panel-body{border-bottom-color:#bce8f1;}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);}.well blockquote{border-color:#ddd;border-color:rgba(0, 0, 0, 0.15);}.well-lg{padding:24px;border-radius:6px;}.well-sm{padding:9px;border-radius:3px;}.close{float:right;font-size:21px;font-weight:bold;line-height:1;color:#000000;text-shadow:0 1px 0 #ffffff;opacity:0.2;filter:alpha(opacity=20);}.close:hover,.close:focus{color:#000000;text-decoration:none;cursor:pointer;opacity:0.5;filter:alpha(opacity=50);}button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;}.modal-open{overflow:hidden;}.modal{display:none;overflow:auto;overflow-y:scroll;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;}.modal.fade .modal-dialog{-webkit-transform:translate(0, -25%);-ms-transform:translate(0, -25%);transform:translate(0, -25%);-webkit-transition:-webkit-transform 0.3s ease-out;-moz-transition:-moz-transform 0.3s ease-out;-o-transition:-o-transform 0.3s ease-out;transition:transform 0.3s ease-out;}.modal.in .modal-dialog{-webkit-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0);}.modal-dialog{position:relative;width:auto;margin:10px;z-index:1050;}.modal-content{position:relative;background-color:#ffffff;border:1px solid #999999;border:1px solid rgba(0, 0, 0, 0.2);border-radius:6px;-webkit-box-shadow:0 3px 9px rgba(0, 0, 0, 0.5);box-shadow:0 3px 9px rgba(0, 0, 0, 0.5);background-clip:padding-box;outline:none;}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1030;background-color:#000000;}.modal-backdrop.fade{opacity:0;filter:alpha(opacity=0);}.modal-backdrop.in{opacity:0.5;filter:alpha(opacity=50);}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5;min-height:16.428571429px;}.modal-header .close{margin-top:-2px;}.modal-title{margin:0;line-height:1.428571429;}.modal-body{position:relative;padding:20px;}.modal-footer{margin-top:15px;padding:19px 20px 20px;text-align:right;border-top:1px solid #e5e5e5;}.modal-footer:before,.modal-footer:after{content:\" \";display:table;}.modal-footer:after{clear:both;}.modal-footer:before,.modal-footer:after{content:\" \";display:table;}.modal-footer:after{clear:both;}.modal-footer .btn+.btn{margin-left:5px;margin-bottom:0;}.modal-footer .btn-group .btn+.btn{margin-left:-1px;}.modal-footer .btn-block+.btn-block{margin-left:0;}@media screen and (min-width:768px){.modal-dialog{width:600px;margin:30px auto;} .modal-content{-webkit-box-shadow:0 5px 15px rgba(0, 0, 0, 0.5);box-shadow:0 5px 15px rgba(0, 0, 0, 0.5);}}.tooltip{position:absolute;z-index:1030;display:block;visibility:visible;font-size:12px;line-height:1.4;opacity:0;filter:alpha(opacity=0);}.tooltip.in{opacity:0.9;filter:alpha(opacity=90);}.tooltip.top{margin-top:-3px;padding:5px 0;}.tooltip.right{margin-left:3px;padding:0 5px;}.tooltip.bottom{margin-top:3px;padding:5px 0;}.tooltip.left{margin-left:-3px;padding:0 5px;}.tooltip-inner{max-width:200px;padding:3px 8px;color:#ffffff;text-align:center;text-decoration:none;background-color:#000000;border-radius:4px;}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid;}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000000;}.tooltip.top-left .tooltip-arrow{bottom:0;left:5px;border-width:5px 5px 0;border-top-color:#000000;}.tooltip.top-right .tooltip-arrow{bottom:0;right:5px;border-width:5px 5px 0;border-top-color:#000000;}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000000;}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000000;}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000000;}.tooltip.bottom-left .tooltip-arrow{top:0;left:5px;border-width:0 5px 5px;border-bottom-color:#000000;}.tooltip.bottom-right .tooltip-arrow{top:0;right:5px;border-width:0 5px 5px;border-bottom-color:#000000;}.popover{position:absolute;top:0;left:0;z-index:1010;display:none;max-width:276px;padding:1px;text-align:left;background-color:#ffffff;background-clip:padding-box;border:1px solid #cccccc;border:1px solid rgba(0, 0, 0, 0.2);border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);white-space:normal;}.popover.top{margin-top:-10px;}.popover.right{margin-left:10px;}.popover.bottom{margin-top:10px;}.popover.left{margin-left:-10px;}.popover-title{margin:0;padding:8px 14px;font-size:14px;font-weight:normal;line-height:18px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0;}.popover-content{padding:9px 14px;}.popover .arrow,.popover .arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid;}.popover .arrow{border-width:11px;}.popover .arrow:after{border-width:10px;content:\"\";}.popover.top .arrow{left:50%;margin-left:-11px;border-bottom-width:0;border-top-color:#999999;border-top-color:rgba(0, 0, 0, 0.25);bottom:-11px;}.popover.top .arrow:after{content:\" \";bottom:1px;margin-left:-10px;border-bottom-width:0;border-top-color:#ffffff;}.popover.right .arrow{top:50%;left:-11px;margin-top:-11px;border-left-width:0;border-right-color:#999999;border-right-color:rgba(0, 0, 0, 0.25);}.popover.right .arrow:after{content:\" \";left:1px;bottom:-10px;border-left-width:0;border-right-color:#ffffff;}.popover.bottom .arrow{left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999999;border-bottom-color:rgba(0, 0, 0, 0.25);top:-11px;}.popover.bottom .arrow:after{content:\" \";top:1px;margin-left:-10px;border-top-width:0;border-bottom-color:#ffffff;}.popover.left .arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999999;border-left-color:rgba(0, 0, 0, 0.25);}.popover.left .arrow:after{content:\" \";right:1px;border-right-width:0;border-left-color:#ffffff;bottom:-10px;}.carousel{position:relative;}.carousel-inner{position:relative;overflow:hidden;width:100%;}.carousel-inner>.item{display:none;position:relative;-webkit-transition:0.6s ease-in-out left;transition:0.6s ease-in-out left;}.carousel-inner>.item>img,.carousel-inner>.item>a>img{display:block;max-width:100%;height:auto;line-height:1;}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block;}.carousel-inner>.active{left:0;}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%;}.carousel-inner>.next{left:100%;}.carousel-inner>.prev{left:-100%;}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0;}.carousel-inner>.active.left{left:-100%;}.carousel-inner>.active.right{left:100%;}.carousel-control{position:absolute;top:0;left:0;bottom:0;width:15%;opacity:0.5;filter:alpha(opacity=50);font-size:20px;color:#ffffff;text-align:center;text-shadow:0 1px 2px rgba(0, 0, 0, 0.6);}.carousel-control.left{background-image:-webkit-linear-gradient(left, color-stop(rgba(0, 0, 0, 0.5) 0%), color-stop(rgba(0, 0, 0, 0.0001) 100%));background-image:linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);}.carousel-control.right{left:auto;right:0;background-image:-webkit-linear-gradient(left, color-stop(rgba(0, 0, 0, 0.0001) 0%), color-stop(rgba(0, 0, 0, 0.5) 100%));background-image:linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);}.carousel-control:hover,.carousel-control:focus{outline:none;color:#ffffff;text-decoration:none;opacity:0.9;filter:alpha(opacity=90);}.carousel-control .icon-prev,.carousel-control .icon-next,.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right{position:absolute;top:50%;z-index:5;display:inline-block;}.carousel-control .icon-prev,.carousel-control .glyphicon-chevron-left{left:50%;}.carousel-control .icon-next,.carousel-control .glyphicon-chevron-right{right:50%;}.carousel-control .icon-prev,.carousel-control .icon-next{width:20px;height:20px;margin-top:-10px;margin-left:-10px;font-family:serif;}.carousel-control .icon-prev:before{content:'\\2039';}.carousel-control .icon-next:before{content:'\\203a';}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;margin-left:-30%;padding-left:0;list-style:none;text-align:center;}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;border:1px solid #ffffff;border-radius:10px;cursor:pointer;background-color:#000 \\9;background-color:rgba(0, 0, 0, 0);}.carousel-indicators .active{margin:0;width:12px;height:12px;background-color:#ffffff;}.carousel-caption{position:absolute;left:15%;right:15%;bottom:20px;z-index:10;padding-top:20px;padding-bottom:20px;color:#ffffff;text-align:center;text-shadow:0 1px 2px rgba(0, 0, 0, 0.6);}.carousel-caption .btn{text-shadow:none;}@media screen and (min-width:768px){.carousel-control .glyphicons-chevron-left,.carousel-control .glyphicons-chevron-right,.carousel-control .icon-prev,.carousel-control .icon-next{width:30px;height:30px;margin-top:-15px;margin-left:-15px;font-size:30px;} .carousel-caption{left:20%;right:20%;padding-bottom:30px;} .carousel-indicators{bottom:20px;}}.clearfix:before,.clearfix:after{content:\" \";display:table;}.clearfix:after{clear:both;}.center-block{display:block;margin-left:auto;margin-right:auto;}.pull-right{float:right !important;}.pull-left{float:left !important;}.hide{display:none !important;}.show{display:block !important;}.invisible{visibility:hidden;}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0;}.hidden{display:none !important;visibility:hidden !important;}.affix{position:fixed;}@-ms-viewport{width:device-width;}.visible-xs,tr.visible-xs,th.visible-xs,td.visible-xs{display:none !important;}@media (max-width:767px){.visible-xs{display:block !important;}table.visible-xs{display:table;} tr.visible-xs{display:table-row !important;} th.visible-xs,td.visible-xs{display:table-cell !important;}}@media (min-width:768px) and (max-width:991px){.visible-xs.visible-sm{display:block !important;}table.visible-xs.visible-sm{display:table;} tr.visible-xs.visible-sm{display:table-row !important;} th.visible-xs.visible-sm,td.visible-xs.visible-sm{display:table-cell !important;}}@media (min-width:992px) and (max-width:1199px){.visible-xs.visible-md{display:block !important;}table.visible-xs.visible-md{display:table;} tr.visible-xs.visible-md{display:table-row !important;} th.visible-xs.visible-md,td.visible-xs.visible-md{display:table-cell !important;}}@media (min-width:1200px){.visible-xs.visible-lg{display:block !important;}table.visible-xs.visible-lg{display:table;} tr.visible-xs.visible-lg{display:table-row !important;} th.visible-xs.visible-lg,td.visible-xs.visible-lg{display:table-cell !important;}}.visible-sm,tr.visible-sm,th.visible-sm,td.visible-sm{display:none !important;}@media (max-width:767px){.visible-sm.visible-xs{display:block !important;}table.visible-sm.visible-xs{display:table;} tr.visible-sm.visible-xs{display:table-row !important;} th.visible-sm.visible-xs,td.visible-sm.visible-xs{display:table-cell !important;}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block !important;}table.visible-sm{display:table;} tr.visible-sm{display:table-row !important;} th.visible-sm,td.visible-sm{display:table-cell !important;}}@media (min-width:992px) and (max-width:1199px){.visible-sm.visible-md{display:block !important;}table.visible-sm.visible-md{display:table;} tr.visible-sm.visible-md{display:table-row !important;} th.visible-sm.visible-md,td.visible-sm.visible-md{display:table-cell !important;}}@media (min-width:1200px){.visible-sm.visible-lg{display:block !important;}table.visible-sm.visible-lg{display:table;} tr.visible-sm.visible-lg{display:table-row !important;} th.visible-sm.visible-lg,td.visible-sm.visible-lg{display:table-cell !important;}}.visible-md,tr.visible-md,th.visible-md,td.visible-md{display:none !important;}@media (max-width:767px){.visible-md.visible-xs{display:block !important;}table.visible-md.visible-xs{display:table;} tr.visible-md.visible-xs{display:table-row !important;} th.visible-md.visible-xs,td.visible-md.visible-xs{display:table-cell !important;}}@media (min-width:768px) and (max-width:991px){.visible-md.visible-sm{display:block !important;}table.visible-md.visible-sm{display:table;} tr.visible-md.visible-sm{display:table-row !important;} th.visible-md.visible-sm,td.visible-md.visible-sm{display:table-cell !important;}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block !important;}table.visible-md{display:table;} tr.visible-md{display:table-row !important;} th.visible-md,td.visible-md{display:table-cell !important;}}@media (min-width:1200px){.visible-md.visible-lg{display:block !important;}table.visible-md.visible-lg{display:table;} tr.visible-md.visible-lg{display:table-row !important;} th.visible-md.visible-lg,td.visible-md.visible-lg{display:table-cell !important;}}.visible-lg,tr.visible-lg,th.visible-lg,td.visible-lg{display:none !important;}@media (max-width:767px){.visible-lg.visible-xs{display:block !important;}table.visible-lg.visible-xs{display:table;} tr.visible-lg.visible-xs{display:table-row !important;} th.visible-lg.visible-xs,td.visible-lg.visible-xs{display:table-cell !important;}}@media (min-width:768px) and (max-width:991px){.visible-lg.visible-sm{display:block !important;}table.visible-lg.visible-sm{display:table;} tr.visible-lg.visible-sm{display:table-row !important;} th.visible-lg.visible-sm,td.visible-lg.visible-sm{display:table-cell !important;}}@media (min-width:992px) and (max-width:1199px){.visible-lg.visible-md{display:block !important;}table.visible-lg.visible-md{display:table;} tr.visible-lg.visible-md{display:table-row !important;} th.visible-lg.visible-md,td.visible-lg.visible-md{display:table-cell !important;}}@media (min-width:1200px){.visible-lg{display:block !important;}table.visible-lg{display:table;} tr.visible-lg{display:table-row !important;} th.visible-lg,td.visible-lg{display:table-cell !important;}}.hidden-xs{display:block !important;}table.hidden-xs{display:table;}tr.hidden-xs{display:table-row !important;}th.hidden-xs,td.hidden-xs{display:table-cell !important;}@media (max-width:767px){.hidden-xs,tr.hidden-xs,th.hidden-xs,td.hidden-xs{display:none !important;}}@media (min-width:768px) and (max-width:991px){.hidden-xs.hidden-sm,tr.hidden-xs.hidden-sm,th.hidden-xs.hidden-sm,td.hidden-xs.hidden-sm{display:none !important;}}@media (min-width:992px) and (max-width:1199px){.hidden-xs.hidden-md,tr.hidden-xs.hidden-md,th.hidden-xs.hidden-md,td.hidden-xs.hidden-md{display:none !important;}}@media (min-width:1200px){.hidden-xs.hidden-lg,tr.hidden-xs.hidden-lg,th.hidden-xs.hidden-lg,td.hidden-xs.hidden-lg{display:none !important;}}.hidden-sm{display:block !important;}table.hidden-sm{display:table;}tr.hidden-sm{display:table-row !important;}th.hidden-sm,td.hidden-sm{display:table-cell !important;}@media (max-width:767px){.hidden-sm.hidden-xs,tr.hidden-sm.hidden-xs,th.hidden-sm.hidden-xs,td.hidden-sm.hidden-xs{display:none !important;}}@media (min-width:768px) and (max-width:991px){.hidden-sm,tr.hidden-sm,th.hidden-sm,td.hidden-sm{display:none !important;}}@media (min-width:992px) and (max-width:1199px){.hidden-sm.hidden-md,tr.hidden-sm.hidden-md,th.hidden-sm.hidden-md,td.hidden-sm.hidden-md{display:none !important;}}@media (min-width:1200px){.hidden-sm.hidden-lg,tr.hidden-sm.hidden-lg,th.hidden-sm.hidden-lg,td.hidden-sm.hidden-lg{display:none !important;}}.hidden-md{display:block !important;}table.hidden-md{display:table;}tr.hidden-md{display:table-row !important;}th.hidden-md,td.hidden-md{display:table-cell !important;}@media (max-width:767px){.hidden-md.hidden-xs,tr.hidden-md.hidden-xs,th.hidden-md.hidden-xs,td.hidden-md.hidden-xs{display:none !important;}}@media (min-width:768px) and (max-width:991px){.hidden-md.hidden-sm,tr.hidden-md.hidden-sm,th.hidden-md.hidden-sm,td.hidden-md.hidden-sm{display:none !important;}}@media (min-width:992px) and (max-width:1199px){.hidden-md,tr.hidden-md,th.hidden-md,td.hidden-md{display:none !important;}}@media (min-width:1200px){.hidden-md.hidden-lg,tr.hidden-md.hidden-lg,th.hidden-md.hidden-lg,td.hidden-md.hidden-lg{display:none !important;}}.hidden-lg{display:block !important;}table.hidden-lg{display:table;}tr.hidden-lg{display:table-row !important;}th.hidden-lg,td.hidden-lg{display:table-cell !important;}@media (max-width:767px){.hidden-lg.hidden-xs,tr.hidden-lg.hidden-xs,th.hidden-lg.hidden-xs,td.hidden-lg.hidden-xs{display:none !important;}}@media (min-width:768px) and (max-width:991px){.hidden-lg.hidden-sm,tr.hidden-lg.hidden-sm,th.hidden-lg.hidden-sm,td.hidden-lg.hidden-sm{display:none !important;}}@media (min-width:992px) and (max-width:1199px){.hidden-lg.hidden-md,tr.hidden-lg.hidden-md,th.hidden-lg.hidden-md,td.hidden-lg.hidden-md{display:none !important;}}@media (min-width:1200px){.hidden-lg,tr.hidden-lg,th.hidden-lg,td.hidden-lg{display:none !important;}}.visible-print,tr.visible-print,th.visible-print,td.visible-print{display:none !important;}@media print{.visible-print{display:block !important;}table.visible-print{display:table;} tr.visible-print{display:table-row !important;} th.visible-print,td.visible-print{display:table-cell !important;} .hidden-print,tr.hidden-print,th.hidden-print,td.hidden-print{display:none !important;}}\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/css/font-awesome.css:\n  544    content: \"\\f07a\";\n  545  }\n  546: .fa-folder:before {\n  547    content: \"\\f07b\";\n  548  }\n  549: .fa-folder-open:before {\n  550    content: \"\\f07c\";\n  551  }\n  ...\n  953    content: \"\\f113\";\n  954  }\n  955: .fa-folder-o:before {\n  956    content: \"\\f114\";\n  957  }\n  958: .fa-folder-open-o:before {\n  959    content: \"\\f115\";\n  960  }\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/css/font-awesome.min.css:\n    2   *  Font Awesome 4.0.3 by @davegandy - http://fontawesome.io - @fontawesome\n    3   *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n    4:  */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.0.3');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.0.3') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff?v=4.0.3') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.0.3') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.0.3#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font-family:FontAwesome;font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.3333333333333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.2857142857142858em;text-align:center}.fa-ul{padding-left:0;margin-left:2.142857142857143em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.142857142857143em;width:2.142857142857143em;top:.14285714285714285em;text-align:center}.fa-li.fa-lg{left:-1.8571428571428572em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:spin 2s infinite linear;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;animation:spin 2s infinite linear}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg)}100%{-ms-transform:rotate(359deg)}}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0,mirror=1);-webkit-transform:scale(-1,1);-moz-transform:scale(-1,1);-ms-transform:scale(-1,1);-o-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2,mirror=1);-webkit-transform:scale(1,-1);-moz-transform:scale(1,-1);-ms-transform:scale(1,-1);-o-transform:scale(1,-1);transform:scale(1,-1)}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-asc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-desc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-reply-all:before{content:\"\\f122\"}.fa-mail-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}\n\n~/Dropbox/princeton/14spring/cos333/enchord/public/fonts/FontAwesome.otf:\n    <binary>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n   70  		$scope.Side = Side;\n   71  		$scope.usersongs = [];\n   72: 		$scope.userfolders = [];\n   73  		$scope.init = function() {\n   74  			Side.setPagetype('default');\n   ..\n   90  			$http({\n   91  				method  : 'GET',\n   92: 				url     : '/myfolders'\n   93  			}).success(function(data) {\n   94  				console.log(data);\n   95: 				$scope.userfolders = data.userfolders;\n   96  			}).error(function(data, status) {\n   97  				console.log(data);\n   ..\n  720  		}\n  721  	}]);\n  722: enchordControllers.controller('FolderController', [\n  723  	'$scope', \n  724  	'$routeParams', \n  ...\n  729  	'Side',\n  730  	function($scope, $routeParams, $http, $window, $location, $sce, Side) {\n  731: 		$scope.folder = {};\n  732: 		$scope.userfolders = [];\n  733  		$scope.songid = '';\n  734  		$scope.init = function(songid) {\n  ...\n  736  			$http({\n  737  				method  : 'GET',\n  738: 				url     : '/myfolders'\n  739  			}).success(function(data) {\n  740  				console.log(data);\n  741: 				$scope.userfolders = data.userfolders;\n  742  			}).error(function(data, status) {\n  743  				console.log(data);\n  ...\n  751  		}\n  752  \n  753: 		$scope.createfolder = function() {\n  754: 			console.log(\"create \" + $scope.folder.name);\n  755  			$http({\n  756  				method : 'GET',\n  757: 				url    : '/createfolder/' + $scope.folder.name\n  758  			}).success(function(data){\n  759  				console.log(data);\n  ...\n  761  			});\n  762  		}\n  763: 		$scope.addToFolder = function(folderid) {\n  764: 			console.log(\"add to folder\" + folderid);\n  765  			$http({\n  766  				method: 'POST',\n  767: 				url : '/addsongtofolder',\n  768: 				data    : $.param({songid: $scope.songid, folderid: folderid}),\n  769  				headers : { 'Content-Type': 'application/x-www-form-urlencoded' }\n  770  			}).success(function(data) {\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/bandutils.js:\n    1  var bandSchema = require('../models/schemas/band');\n    2  var userSchema = require('../models/schemas/user');\n    3: var folderSchema = require('../models/schemas/folder');\n    4  var songSchema = require('../models/schemas/song');\n    5  var utils = require('./utils');\n    .\n  165  }\n  166  \n  167: exports.findBandFolder = function(req, res) {\n  168: 	folderSchema.find({isBand: true, bandid: req.params._id}, function(err, folders) {\n  169  		if (err) {\n  170  			res.status(500).json({message: 'Internal server error: Cannot create song', hasError: true});\n  171  		} else {\n  172: 			return {folder: folders};\n  173  		}\n  174  	})\n  175  };\n  176  \n  177: exports.importFolder = function(req, res) {\n  178: 	var newFolder = new folderSchema( {\n  179  		isBand: true,\n  180  		band_id: req.params.bandid\n  181  	});\n  182  \n  183: 	newFolder.save(function(err, docs) {\n  184: 		var folderid = docs._id;\n  185: 		songSchema.find({folder_id: folderid}, function(err, songs) {\n  186  			if (err) {\n  187  				res.status(500).json({message: 'Internal server error: Cannot create song', hasError: true});\n  ...\n  203  					upvote: 0,\n  204  					search_string: songs[i].search_string, //actually an array\n  205: 					folder_id: folderid,\n  206  					band_id: req.params.bandid,\n  207  					isBand: true\n  ...\n  227  	});\n  228  \n  229: 	//delete folders related to band\n  230: 	folderSchema.remove({isBand: true, band_id:req.params._id}, function(err) {\n  231  		if (err) {\n  232  			res.status(500).json({message: 'Internal server error: Cannot delete song', hasError: true});\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/folderutils.js:\n    2  var songSchema = require('../models/schemas/song');\n    3  var userSchema = require('../models/schemas/user');\n    4: var folderSchema = require('../models/schemas/folder');\n    5  var fs = require('fs');\n    6  var utils = require('./utils');\n    .\n   11  \n   12  \n   13: exports.getUserFolders = function(req, res) { //can only get user's own folder\n   14  	var authorid = getAuthorId(req);\n   15  	var authorname = getAuthorName(req);\n   16: 	var folders = [];\n   17  \n   18: 	folderSchema.find({author_id: authorid, isBand: false}, function(err, docs) {\n   19: 		// res.render('folderview.ejs', {\n   20  		// 	title: 'enchord', \n   21  		// 	isNew: false, \n   ..\n   24  		// });\n   25  		if (!docs) {\n   26: 			res.send({userfolders: []});\n   27  		} else {\n   28: 			res.send({userfolders: docs});\n   29  		}\n   30  	});\n   31  }\n   32  \n   33: function getMyFolders(req, res, callback) {\n   34  	var authorid = getAuthorId(req);\n   35  	var authorname = getAuthorName(req);\n   36: 	var folders = [];\n   37  \n   38: 	folderSchema.find({author_id: authorid, isBand: false}, function(err, docs) {\n   39  		if (!docs) {\n   40: 			callback(folders);\n   41  		} else {\n   42  			callback(docs);\n   ..\n   45  }\n   46  \n   47: function getSongs(req, res, folderid, callback) {\n   48: 	folderSchema.findById(folderid, function(err, folder) {\n   49: 		console.log(folder);\n   50: 		var foldername = folder.name;\n   51  		var songs = [];\n   52: 		songSchema.find({folder_id: folderid, author_id: getAuthorId(req)}, function(err, foldersongs) { //search author_id also\n   53  			if (err) {\n   54  				console.log(err);\n   55  				res.status(500).json({message: 'Internal server error: cannot find', hasError: true});\n   56  				return;\n   57: 			} else if (!foldersongs) {\n   58  				callback(songs);\n   59  			} else {\n   60  				// console.log(docs);\n   61: 				callback({name: foldername, foldersongs: foldersongs});\n   62  				return;	\n   63  			}\n   ..\n   67  }\n   68  \n   69: exports.getUserFolders = function(req, res) {\n   70: 	getMyFolders(req, res, function(data){\n   71: 		res.send({userfolders: data});\n   72  	})\n   73  }\n   74  \n   75: exports.getFoldersAndSongs = function(req, res, callback) {\n   76: 	userfolders = [];\n   77: 	getMyFolders(req, res, function(data){\n   78  		// var i = 0;\n   79  		// console.log(data);\n   ..\n   83  	 //      			console.log(data[i]._id);\n   84  		// 			getSongs(req, res, data[i]._id, function(songs){\n   85: 		// 			userfolders.push({folder: data[i], songs: songs});\n   86  		// 			console.log(i);\n   87  		// 			if (i == data.length - 1) {\n   88: 		// 				console.log(userfolders);\n   89: 		// 				callback(userfolders);\n   90  		// 			}\n   91  		// 		});\n   92    //   		}, i * 1000);\n   93    // 			})(i);\n   94: 		// 	// console.log(folder[i]);\n   95  		// }\n   96  		callback(data);\n   ..\n   98  }\n   99  \n  100: exports.getFolderSongs = function(req, res) {\n  101: 	var folderid = req.params._id;\n  102: 	getSongs(req, res, folderid, function(data){\n  103: 		// res.render('foldersongs.ejs', {\n  104  		// 	title: 'enchord', \n  105  		// 	isNew: false, \n  106: 		// 	folderName: foldername,\n  107  		// 	results: data\n  108  		// });\n  109: 		res.send({folder: data});\n  110  	});\n  111  }\n  112  \n  113: //need to check that the user can add songs to this folder\n  114: exports.addSongToFolder = function(req, res) {\n  115  	var songid = req.body.songid;\n  116: 	var folderid = req.body.folderid;\n  117  	var authorid = getAuthorId(req);\n  118  	if (authorid == null) {\n  ...\n  127  				return;\n  128  			}\n  129: 			docs.folder_id = folderid;\n  130  			console.log(docs);\n  131  			docs.save(function(err, docs) {\n  ...\n  136  			res.send({success: true});\n  137  		});	\n  138: 		/*songSchema.update({_id: songid, author_id: authorid}, {folder_id: folderid}, function(err, numberAffected, rawResponse) {\n  139  			if (err) {\n  140  				console.log(err);\n  ...\n  142  				return;\n  143  			} \n  144: 			console.log('add song to folder success');\n  145  			return;\n  146  		});*/\n  ...\n  148  }\n  149  \n  150: //DOES NOT DELETE THE SONG. set the folder_id in the song to null\n  151: exports.deleteSongFromFolder = function(req, res) {\n  152  	var songid = req.params.songid;\n  153  	\n  154: 	songSchema.update({_id: songid, author_id: getAuthorId(req)}, {folder_id: ''}, function(err, numberAffected, rawResponse) {\n  155  		if (err) {\n  156  			console.log(err);\n  ...\n  158  			return;\n  159  		}\n  160: 		console.log('delete song from folder success');\n  161: 		res.render('foldersongs.ejs', {title: 'enchord', isNew: false, folderName: 'empty', results: ''});\n  162  		return;\n  163  	});\n  164  }\n  165  \n  166: exports.makeFolder = function(req, res) {\n  167: 	var foldername = req.params.name;\n  168  	var authorid = getAuthorId(req);\n  169  	var authorname = getAuthorName(req);\n  170: 	var folder = new folderSchema({\n  171: 		name: foldername,\n  172  		author_id: authorid,\n  173  		author_name: authorname,\n  ...\n  175  		band_id: ''\n  176  	});\n  177: 	folder.save(function(err, docs, numberAffected) {\n  178  		if (err) {\n  179  			console.log(err);\n  ...\n  181  			return;\n  182  		}\n  183: 		console.log('success folder saved');\n  184: 		console.log(folder);\n  185  		\n  186: 		res.send({folder: docs});\n  187: 		// res.render('foldersongs.ejs', {title: 'enchord', isNew: false, folderName: foldername, results: ''});\n  188  		return;\n  189  	});\n  190  }\n  191  \n  192: //maybe make it similar to how editSong works? also later just make an editFolder page to have option to share\n  193: //folder sharing is ONLY FOR BANDS. What it means to share a folder: others can view, edit songs, add songs to the folder\n  194: /*exports.shareFolder = function(req, res) {\n  195  	var newuser = req.params.userid;\n  196: 	var folderid = req.params.folderid;\n  197  	\n  198  	\n  199: 	folderSchema.findById(folderid, function(err, docs) {\n  200  		docs['author_id'].push(newuser);\n  201: 		folderSchema.update({_id: folderid}, {author_id: docs['author_id']}, function(err, numberAffected, rawResponse) {\n  202  			if (err) {\n  203  				console.log(err);\n  ...\n  206  			}\n  207  			console.log('success edit');\n  208: 			res.render('folderview.ejs', { //just shows a no info page for now\n  209  				title: 'enchord', \n  210  				isNew: false, \n  ...\n  217  }*/\n  218  \n  219: exports.renameFolder = function(req, res) {\n  220: 	var folderid = req.body.folderid;\n  221  	\n  222: 	folderSchema.update({_id: folderid, author_id: getAuthorId(req)}, {name: req.body.name}, function(err, numberAffected, rawResponse) {\n  223  		if (err) {\n  224  			console.log(err);\n  ...\n  228  		console.log('success edit');\n  229  		res.send({success: true});\n  230: 		// res.render('folderview.ejs', { //just shows a no info page for now\n  231  		// 	title: 'enchord', \n  232  		// 	isNew: false, \n  ...\n  239  }\n  240  \n  241: exports.deleteFolder = function(req, res) {\n  242: 	var folderid = req.body.folderid;\n  243  	\n  244: 	songSchema.update({folder_id: folderid, author_id: getAuthorId(req)}, {folder_id: ''}, function(err, numberAffected, rawResponse) {\n  245  		if (err) {\n  246  			console.log(err);\n  ...\n  249  		}\n  250  		console.log('success edit');\n  251: 		folderSchema.remove({_id: folderid, author_id: getAuthorId(req)}, function(err) {\n  252  			if (err) {\n  253  				console.log(err);\n  ...\n  255  				return;\n  256  			}\n  257: 			// res.render('folderview.ejs', { //just shows a no info page for now\n  258  			// title: 'enchord', \n  259  			// isNew: false, \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js:\n    1  var mailer = require('../config/nodemailer');\n    2  var utils = require('./utils');\n    3: var folderutils = require('./folderutils');\n    4  var bandutils = require('./bandutils');\n    5  var User = require('../models/schemas/user');\n    .\n   92  				// console.log(usersongs);\n   93  				if (usersongs != undefined) {\n   94: 					folderutils.getFoldersAndSongs(req, res, function(userfolders) {\n   95: 						console.log(userfolders);\n   96  						res.render('index.ejs', {\n   97  						title:\"Members\",\n   ..\n  100  						username: utils.getUsername(req), \n  101  						usersongs: usersongs, \n  102: 						userfolders: userfolders,\n  103  						message: req.flash('success')\n  104  						});\n  ...\n  136  		});\n  137  \n  138: 		// TODO: should check whether author of folder\n  139: 		app.get('/members/editfolder/:_id', isLoggedIn, function(req, res){\n  140: 			res.render('editfolder.ejs', {\n  141  				isLoggedIn: req.isAuthenticated(),\n  142  				username: utils.getUsername(req),\n  ...\n  144  			});\n  145  		});\n  146: 		app.get('/members/viewfolder/:_id', isLoggedIn, function(req, res) {\n  147: 			res.render('viewfolder.ejs', {\n  148  				isLoggedIn: req.isAuthenticated(),\n  149  				username: utils.getUsername(req),\n  ...\n  233  		app.get('/mysongs', isLoggedIn, utils.getUserSongs);\n  234  		\n  235: 		//folder testing stuff\n  236: 		app.get('/myfolders', isLoggedIn, folderutils.getUserFolders);\n  237  		\n  238: 		app.get('/viewfoldersongs/:_id', isLoggedIn, folderutils.getFolderSongs);\n  239  		\n  240: 		//app.get('/addsongtofolder/:folderid&:songid', isLoggedIn, folderutils.addSongToFolder);\n  241: 		app.get('/addsongtofolder/:songid', isLoggedIn, function(req, res) {\n  242: 			res.render('addtofolder.ejs', {\n  243  				songid: req.params.songid,\n  244  				isLoggedIn: req.isAuthenticated(),\n  ...\n  246  			});\n  247  		});\n  248: 		app.post('/addsongtofolder', isLoggedIn, folderutils.addSongToFolder);\n  249  		\n  250: 		//check this, maybe need folderid to check????\n  251: 		app.get('/deletesongfromfolder/:songid', isLoggedIn, folderutils.deleteSongFromFolder);\n  252  		\n  253: 		app.get('/createfolder/:name', isLoggedIn, folderutils.makeFolder);\n  254  		\n  255: 		//app.get('/sharefolder/:folderid&:userid', isLoggedIn, folderutils.shareFolder);\n  256  		\n  257: 		app.post('/renamefolder', isLoggedIn, folderutils.renameFolder);\n  258  		\n  259: 		app.post('/deletefolder', isLoggedIn, folderutils.deleteFolder);\n  260  		\n  261  		//bands\n  ...\n  305  		//make sure only band leader deletes\n  306  		app.get('/deleteband', bandutils.deleteBand);\n  307: 		app.get('/importFolder', bandutils.importFolder);\n  308  \n  309  		//app.get('/viewband/:_id', bandutils.loadBandView);\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/utils.js:\n    2  var songSchema = require('../models/schemas/song');\n    3  var userSchema = require('../models/schemas/user');\n    4: var folderSchema = require('../models/schemas/folder');\n    5  var parser = require('../parsers/textparser'); // parser\n    6  var htmlparser = require('../parsers/htmlparser'); // parser\n    .\n   27  		upvote: 0,\n   28  		search_string: req.body.title.toLowerCase().concat(' ', req.body.artist.toLowerCase()).split(' '), //actually an array\n   29: 		folder_id: '',\n   30  		band_id: '',\n   31  		isBand: false\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/addtofolder.ejs:\n   46              </nav>\n   47          </header>\n   48:         <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-controller=\"FolderController\" ng-init=\"init('<%= songid %>')\">\n   49:             <% include side_addtofolder.ejs %>\n   50              <% include partial_library.ejs %>\n   51          </div>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editfolder.ejs:\n   46              </nav>\n   47          </header>\n   48:         <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-Controller = \"FolderController\" ng-init=\"init('<%= _id %>')\">\n   49:             <% include side_editfolder %>\n   50:             <% include partial_editfolder %>\n   51          </div>\n   52  \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/foldersongs.ejs:\n    7    <body ng-controller=\"SongEditController\">\n    8    	<div class=\"container\">\n    9:   		<h1><%= folderName %></h1>\n   10  		<p> <%= results.length %> results </p>\n   11  		\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/folderview.ejs:\n   11  		\n   12    		<% for(var i = 0; i < results.length; i++) { %>\n   13: 			<li><a href=\"/viewfoldersongs/<%= results[i]._id %>\"><%= results[i].name %></a></li>\n   14  		<% } %>\n   15  		<a href=\"/members\">Back to member page</a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partial_editfolder.ejs:\n    1  <aside class=\"right-side\">\n    2:     <h2 style=\"padding-left: 20px;\">Edit Folder</h2>\n    3      <form style=\"padding-left: 50px; padding-top: 20px; max-width:475px;\">\n    4:         <h4> Folder Info </h4>  \n    5:         <input type=\"text\" name=\"foldername\" ng-model=\"folder.name\" class=\"form-control\" placeholder=\"Folder Name\"/><br>\n    6          <!-- <input type=\"text\" name=\"owner\" class=\"form-control\" placeholder=\"user.username\" readonly/><br> -->\n    7          \n    8          <h4> Songs</h4>\n    9  \n   10:         <div style=\"margin-bottom:10px;\" data-ng-repeat=\"song in folder.foldersongs\">\n   11              <input type=\"text\" name=\"member1\" class=\"form-control\" placeholder=\"song.title\" style=\"display:inline-block;\" readonly/>\n   12              <button ng-click=\"deletesong(song._id)\" class=\"btn btn-mini\" style=\"display:inline-block; margin-top:5px;\"><i class= \"fa fa-times\"></i></button>\n   13          </div>\n   14  \n   15:         <button class=\"button\" ng-click=\"updatefolder()\" style=\"background-color: rgb(77, 144, 254) !important;\n   16:         background-image: -webkit-linear-gradient(top,rgb(77, 144, 254),rgb(71, 135, 237)) !important; margin-top: 20px; margin-bottom: 50px;\">Update Folder</button>\n   17  \n   18:         <button class=\"button\" ng-click=\"deletefolder()\" style=\"background-color: rgb(200, 80, 70) !important;\n   19:         background-image: -webkit-linear-gradient(top,rgb(250, 80, 70),rgb(250, 80, 80)) !important; margin-top: 20px; margin-bottom: 50px;\"><i class=\"fa fa-times\"></i> Delete Folder</button>\n   20      </form>\n   21  \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partial_library.ejs:\n   19              <tr data-ng-repeat=\"song in usersongs | startFrom:currentPage*pageSize | limitTo:pageSize\">\n   20                  <td style=\"max-width: 20px;\"><i style=\"margin-left: 20px;\" class=\"fa fa-star\" style=\"color:yellow;\"></i> {{song.upvote}}</td>\n   21:                 <td style=\"max-width: 5px;\"><a href=\"/addsongtofolder/{{song._id}}\" style=\"color:black\" ><i style=\"margin-left: 10px;\" class=\"fa fa-plus\"></i></a></td>\n   22                  <td><a href=\"/viewsong/{{song._id}}\">{{ song.title }}</a></td>\n   23                  <td><a href=\"/artist/{{song.artist}}\">{{ song.artist }}</a></td>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partial_viewfolder.ejs:\n    2      <section class=\"content-header\">\n    3          <h1>\n    4:             Folder Results\n    5              <small>{{ results.length }} songs</small>\n    6          </h1>\n    .\n   16          </thead>\n   17          <tbody>\n   18:             <tr data-ng-repeat=\"song in foldersongs\">\n   19                  <td style=\"max-width: 20px;\"><i style=\"margin-left: 20px;\" class=\"fa fa-star\" style=\"color:yellow;\"></i> {{song.upvote}}</td>\n   20                  <td><a href=\"/viewsong/{{song._id}}\">{{ song.title }}</a></td>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile.ejs:\n   81                          </li>\n   82                          \n   83:                         <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">My Folders</h5>\n   84                          <li class=\"treeview\">\n   85                              <a href=\"#\">\n   86:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n   87                                  <i class=\"fa fa-angle-left pull-right\"></i>\n   88                              </a>\n   ..\n   97                          <li class=\"treeview\">\n   98                              <a href=\"#\">\n   99:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  100                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  101                              </a>\n  ...\n  110                          <li class=\"treeview\">\n  111                              <a href=\"#\">\n  112:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  113                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  114                              </a>\n  ...\n  123                          <li class=\"treeview\">\n  124                              <a href=\"#\">\n  125:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  126                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  127                              </a>\n  ...\n  136                          <li class=\"treeview\">\n  137                              <a href=\"#\">\n  138:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  139                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  140                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile_orig.ejs.html:\n   81                          </li>\n   82                          \n   83:                         <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">My Folders</h5>\n   84                          <li class=\"treeview\">\n   85                              <a href=\"#\">\n   86:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n   87                                  <i class=\"fa fa-angle-left pull-right\"></i>\n   88                              </a>\n   ..\n   97                          <li class=\"treeview\">\n   98                              <a href=\"#\">\n   99:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  100                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  101                              </a>\n  ...\n  110                          <li class=\"treeview\">\n  111                              <a href=\"#\">\n  112:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  113                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  114                              </a>\n  ...\n  123                          <li class=\"treeview\">\n  124                              <a href=\"#\">\n  125:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  126                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  127                              </a>\n  ...\n  136                          <li class=\"treeview\">\n  137                              <a href=\"#\">\n  138:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  139                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  140                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_addtofolder.ejs:\n   15                  </a>\n   16              </li>\n   17:             <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">Choose a Folder</h5>\n   18:             <li data-ng-repeat=\"folders in userfolders\">\n   19:                 <a href=\"\" ng-click=\"addToFolder(folders._id)\"><i class=\"fa fa-folder\"></i> <span>{{folders.name}}</span></a>\n   20              </li>\n   21  \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs:\n   31              <li class=\"treeview\">\n   32                  <a href=\"#\">\n   33:                     <i class=\"fa fa-folder\"></i> <span>My Folders</span>\n   34                      <i class=\"fa fa-angle-left pull-right\"></i>\n   35                  </a>\n   36                  <ul class=\"treeview-menu\">\n   37:                 <% for (var i = 0; i < userfolders.length; i++) { %>\n   38:                     <li><a href=\"/members/editfolder/<%= userfolders[i]._id %>\"><i class=\"fa fa-angle-double-right\"></i><%= userfolders[i].name %></a></li>\n   39                  <% } %>\n   40                  </ul>\n   ..\n   42              <li class=\"treeview\">\n   43                  <a href=\"#\">\n   44:                     <i class=\"fa fa-plus\"></i> <span>Create a Folder</span>\n   45                  </a>\n   46                  <ul class=\"treeview-menu\">\n   47:                     <form class=\"sidebar-form\" name=\"folderForm\">\n   48:                         <div class=\"input-group\" ng-controller=\"FolderController\">\n   49:                             <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\"Enter new folder name\" ng-model=\"folder.name\" type=\"text\" class=\"form-control\" ng-pattern=\"/^[A-Za-z0-9 \\$\\!\\-\\_\\' ]*$/\" name=\"name\" style=\"padding-top:0px;\"/>\n   50                              <!-- added button back because need to handle submission with ng-click -->\n   51                              <span class=\"input-group-btn\">\n   52:                                 <button ng-click=\"createfolder()\" type='submit' name='create' id='search-btn' class=\"btn btn-flat\"><i class=\"fa fa-plus\"></i></button>\n   53                              </span>\n   54                          </div>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_viewband.ejs:\n   31                          <li class=\"treeview\">\n   32                              <a href=\"#\">\n   33:                                 <i class=\"fa fa-plus\"></i> <span>Create a Folder</span>\n   34                              </a>\n   35                              <ul class=\"treeview-menu\">\n   36                                  <form class=\"sidebar-form\" type=\"GET\" action=\"/search\" name=\"searchForm\" style=\"height:100%; width:100%; padding-left: 0px; margin-left:0px; margin-top:0px; background-color:#222;\">\n   37:                                         <input type=\"text\" name=\"query\" placeholder=\"Enter new folder name\" ng-model=\"query\" type=\"text\" class=\"form-control\" id=\"query\" ng-pattern=\"/^[A-Za-z0-9 \\$\\!\\-\\_\\' ]*$/\" name=\"query\"/>\n   38                                  </form>\n   39                              </ul>\n   ..\n   45                          </li>\n   46                          \n   47:                         <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">Band Folders</h5>\n   48                          <li class=\"active\">\n   49:                             <a href=\"editfolder.html\"><i class=\"fa fa-folder\"></i> <span>Active</span>\n   50                              <i class=\"fa fa-cog pull-right\" style=\"margin-top:3px;\"></i></a>\n   51                          </li>\n   52                          <li>\n   53                              <a href=\"#\">\n   54:                                 <i class=\"fa fa-folder\"></i> <span>Nonactive Band Folder</span>\n   55                              </a>\n   56                          </li>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/viewband.ejs:\n   44                          <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n   45                          <li class=\"active\">This Band Name</li>\n   46:                         <li class=\"active\">Active Folder Name</li>\n   47                      </ol>\n   48                  </section><br>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/viewfolder.ejs:\n   46              </nav>\n   47          </header>\n   48:         <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-controller=\"FolderViewController\" ng-init=\"init('<%= _id %>')\">\n   49              <% include side_default.ejs %>\n   50              <% include partial_viewsong.ejs %>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile.ejs:\n   81                          </li>\n   82                          \n   83:                         <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">My Folders</h5>\n   84                          <li class=\"treeview\">\n   85                              <a href=\"#\">\n   86:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n   87                                  <i class=\"fa fa-angle-left pull-right\"></i>\n   88                              </a>\n   ..\n   97                          <li class=\"treeview\">\n   98                              <a href=\"#\">\n   99:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  100                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  101                              </a>\n  ...\n  110                          <li class=\"treeview\">\n  111                              <a href=\"#\">\n  112:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  113                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  114                              </a>\n  ...\n  123                          <li class=\"treeview\">\n  124                              <a href=\"#\">\n  125:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  126                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  127                              </a>\n  ...\n  136                          <li class=\"treeview\">\n  137                              <a href=\"#\">\n  138:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  139                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  140                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/old/profile_orig.ejs.html:\n   81                          </li>\n   82                          \n   83:                         <h5 style=\"color:#fff; margin-left: 5%; margin-top:15%;\">My Folders</h5>\n   84                          <li class=\"treeview\">\n   85                              <a href=\"#\">\n   86:                                 <i class=\"fa fa-folder\"></i> <span>Daft Punk</span>\n   87                                  <i class=\"fa fa-angle-left pull-right\"></i>\n   88                              </a>\n   ..\n   97                          <li class=\"treeview\">\n   98                              <a href=\"#\">\n   99:                                 <i class=\"fa fa-folder\"></i> <span>Elliott Smith</span>\n  100                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  101                              </a>\n  ...\n  110                          <li class=\"treeview\">\n  111                              <a href=\"#\">\n  112:                                 <i class=\"fa fa-folder\"></i> <span>The Beatles</span>\n  113                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  114                              </a>\n  ...\n  123                          <li class=\"treeview\">\n  124                              <a href=\"#\">\n  125:                                 <i class=\"fa fa-folder\"></i> <span>The Shins</span>\n  126                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  127                              </a>\n  ...\n  136                          <li class=\"treeview\">\n  137                              <a href=\"#\">\n  138:                                 <i class=\"fa fa-folder\"></i> <span>Death Cab For Cutie</span>\n  139                                  <i class=\"fa fa-angle-left pull-right\"></i>\n  140                              </a>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partials/band_view.ejs:\n    4              <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n    5              <li class=\"active\">This Band Name</li>\n    6:             <li class=\"active\">Active Folder Name</li>\n    7          </ol>\n    8      </section><br>\n\n323 matches across 44 files\n\n\nSearching 1785 files for \"folderController\"\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js:\n  720  		}\n  721  	}]);\n  722: enchordControllers.controller('FolderController', [\n  723  	'$scope', \n  724  	'$routeParams', \n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/addtofolder.ejs:\n   46              </nav>\n   47          </header>\n   48:         <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-controller=\"FolderController\" ng-init=\"init('<%= songid %>')\">\n   49              <% include side_addtofolder.ejs %>\n   50              <% include partial_library.ejs %>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editfolder.ejs:\n   46              </nav>\n   47          </header>\n   48:         <div class=\"wrapper row-offcanvas row-offcanvas-left\" ng-Controller = \"FolderController\" ng-init=\"init('<%= _id %>')\">\n   49              <% include side_editfolder %>\n   50              <% include partial_editfolder %>\n\n/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs:\n   46                  <ul class=\"treeview-menu\">\n   47                      <form class=\"sidebar-form\" name=\"folderForm\">\n   48:                         <div class=\"input-group\" ng-controller=\"FolderController\">\n   49                              <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\"Enter new folder name\" ng-model=\"folder.name\" type=\"text\" class=\"form-control\" ng-pattern=\"/^[A-Za-z0-9 \\$\\!\\-\\_\\' ]*$/\" name=\"name\" style=\"padding-top:0px;\"/>\n   50                              <!-- added button back because need to handle submission with ng-click -->\n\n4 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 288702,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "public/javascripts/controllers.js",
			"settings":
			{
				"buffer_size": 23541,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/javascripts/html2canvas.js",
			"settings":
			{
				"buffer_size": 88612,
				"line_ending": "Windows"
			}
		},
		{
			"file": "routes/routes.js",
			"settings":
			{
				"buffer_size": 11025,
				"line_ending": "Unix"
			}
		},
		{
			"file": "routes/utils.js",
			"settings":
			{
				"buffer_size": 19974,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/artistpage.ejs",
			"settings":
			{
				"buffer_size": 3107,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partial_artistpage.ejs",
			"settings":
			{
				"buffer_size": 1542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/db.js",
			"settings":
			{
				"buffer_size": 287,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/side_default.ejs",
			"settings":
			{
				"buffer_size": 3111,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 374.0,
		"selected_items":
		[
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git: pull",
				"Git: Pull"
			],
			[
				"plain ",
				"Set Syntax: Plain Text"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – User"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – User"
			],
			[
				"preferences",
				"Preferences: Settings - User"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Add Repository"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			]
		],
		"width": 445.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/password-reset/node_modules/pony/node_modules/seq/node_modules/chainsaw/examples/add_do.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/addtofolder.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/nodemailer/node_modules/readable-stream/float.patch",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_addtofolder.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/folderutils.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editfolder.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/db.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partial_library.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/bandutils.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_default.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/javascripts/controllers.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editband.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/partial_editband.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/side_editband.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/utils.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editband_orig.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/routes.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/editsong.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/createband.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/band.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/song.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/mongoose/contRun.sh",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/mongoose/CONTRIBUTING.md",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/async/component.json",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/nodemailer/examples/example_direct.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/enchord.sublime-project",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/README.md",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/untitled",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/server.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/partials/edit_song.html",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/node_modules/express/node_modules/connect/node_modules/multiparty/test/standalone/test-content-transfer-encoding.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/todo",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/viewsong.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/folder.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/user.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/ratings.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/models/schemas/rates.js",
		"/home/hseog/Dropbox/princeton/14spring/dan209/journal15_hseog",
		"/home/hseog/Dropbox/princeton/14spring/dan209/journal16_hseog",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/parser.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/reset.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/config/nodemailer.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/jemah.sublime-project",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/.gitignore",
		"/home/hseog/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/hseog/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/hseog/.config/sublime-text-3/Packages/User/Base File.sublime-settings",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_if.c",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_arpcache.c",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_protocol.h",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_router.h",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_utils.c",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_router.c",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_if.h",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_rt.h",
		"/home/hseog/Dropbox/princeton/14spring/cos461/assignment_2/router/sr_utils.h",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/connect-local.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/profile.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/login.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/config/passport.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/views/login.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/server.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/views/signup.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/views/profile.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/app/routes.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord_2/config/passport.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/views/signup.ejs",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/notes/sample_doc",
		"/home/hseog/Dropbox/princeton/14spring/dan209/journal12_hseog",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u2.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u2",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t6",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c2.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c2",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u2_2",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t1",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/minicrank.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c2_2.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/miniout",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/crank.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c2_2",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t4",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t2",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t3",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c1.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c1_2.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c1",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u1.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u1",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/namest1",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u1_@",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/names.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/c1_bak",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/u1_bak.py",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/minioutfix",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/formatter",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/s1",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/test.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/test_re.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/pythontest",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/temp",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/subnames.txt",
		"/home/hseog/Dropbox/princeton/14spring/cos333/assignment_5/t7",
		"/home/hseog/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/routes/index.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/auth.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/schemas/user.js",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/partials/signup.html",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/public/partials/login.html",
		"/home/hseog/Dropbox/princeton/14spring/cos333/enchord/package.json"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_id",
			"buf.push",
			"artist",
			"remove",
			"folderController",
			"folder",
			"folderview",
			"folderiew",
			"/addsongtofolder",
			"profile",
			"profilecontro",
			"getFolders",
			"foldername",
			"heemin",
			"edit",
			"#",
			"profile",
			"profile contr",
			"createfolder",
			"folder",
			"createFolder",
			"getAuthorId",
			"isAuthor",
			"isAuthorId",
			"loadSongView",
			"getAuthorId",
			"getAuthor",
			"createsong",
			"createband",
			"createsong",
			"createband",
			"editsong",
			"#/create",
			"editsong",
			"editband",
			"editsong",
			"editband",
			"createband",
			"/createband",
			"createsong",
			"createband",
			"copy",
			"findId",
			"band_",
			"getauthor",
			"findsong",
			"folderview",
			"bandutils",
			"update",
			"editSong",
			"save",
			"console.log",
			"messageerror",
			"me",
			"success",
			"lookup",
			"send",
			"sr_send_packet",
			"broadcast",
			"sr_easyviewData",
			"c_packet_header",
			"sr_pkt",
			"send",
			"handle_arpreq",
			"sr_ethernet_hdr_t",
			"print_hdrs",
			"in_addr",
			"ip address",
			" sr_instance",
			"sr_ins",
			"sr_i",
			"todo",
			"destroy",
			"arpreq_destroy",
			"handle_arpreq",
			"handle_",
			"todo",
			"icmp",
			"profile",
			"localhost",
			"flash",
			"todo",
			"uint8_t",
			"time",
			"zone",
			"ndate",
			"ph",
			"h ",
			"ptz",
			"pyear",
			"pdate",
			"pmon",
			"pval",
			"s[",
			"m[",
			"prevM",
			"prevH",
			"prevTZ",
			"pday",
			"prevVal",
			"pmon",
			"pyear",
			"t2",
			"n2",
			"v2",
			"y ",
			"d ",
			"p ",
			"p",
			"days",
			"s",
			"v",
			"nVal",
			"nDay",
			"nTZ",
			"nTime",
			"nYear",
			"nDate",
			"nMonth",
			"t",
			"cdate",
			"prevVal",
			"p",
			"cmonth",
			"cyear",
			"diffmonth",
			"line",
			"content"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"t2",
			"z2",
			"t2",
			"h",
			"z",
			"y",
			"t",
			"n",
			"p",
			"m",
			"h",
			"z",
			"d",
			"p",
			"date",
			"mon",
			"val",
			"pyear",
			"pday",
			"prevVal",
			"s",
			"v2",
			"a",
			"z",
			"e",
			"y2",
			"t2",
			"n2",
			"t",
			"p",
			"n",
			"y",
			"d",
			"l",
			"c",
			"cl",
			"y",
			"d",
			"n",
			"p",
			"l",
			"cl",
			"m",
			"e",
			"v",
			"p",
			"d",
			"m",
			"t",
			"cl",
			"contentList"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 288702,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										327,
										335
									],
									[
										361,
										369
									],
									[
										401,
										409
									],
									[
										632,
										640
									],
									[
										883,
										891
									],
									[
										1097,
										1105
									],
									[
										1317,
										1325
									],
									[
										1434,
										1442
									],
									[
										1641,
										1649
									],
									[
										1905,
										1913
									],
									[
										2341,
										2349
									],
									[
										2501,
										2509
									],
									[
										2575,
										2583
									],
									[
										2824,
										2832
									],
									[
										3020,
										3028
									],
									[
										3089,
										3097
									],
									[
										3214,
										3222
									],
									[
										3243,
										3251
									],
									[
										3283,
										3291
									],
									[
										3613,
										3621
									],
									[
										3756,
										3764
									],
									[
										3949,
										3957
									],
									[
										4095,
										4103
									],
									[
										4463,
										4471
									],
									[
										4517,
										4525
									],
									[
										5120,
										5128
									],
									[
										5461,
										5469
									],
									[
										6403,
										6411
									],
									[
										6469,
										6477
									],
									[
										6495,
										6503
									],
									[
										6881,
										6891
									],
									[
										7212,
										7222
									],
									[
										7306,
										7316
									],
									[
										7513,
										7523
									],
									[
										7752,
										7762
									],
									[
										7935,
										7945
									],
									[
										7970,
										7980
									],
									[
										8259,
										8269
									],
									[
										8607,
										8617
									],
									[
										8914,
										8924
									],
									[
										9232,
										9242
									],
									[
										9584,
										9594
									],
									[
										10090,
										10100
									],
									[
										10728,
										10738
									],
									[
										11085,
										11095
									],
									[
										11329,
										11339
									],
									[
										11568,
										11578
									],
									[
										11657,
										11667
									],
									[
										11854,
										11864
									],
									[
										12108,
										12118
									],
									[
										12321,
										12331
									],
									[
										12509,
										12519
									],
									[
										12540,
										12550
									],
									[
										12689,
										12699
									],
									[
										12981,
										12991
									],
									[
										13306,
										13316
									],
									[
										13685,
										13695
									],
									[
										14030,
										14040
									],
									[
										14353,
										14363
									],
									[
										14542,
										14552
									],
									[
										15359,
										15369
									],
									[
										15738,
										15748
									],
									[
										16185,
										16195
									],
									[
										16580,
										16590
									],
									[
										16963,
										16973
									],
									[
										17304,
										17316
									],
									[
										17454,
										17466
									],
									[
										17756,
										17768
									],
									[
										18227,
										18239
									],
									[
										18664,
										18676
									],
									[
										19146,
										19162
									],
									[
										19286,
										19302
									],
									[
										19636,
										19652
									],
									[
										19733,
										19749
									],
									[
										19925,
										19941
									],
									[
										20212,
										20218
									],
									[
										20346,
										20352
									],
									[
										20603,
										20609
									],
									[
										20691,
										20697
									],
									[
										20836,
										20842
									],
									[
										20864,
										20870
									],
									[
										20940,
										20946
									],
									[
										20995,
										21001
									],
									[
										21190,
										21196
									],
									[
										21434,
										21440
									],
									[
										21498,
										21504
									],
									[
										21676,
										21682
									],
									[
										21742,
										21748
									],
									[
										22005,
										22011
									],
									[
										22183,
										22189
									],
									[
										64771,
										64777
									],
									[
										64829,
										64835
									],
									[
										64989,
										64995
									],
									[
										65043,
										65049
									],
									[
										66145,
										66151
									],
									[
										66305,
										66311
									],
									[
										75544,
										75550
									],
									[
										75750,
										75756
									],
									[
										75760,
										75766
									],
									[
										76013,
										76019
									],
									[
										76100,
										76106
									],
									[
										76428,
										76434
									],
									[
										76782,
										76788
									],
									[
										77217,
										77223
									],
									[
										77420,
										77426
									],
									[
										82455,
										82461
									],
									[
										115683,
										115689
									],
									[
										115932,
										115938
									],
									[
										115957,
										115963
									],
									[
										119170,
										119176
									],
									[
										119195,
										119201
									],
									[
										123145,
										123151
									],
									[
										123466,
										123472
									],
									[
										123791,
										123797
									],
									[
										124114,
										124120
									],
									[
										124435,
										124441
									],
									[
										124832,
										124838
									],
									[
										125153,
										125159
									],
									[
										125478,
										125484
									],
									[
										125801,
										125807
									],
									[
										126122,
										126128
									],
									[
										176819,
										176825
									],
									[
										176867,
										176873
									],
									[
										237359,
										237365
									],
									[
										237422,
										237428
									],
									[
										237532,
										237538
									],
									[
										237597,
										237603
									],
									[
										245466,
										245472
									],
									[
										245500,
										245506
									],
									[
										250591,
										250597
									],
									[
										250627,
										250633
									],
									[
										255801,
										255807
									],
									[
										255967,
										255973
									],
									[
										256066,
										256072
									],
									[
										256085,
										256091
									],
									[
										256236,
										256242
									],
									[
										256419,
										256425
									],
									[
										256452,
										256458
									],
									[
										256614,
										256620
									],
									[
										256713,
										256719
									],
									[
										256732,
										256738
									],
									[
										256862,
										256868
									],
									[
										256925,
										256931
									],
									[
										257012,
										257018
									],
									[
										257030,
										257036
									],
									[
										257161,
										257167
									],
									[
										257179,
										257185
									],
									[
										257221,
										257227
									],
									[
										257231,
										257237
									],
									[
										257315,
										257321
									],
									[
										257377,
										257383
									],
									[
										257387,
										257393
									],
									[
										257719,
										257725
									],
									[
										257761,
										257767
									],
									[
										257915,
										257921
									],
									[
										257953,
										257959
									],
									[
										258025,
										258031
									],
									[
										258196,
										258202
									],
									[
										258204,
										258210
									],
									[
										258275,
										258281
									],
									[
										258320,
										258326
									],
									[
										258333,
										258339
									],
									[
										258439,
										258445
									],
									[
										258486,
										258492
									],
									[
										258533,
										258539
									],
									[
										258544,
										258550
									],
									[
										258816,
										258822
									],
									[
										258827,
										258833
									],
									[
										258945,
										258951
									],
									[
										258977,
										258983
									],
									[
										259384,
										259390
									],
									[
										259426,
										259432
									],
									[
										259550,
										259556
									],
									[
										259607,
										259613
									],
									[
										259712,
										259718
									],
									[
										259742,
										259748
									],
									[
										259844,
										259850
									],
									[
										259991,
										259997
									],
									[
										260048,
										260054
									],
									[
										260126,
										260132
									],
									[
										260254,
										260260
									],
									[
										260284,
										260290
									],
									[
										260403,
										260409
									],
									[
										260515,
										260521
									],
									[
										260545,
										260551
									],
									[
										260567,
										260573
									],
									[
										260591,
										260597
									],
									[
										260622,
										260628
									],
									[
										260644,
										260650
									],
									[
										260657,
										260663
									],
									[
										260721,
										260727
									],
									[
										260732,
										260738
									],
									[
										260786,
										260792
									],
									[
										261014,
										261020
									],
									[
										261136,
										261142
									],
									[
										261148,
										261154
									],
									[
										261161,
										261167
									],
									[
										261253,
										261259
									],
									[
										261297,
										261303
									],
									[
										261354,
										261360
									],
									[
										261417,
										261423
									],
									[
										261478,
										261484
									],
									[
										261505,
										261511
									],
									[
										261728,
										261734
									],
									[
										261742,
										261748
									],
									[
										261881,
										261887
									],
									[
										261920,
										261926
									],
									[
										262045,
										262051
									],
									[
										262137,
										262143
									],
									[
										262184,
										262190
									],
									[
										262238,
										262244
									],
									[
										262288,
										262294
									],
									[
										262381,
										262387
									],
									[
										262393,
										262399
									],
									[
										262467,
										262473
									],
									[
										262571,
										262577
									],
									[
										262602,
										262608
									],
									[
										262682,
										262688
									],
									[
										262702,
										262708
									],
									[
										262837,
										262843
									],
									[
										262849,
										262855
									],
									[
										263053,
										263059
									],
									[
										263064,
										263070
									],
									[
										263243,
										263249
									],
									[
										263360,
										263366
									],
									[
										263419,
										263425
									],
									[
										263569,
										263575
									],
									[
										263752,
										263758
									],
									[
										263791,
										263797
									],
									[
										263842,
										263848
									],
									[
										263943,
										263949
									],
									[
										263985,
										263991
									],
									[
										264113,
										264119
									],
									[
										264126,
										264132
									],
									[
										264156,
										264162
									],
									[
										264279,
										264285
									],
									[
										264442,
										264448
									],
									[
										264479,
										264485
									],
									[
										264517,
										264523
									],
									[
										264557,
										264563
									],
									[
										264608,
										264614
									],
									[
										264620,
										264626
									],
									[
										264775,
										264781
									],
									[
										264820,
										264826
									],
									[
										264879,
										264885
									],
									[
										264933,
										264939
									],
									[
										264962,
										264968
									],
									[
										265045,
										265051
									],
									[
										265067,
										265073
									],
									[
										265103,
										265109
									],
									[
										265125,
										265131
									],
									[
										265208,
										265214
									],
									[
										265234,
										265240
									],
									[
										265451,
										265457
									],
									[
										265608,
										265614
									],
									[
										265650,
										265656
									],
									[
										265670,
										265676
									],
									[
										265697,
										265703
									],
									[
										265723,
										265729
									],
									[
										265983,
										265989
									],
									[
										266142,
										266148
									],
									[
										266184,
										266190
									],
									[
										266204,
										266210
									],
									[
										266250,
										266256
									],
									[
										266261,
										266267
									],
									[
										266302,
										266308
									],
									[
										266475,
										266481
									],
									[
										266501,
										266507
									],
									[
										266669,
										266675
									],
									[
										266960,
										266966
									],
									[
										266985,
										266991
									],
									[
										267197,
										267203
									],
									[
										267212,
										267218
									],
									[
										267251,
										267257
									],
									[
										267291,
										267297
									],
									[
										267477,
										267483
									],
									[
										267490,
										267496
									],
									[
										267635,
										267641
									],
									[
										267673,
										267679
									],
									[
										267745,
										267751
									],
									[
										267915,
										267921
									],
									[
										267988,
										267994
									],
									[
										268183,
										268189
									],
									[
										268225,
										268231
									],
									[
										268247,
										268253
									],
									[
										268266,
										268272
									],
									[
										268309,
										268315
									],
									[
										268340,
										268346
									],
									[
										268355,
										268361
									],
									[
										268409,
										268415
									],
									[
										268417,
										268423
									],
									[
										268448,
										268454
									],
									[
										268469,
										268475
									],
									[
										268506,
										268512
									],
									[
										268583,
										268589
									],
									[
										268744,
										268750
									],
									[
										268765,
										268771
									],
									[
										268786,
										268792
									],
									[
										268839,
										268845
									],
									[
										268894,
										268900
									],
									[
										268923,
										268929
									],
									[
										268949,
										268955
									],
									[
										268993,
										268999
									],
									[
										269020,
										269026
									],
									[
										269036,
										269042
									],
									[
										269081,
										269087
									],
									[
										269089,
										269095
									],
									[
										269120,
										269126
									],
									[
										269137,
										269143
									],
									[
										269182,
										269188
									],
									[
										269203,
										269209
									],
									[
										269221,
										269227
									],
									[
										269266,
										269272
									],
									[
										269287,
										269293
									],
									[
										269305,
										269311
									],
									[
										269473,
										269479
									],
									[
										269498,
										269504
									],
									[
										269778,
										269784
									],
									[
										269820,
										269826
									],
									[
										270125,
										270131
									],
									[
										270398,
										270404
									],
									[
										270489,
										270495
									],
									[
										270792,
										270798
									],
									[
										270879,
										270885
									],
									[
										270931,
										270937
									],
									[
										271153,
										271159
									],
									[
										271404,
										271410
									],
									[
										271707,
										271713
									],
									[
										271821,
										271827
									],
									[
										271881,
										271887
									],
									[
										271903,
										271909
									],
									[
										271950,
										271956
									],
									[
										272216,
										272222
									],
									[
										272223,
										272229
									],
									[
										272625,
										272631
									],
									[
										272847,
										272853
									],
									[
										272925,
										272931
									],
									[
										273172,
										273178
									],
									[
										273627,
										273633
									],
									[
										274074,
										274080
									],
									[
										274271,
										274277
									],
									[
										274754,
										274760
									],
									[
										274923,
										274929
									],
									[
										275244,
										275250
									],
									[
										275569,
										275575
									],
									[
										275892,
										275898
									],
									[
										276213,
										276219
									],
									[
										276626,
										276632
									],
									[
										276795,
										276801
									],
									[
										277116,
										277122
									],
									[
										277441,
										277447
									],
									[
										277764,
										277770
									],
									[
										278085,
										278091
									],
									[
										278475,
										278481
									],
									[
										278526,
										278532
									],
									[
										278541,
										278547
									],
									[
										278600,
										278606
									],
									[
										278607,
										278613
									],
									[
										278637,
										278643
									],
									[
										278658,
										278664
									],
									[
										278916,
										278922
									],
									[
										278938,
										278944
									],
									[
										279152,
										279158
									],
									[
										279231,
										279237
									],
									[
										279246,
										279252
									],
									[
										279313,
										279319
									],
									[
										279553,
										279559
									],
									[
										279705,
										279711
									],
									[
										279789,
										279795
									],
									[
										279918,
										279924
									],
									[
										279941,
										279947
									],
									[
										280307,
										280313
									],
									[
										280761,
										280767
									],
									[
										281200,
										281206
									],
									[
										281587,
										281593
									],
									[
										281699,
										281705
									],
									[
										281728,
										281734
									],
									[
										282037,
										282043
									],
									[
										282071,
										282077
									],
									[
										282457,
										282463
									],
									[
										282757,
										282763
									],
									[
										283151,
										283157
									],
									[
										283320,
										283326
									],
									[
										283641,
										283647
									],
									[
										283966,
										283972
									],
									[
										284289,
										284295
									],
									[
										284610,
										284616
									],
									[
										285027,
										285033
									],
									[
										285196,
										285202
									],
									[
										285517,
										285523
									],
									[
										285842,
										285848
									],
									[
										286165,
										286171
									],
									[
										286486,
										286492
									],
									[
										286924,
										286930
									],
									[
										287215,
										287231
									],
									[
										287493,
										287509
									],
									[
										287865,
										287881
									],
									[
										288287,
										288303
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								287019,
								287019
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 7,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 45947.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "public/javascripts/controllers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23541,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 295.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "public/javascripts/html2canvas.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 88612,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 264.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "routes/routes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11025,
						"regions":
						{
						},
						"selection":
						[
							[
								6767,
								6767
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2242.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "routes/utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19974,
						"regions":
						{
						},
						"selection":
						[
							[
								13006,
								13006
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5135.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "views/artistpage.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3107,
						"regions":
						{
						},
						"selection":
						[
							[
								2654,
								2654
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 297.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/partial_artistpage.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1542,
						"regions":
						{
						},
						"selection":
						[
							[
								1417,
								1417
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "models/db.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 287,
						"regions":
						{
						},
						"selection":
						[
							[
								287,
								287
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/side_default.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 74.0
	},
	"project": "enchord.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"controller",
				"public/javascripts/controllers.js"
			],
			[
				"editband",
				"views/editband.ejs"
			],
			[
				"routes",
				"routes/routes.js"
			],
			[
				"utils.",
				"routes/utils.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Dropbox/princeton/14spring/cos461/assignment_3/tcp.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
